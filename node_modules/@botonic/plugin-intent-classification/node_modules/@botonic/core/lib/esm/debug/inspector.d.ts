import { Route, RouteMatcher } from '../models';
export declare class RouteInspector {
    routeMatched(_route: Route, _routeKey: string, _routeValue: RouteMatcher, _input: any): void;
    routeNotMatched(_route: Route, _routeKey: string, _routeValue: RouteMatcher, _input: any): void;
}
export declare class FocusRouteInspector extends RouteInspector {
    focusRoutePaths: string[] | null;
    focusOnMatches: boolean;
    constructor();
    focusOnlyOnRoutes(focusRoutePaths: string[]): this;
    focusOnlyOnMatches(): this;
    _isOnFocus(route: Route): boolean;
}
export declare class LogRouteInspector extends FocusRouteInspector {
    routeMatched(route: Route, routeKey: string, routeValue: RouteMatcher, inputValue: string): void;
    routeNotMatched(route: Route, routeKey: string, routeValue: RouteMatcher, inputValue: string): void;
    _routeName(obj: Route): string;
    _log(message: string, ...optionalParams: string[]): void;
}
export declare class Inspector {
    routeInspector: RouteInspector;
    constructor(routeInspector?: RouteInspector | undefined);
    getRouteInspector(): RouteInspector;
}
