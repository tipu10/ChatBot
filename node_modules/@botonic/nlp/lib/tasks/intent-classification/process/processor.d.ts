import { Sample } from '../../../dataset/input-data-parser';
import { LabelEncoder } from '../../../encode/label-encoder';
import { OneHotEncoder } from '../../../encode/one-hot-encoder';
import { Preprocessor } from '../../../preprocess/preprocessor';
import { InputData, OutputData } from './types';
export declare class Processor {
    readonly preprocessor: Preprocessor;
    readonly tokensEncoder: LabelEncoder;
    readonly intentEncoder: OneHotEncoder;
    constructor(preprocessor: Preprocessor, tokensEncoder: LabelEncoder, intentEncoder: OneHotEncoder);
    processSamples(samples: Sample[]): {
        x: InputData;
        y: OutputData;
    };
    processTexts(texts: string[]): InputData;
    private processText;
    private generateSequence;
    private maskUnknownTokens;
    private generateOutput;
}
