// eslint-disable-next-line import/named
import { parse } from 'fast-xml-parser';
import { decode } from 'html-entities';
import { MessageParsingFactory } from './factory';
export const TEXT_NODE_NAME = 'text';
export class BotonicOutputParser {
    constructor(factory = new MessageParsingFactory()) {
        this.factory = factory;
    }
    xmlToMessageEvents(html) {
        const jsonMessages = this.xmlToJSONMessages(html);
        return jsonMessages.map(msgToParse => this.factory.parse(msgToParse));
    }
    /**
     * Right now, when saving BotonicEvents to DataProvider, we need the standarized Botonic event
     * to be saved. This is, converting a botonic input like: '{id: 'msgId', data: 'rawData', payload: 'somePayload'}'
     * into a BotonicEvent with the expected properties.
     */
    parseFromUserInput(input) {
        return this.factory.parse(input);
    }
    xmlToJSONMessages(html) {
        return parse(html, BotonicOutputParser.OPTIONS).message;
    }
}
BotonicOutputParser.OPTIONS = {
    ignoreAttributes: false,
    attributeNamePrefix: '',
    textNodeName: TEXT_NODE_NAME,
    arrayMode: true,
    attrValueProcessor: a => decode(a),
};
//# sourceMappingURL=botonic-output-parser.js.map