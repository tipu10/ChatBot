"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DevApp = void 0;

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _lodash = _interopRequireDefault(require("lodash.merge"));

var _react = _interopRequireDefault(require("react"));

var _reactDom = require("react-dom");

var _constants = require("./constants");

var _reactBot = require("./react-bot");

var _dom = require("./util/dom");

var _webchatDev = require("./webchat/webchat-dev");

var _webchatApp = require("./webchat-app");

var _excluded = ["theme", "persistentMenu", "coverComponent", "blockInputs", "enableEmojiPicker", "enableAttachments", "enableUserInput", "enableAnimations", "shadowDOM", "hostId", "storage", "storageKey", "onInit", "onOpen", "onClose", "onMessage"],
    _excluded2 = ["theme", "persistentMenu", "coverComponent", "blockInputs", "enableEmojiPicker", "enableAttachments", "enableUserInput", "enableAnimations", "storage", "storageKey", "onInit", "onOpen", "onClose", "onMessage", "hostId"];

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2["default"])(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2["default"])(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2["default"])(this, result); }; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

var DevApp = /*#__PURE__*/function (_WebchatApp) {
  (0, _inherits2["default"])(DevApp, _WebchatApp);

  var _super = _createSuper(DevApp);

  function DevApp(_ref) {
    var _this;

    var _ref$theme = _ref.theme,
        theme = _ref$theme === void 0 ? {} : _ref$theme,
        persistentMenu = _ref.persistentMenu,
        coverComponent = _ref.coverComponent,
        blockInputs = _ref.blockInputs,
        enableEmojiPicker = _ref.enableEmojiPicker,
        enableAttachments = _ref.enableAttachments,
        enableUserInput = _ref.enableUserInput,
        enableAnimations = _ref.enableAnimations,
        shadowDOM = _ref.shadowDOM,
        hostId = _ref.hostId,
        storage = _ref.storage,
        storageKey = _ref.storageKey,
        onInit = _ref.onInit,
        onOpen = _ref.onOpen,
        onClose = _ref.onClose,
        onMessage = _ref.onMessage,
        botOptions = (0, _objectWithoutProperties2["default"])(_ref, _excluded);
    (0, _classCallCheck2["default"])(this, DevApp);
    _this = _super.call(this, {
      theme: theme,
      persistentMenu: persistentMenu,
      coverComponent: coverComponent,
      blockInputs: blockInputs,
      enableEmojiPicker: enableEmojiPicker,
      enableAttachments: enableAttachments,
      enableUserInput: enableUserInput,
      enableAnimations: enableAnimations,
      shadowDOM: shadowDOM,
      hostId: hostId,
      storage: storage,
      storageKey: storageKey,
      onInit: onInit,
      onOpen: onOpen,
      onClose: onClose,
      onMessage: onMessage
    });
    _this.bot = new _reactBot.ReactBot(_objectSpread({}, botOptions));
    return _this;
  }

  (0, _createClass2["default"])(DevApp, [{
    key: "getComponent",
    value: function getComponent(host) {
      var _this2 = this;

      var optionsAtRuntime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      var _optionsAtRuntime$the = optionsAtRuntime.theme,
          theme = _optionsAtRuntime$the === void 0 ? {} : _optionsAtRuntime$the,
          persistentMenu = optionsAtRuntime.persistentMenu,
          coverComponent = optionsAtRuntime.coverComponent,
          blockInputs = optionsAtRuntime.blockInputs,
          enableEmojiPicker = optionsAtRuntime.enableEmojiPicker,
          enableAttachments = optionsAtRuntime.enableAttachments,
          enableUserInput = optionsAtRuntime.enableUserInput,
          enableAnimations = optionsAtRuntime.enableAnimations,
          storage = optionsAtRuntime.storage,
          storageKey = optionsAtRuntime.storageKey,
          onInit = optionsAtRuntime.onInit,
          onOpen = optionsAtRuntime.onOpen,
          onClose = optionsAtRuntime.onClose,
          onMessage = optionsAtRuntime.onMessage,
          hostId = optionsAtRuntime.hostId,
          webchatOptions = (0, _objectWithoutProperties2["default"])(optionsAtRuntime, _excluded2);
      theme = (0, _lodash["default"])(this.theme, theme);
      persistentMenu = persistentMenu || this.persistentMenu;
      coverComponent = coverComponent || this.coverComponent;
      blockInputs = blockInputs || this.blockInputs;
      enableEmojiPicker = enableEmojiPicker || this.enableEmojiPicker;
      enableAttachments = enableAttachments || this.enableAttachments;
      enableUserInput = enableUserInput || this.enableUserInput;
      enableAnimations = enableAnimations || this.enableAnimations;
      storage = storage || this.storage;
      storageKey = storageKey || this.storageKey;
      this.onInit = onInit || this.onInit;
      this.onOpen = onOpen || this.onOpen;
      this.onClose = onClose || this.onClose;
      this.onMessage = onMessage || this.onMessage;
      this.hostId = hostId || this.hostId;
      this.createRootElement(host);
      return /*#__PURE__*/_react["default"].createElement(_webchatDev.WebchatDev, (0, _extends2["default"])({}, webchatOptions, {
        ref: this.webchatRef,
        host: this.host,
        shadowDOM: this.shadowDOM,
        theme: theme,
        persistentMenu: persistentMenu,
        coverComponent: coverComponent,
        blockInputs: blockInputs,
        enableEmojiPicker: enableEmojiPicker,
        enableAttachments: enableAttachments,
        enableUserInput: enableUserInput,
        enableAnimations: enableAnimations,
        storage: storage,
        storageKey: storageKey,
        getString: function getString(stringId, session) {
          return _this2.bot.getString(stringId, session);
        },
        setLocale: function setLocale(locale, session) {
          return _this2.bot.setLocale(locale, session);
        },
        onInit: function onInit() {
          return _this2.onInitWebchat.apply(_this2, arguments);
        },
        onOpen: function onOpen() {
          return _this2.onOpenWebchat.apply(_this2, arguments);
        },
        onClose: function onClose() {
          return _this2.onCloseWebchat.apply(_this2, arguments);
        },
        onUserInput: function onUserInput() {
          return _this2.onUserInput.apply(_this2, arguments);
        }
      }));
    }
  }, {
    key: "render",
    value: function render(dest) {
      var _this3 = this;

      var optionsAtRuntime = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      (0, _dom.onDOMLoaded)(function () {
        (0, _reactDom.render)(_this3.getComponent(dest, optionsAtRuntime), _this3.getReactMountNode(dest));
      });
    }
  }, {
    key: "onUserInput",
    value: function () {
      var _onUserInput = (0, _asyncToGenerator2["default"])( /*#__PURE__*/_regenerator["default"].mark(function _callee(_ref2) {
        var _this4 = this;

        var input, session, lastRoutePath, resp;
        return _regenerator["default"].wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                input = _ref2.input, session = _ref2.session, lastRoutePath = _ref2.lastRoutePath;
                this.onMessage && this.onMessage(this, {
                  from: _constants.SENDERS.user,
                  message: input
                });
                _context.next = 4;
                return this.bot.input({
                  input: input,
                  session: session,
                  lastRoutePath: lastRoutePath
                });

              case 4:
                resp = _context.sent;
                this.onMessage && resp.response.map(function (r) {
                  return _this4.onMessage(_this4, {
                    from: _constants.SENDERS.bot,
                    message: r
                  });
                });
                this.webchatRef.current.addBotResponse(resp);

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function onUserInput(_x) {
        return _onUserInput.apply(this, arguments);
      }

      return onUserInput;
    }()
  }]);
  return DevApp;
}(_webchatApp.WebchatApp);

exports.DevApp = DevApp;
//# sourceMappingURL=dev-app.js.map