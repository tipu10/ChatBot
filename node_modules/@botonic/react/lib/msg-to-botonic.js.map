{"version":3,"sources":["../src/msg-to-botonic.jsx"],"names":["msgToBotonic","msg","customMessageTypes","display","find","mt","customTypeName","data","deserialize","e","console","log","textToBotonic","elements","key","elementsParse","image","undefined","video","audio","document","lat","location","latitude","long","longitude","buttons","buttonsParse","text","warn","type","rndStr","Math","random","toString","msgsToBotonic","msgs","Array","isArray","map","i","txt","String","replies","length","keyboard","quickrepliesParse","img","pic","image_url","title","subtitle","button","b","props","payload","path","url","messenger_extensions","target","webview","disabledProps","ButtonsDisabler","constructBrowserProps","el","label"],"mappings":"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","sourcesContent":["import React from 'react'\n\nimport {\n  isAudio,\n  isButtonMessage,\n  isCarousel,\n  isCustom,\n  isDocument,\n  isImage,\n  isLocation,\n  isText,\n  isVideo,\n} from '../src/message-utils'\nimport { Audio } from './components/audio'\nimport { Button } from './components/button'\nimport { ButtonsDisabler } from './components/buttons-disabler'\nimport { Carousel } from './components/carousel'\nimport { Document } from './components/document'\nimport { Element } from './components/element'\nimport { Image } from './components/image'\nimport { Location } from './components/location'\nimport { Pic } from './components/pic'\nimport { Reply } from './components/reply'\nimport { Subtitle } from './components/subtitle'\nimport { Text } from './components/text'\nimport { Title } from './components/title'\nimport { Video } from './components/video'\n\n/**\n *\n * @param msg {object}\n * @param customMessageTypes {{customTypeName}[]?}\n * @return {React.ReactNode}\n */\nexport function msgToBotonic(msg, customMessageTypes) {\n  delete msg.display\n  if (isCustom(msg)) {\n    try {\n      return customMessageTypes\n        .find(mt => mt.customTypeName === msg.data.customTypeName)\n        .deserialize(msg)\n    } catch (e) {\n      console.log(e)\n    }\n  } else if (isText(msg)) {\n    return textToBotonic(msg)\n  } else if (isCarousel(msg)) {\n    const elements = msg.elements || msg.data.elements\n    return (\n      <Carousel {...msg} key={msg.key}>\n        {elementsParse(elements)}\n      </Carousel>\n    )\n  } else if (isImage(msg)) {\n    return (\n      <Image\n        key={msg.key}\n        {...msg}\n        src={msg.data.image != undefined ? msg.data.image : msg.data}\n      />\n    )\n  } else if (isVideo(msg)) {\n    return (\n      <Video\n        {...msg}\n        src={msg.data.video != undefined ? msg.data.video : msg.data}\n      />\n    )\n  } else if (isAudio(msg)) {\n    return (\n      <Audio\n        {...msg}\n        src={msg.data.audio != undefined ? msg.data.audio : msg.data}\n      />\n    )\n  } else if (isDocument(msg)) {\n    return (\n      <Document\n        {...msg}\n        src={msg.data.document != undefined ? msg.data.document : msg.data}\n      />\n    )\n  } else if (isLocation(msg)) {\n    const lat = msg.data ? msg.data.location.lat : msg.latitude\n    const long = msg.data ? msg.data.location.long : msg.longitude\n    return <Location {...msg} lat={lat} long={long} />\n  } else if (isButtonMessage(msg)) {\n    const buttons = buttonsParse(msg.buttons)\n    return (\n      <>\n        <Text {...msg}>\n          {msg.text}\n          {buttons}\n        </Text>\n      </>\n    )\n  }\n  console.warn(`Not converting message of type ${msg.type}`)\n  return null\n}\n\nfunction rndStr() {\n  return Math.random().toString()\n}\n\n/**\n * @param msgs {object|object[]}\n * @param customMessageTypes {{customTypeName}[]?}\n * @return {React.ReactNode}\n */\nexport function msgsToBotonic(msgs, customMessageTypes) {\n  if (Array.isArray(msgs)) {\n    return (\n      <>\n        {msgs.map((msg, i) => {\n          if (msg.key == null) {\n            msg.key = `msg${i}`\n          }\n          return msgToBotonic(msg, customMessageTypes)\n        })}\n      </>\n    )\n  }\n  return msgToBotonic(msgs, customMessageTypes)\n}\n\nfunction textToBotonic(msg) {\n  const txt =\n    msg.data && msg.data.text != undefined ? msg.data.text : String(msg.data)\n  if (\n    (msg.replies && msg.replies.length) ||\n    (msg.keyboard && msg.keyboard.length)\n  )\n    return (\n      <Text {...msg} key={msg.key}>\n        {txt}\n        {quickrepliesParse(msg)}\n      </Text>\n    )\n  if (msg.buttons && msg.buttons.length)\n    return (\n      <Text {...msg} key={msg.key}>\n        {txt}\n        {buttonsParse(msg.buttons)}\n      </Text>\n    )\n  return (\n    <Text {...msg} key={msg.key}>\n      {txt}\n    </Text>\n  )\n}\n\nfunction elementsParse(elements) {\n  return elements.map((e, i) => (\n    <Element key={i}>\n      <Pic src={e.img || e.pic || e.image_url} />\n      <Title>{e.title}</Title>\n      <Subtitle>{e.subtitle}</Subtitle>\n      {buttonsParse(e.button || e.buttons)}\n    </Element>\n  ))\n}\n\nfunction buttonsParse(buttons) {\n  return buttons.map((b, i) => {\n    const props = b.props || b\n    let payload = props.payload\n    if (props.path) payload = `__PATH_PAYLOAD__${props.path}`\n    const url = props.messenger_extensions ? null : props.url\n    const target = props.messenger_extensions ? null : props.target\n    const title = props.title\n    const webview = props.messenger_extensions ? props.url : props.webview\n    const disabledProps = ButtonsDisabler.constructBrowserProps(props)\n    return (\n      <Button\n        key={i}\n        payload={payload}\n        url={url}\n        target={target}\n        webview={webview}\n        {...disabledProps}\n      >\n        {title}\n      </Button>\n    )\n  })\n}\n\nfunction quickrepliesParse(msg) {\n  let replies = null\n  if (msg.replies) {\n    replies = msg.replies.map((el, i) => {\n      let payload = el.payload\n      if (el.path) payload = `__PATH_PAYLOAD__${el.path}`\n      return (\n        <Reply key={i} payload={payload}>\n          {el.text}\n        </Reply>\n      )\n    })\n  }\n  if (msg.keyboard) {\n    replies = msg.keyboard.map((el, i) => (\n      <Reply key={i} payload={el.data}>\n        {el.label}\n      </Reply>\n    ))\n  }\n  return replies\n}\n"],"file":"msg-to-botonic.js"}