{"version":3,"sources":["../src/contexts.jsx"],"names":["RequestContext","React","createContext","getString","setLocale","session","params","input","defaultDelay","defaultTyping","WebchatContext","sendText","text","sendAttachment","attachment","sendPayload","payload","sendInput","setReplies","replies","openWebview","webviewComponent","addMessage","message","updateMessage","updateReplies","updateLatestInput","closeWebview","toggleWebchat","getThemeProperty","property","undefined","resolveCase","theme","webchatState","webchatInitialState","updateWebchatDevSettings","settings","updateUser","user"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEO,IAAMA,cAAc,gBAAGC,kBAAMC,aAAN,CAAoB;AAChDC,EAAAA,SAAS,EAAE;AAAA,WAAM,EAAN;AAAA,GADqC;AAEhDC,EAAAA,SAAS,EAAE;AAAA,WAAM,EAAN;AAAA,GAFqC;AAGhDC,EAAAA,OAAO,EAAE,EAHuC;AAIhDC,EAAAA,MAAM,EAAE,EAJwC;AAKhDC,EAAAA,KAAK,EAAE,EALyC;AAMhDC,EAAAA,YAAY,EAAE,CANkC;AAOhDC,EAAAA,aAAa,EAAE;AAPiC,CAApB,CAAvB;;;;AAUA,IAAMC,cAAc,gBAAGT,kBAAMC,aAAN,CAAoB;AAChDS,EAAAA,QAAQ,EAAE,kBAAAC,IAAI,EAAI,CAAE,CAD4B;AAEhDC,EAAAA,cAAc,EAAE,wBAAAC,UAAU,EAAI,CAAE,CAFgB;AAGhDC,EAAAA,WAAW,EAAE,qBAAAC,OAAO,EAAI,CAAE,CAHsB;AAIhDC,EAAAA,SAAS,EAAE,mBAAAV,KAAK,EAAI,CAAE,CAJ0B;AAKhDW,EAAAA,UAAU,EAAE,oBAAAC,OAAO,EAAI,CAAE,CALuB;AAMhDC,EAAAA,WAAW,EAAE,qBAAAC,gBAAgB,EAAI,CAAE,CANa;AAOhDC,EAAAA,UAAU,EAAE,oBAAAC,OAAO,EAAI,CAAE,CAPuB;AAQhDC,EAAAA,aAAa,EAAE,uBAAAD,OAAO,EAAI,CAAE,CARoB;AAShDE,EAAAA,aAAa,EAAE,uBAAAN,OAAO,EAAI,CAAE,CAToB;AAUhDO,EAAAA,iBAAiB,EAAE,2BAAAnB,KAAK,EAAI,CAAE,CAVkB;AAWhDoB,EAAAA,YAAY,EAAE,wBAAM,CAAE,CAX0B;AAYhDC,EAAAA,aAAa,EAAE,yBAAM,CAAE,CAZyB;AAahDC,EAAAA,gBAAgB,EAAE,0BAAAC,QAAQ;AAAA,WAAIC,SAAJ;AAAA,GAbsB;AAaP;AACzCC,EAAAA,WAAW,EAAE,uBAAM,CAAE,CAd2B;AAehDC,EAAAA,KAAK,EAAE,EAfyC;AAgBhDC,EAAAA,YAAY,EAAEC,0BAhBkC;AAiBhDC,EAAAA,wBAAwB,EAAE,kCAAAC,QAAQ,EAAI;AACpC,WAAO,EAAP;AACD,GAnB+C;AAoBhDC,EAAAA,UAAU,EAAE,oBAAAC,IAAI,EAAI,CAAE;AApB0B,CAApB,CAAvB","sourcesContent":["import React from 'react'\n\nimport { webchatInitialState } from './webchat/hooks'\n\nexport const RequestContext = React.createContext({\n  getString: () => '',\n  setLocale: () => '',\n  session: {},\n  params: {},\n  input: {},\n  defaultDelay: 0,\n  defaultTyping: 0,\n})\n\nexport const WebchatContext = React.createContext({\n  sendText: text => {},\n  sendAttachment: attachment => {},\n  sendPayload: payload => {},\n  sendInput: input => {},\n  setReplies: replies => {},\n  openWebview: webviewComponent => {},\n  addMessage: message => {},\n  updateMessage: message => {},\n  updateReplies: replies => {},\n  updateLatestInput: input => {},\n  closeWebview: () => {},\n  toggleWebchat: () => {},\n  getThemeProperty: property => undefined, // used to retrieve a specific property of the theme defined by the developer in his 'webchat/index.js'\n  resolveCase: () => {},\n  theme: {},\n  webchatState: webchatInitialState,\n  updateWebchatDevSettings: settings => {\n    return {}\n  },\n  updateUser: user => {},\n})\n"],"file":"contexts.js"}