{"version":3,"sources":["../../src/components/raw.jsx"],"names":["RawDataButton","styled","div","COLORS","CURIOUS_BLUE","SOLID_WHITE_ALPHA_0_8","Popover","LIGHT_GRAY","serialize","rawProps","data","alt","Raw","props","content","children","JSON","stringify","isOpen","setIsOpen","ROLES","RAW_MESSAGE","INPUT","RAW"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;AAEA,IAAMA,aAAa,GAAGC,6BAAOC,GAAV,mQAEGC,kBAAOC,YAFV,EAMRD,kBAAOE,qBANC,CAAnB;;AAWA,IAAMC,OAAO,GAAGL,6BAAOC,GAAV,qOAISC,kBAAOI,UAJhB,CAAb;;AAWA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,QAAQ,EAAI;AAC5B,SAAO;AAAEC,IAAAA,IAAI,EAAED,QAAQ,CAACC,IAAjB;AAAuBC,IAAAA,GAAG,EAAEF,QAAQ,CAACE;AAArC,GAAP;AACD,CAFD;;AAIO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAI;AAC1B,MAAIC,OAAO,GAAGD,KAAK,CAACE,QAApB;AACA,MAAML,IAAI,GAAGM,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACH,IAArB,EAA2B,IAA3B,EAAiC,GAAjC,CAAb;;AACA,kBAA4B,qBAAS,KAAT,CAA5B;AAAA;AAAA,MAAOQ,MAAP;AAAA,MAAeC,SAAf;;AACA,MAAI,sBAAJ,EACEL,OAAO,gBACL,+EACE,6CAAMD,KAAK,CAACF,GAAZ,CADF,eAEE,gCAAC,aAAD;AAAe,IAAA,OAAO,EAAE;AAAA,aAAMQ,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA;AAAxB,+BACW,+CAAQA,MAAM,GAAG,GAAH,GAAS,GAAvB,CADX,CAFF,EAKGA,MAAM,iBACL,gCAAC,OAAD,qBACE,6CAAMR,IAAN,CADF,CANJ,CADF;AAaF,sBACE,gCAAC,gBAAD;AACE,IAAA,IAAI,EAAEU,iBAAMC,WADd;AAEE,IAAA,IAAI,EAAEb,SAAS,CAACK,KAAD;AAFjB,KAGMA,KAHN;AAIE,IAAA,IAAI,EAAEH,IAJR;AAKE,IAAA,IAAI,EAAEY,YAAMC;AALd,MAOGT,OAPH,CADF;AAWD,CA7BM;;;AA+BPF,GAAG,CAACJ,SAAJ,GAAgBA,SAAhB","sourcesContent":["import { INPUT, isBrowser } from '@botonic/core'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\n\nimport { COLORS, ROLES } from '../constants'\nimport { Message } from './message'\n\nconst RawDataButton = styled.div`\n  align-self: flex-start;\n  background-color: ${COLORS.CURIOUS_BLUE};\n  padding: 4px;\n  margin: 4px 0px;\n  cursor: pointer;\n  color: ${COLORS.SOLID_WHITE_ALPHA_0_8};\n  font-size: 10px;\n  border-radius: 2px;\n`\n\nconst Popover = styled.div`\n  max-width: 100%;\n  max-height: 500px;\n  overflow: auto;\n  background-color: ${COLORS.LIGHT_GRAY};\n  padding: 10px;\n  pre {\n    margin: 0px;\n  }\n`\n\nconst serialize = rawProps => {\n  return { data: rawProps.data, alt: rawProps.alt }\n}\n\nexport const Raw = props => {\n  let content = props.children\n  const data = JSON.stringify(props.data, null, ' ')\n  const [isOpen, setIsOpen] = useState(false)\n  if (isBrowser())\n    content = (\n      <>\n        <div>{props.alt}</div>\n        <RawDataButton onClick={() => setIsOpen(!isOpen)}>\n          RAW DATA <small>{isOpen ? '▲' : '▼'}</small>\n        </RawDataButton>\n        {isOpen && (\n          <Popover>\n            <pre>{data}</pre>\n          </Popover>\n        )}\n      </>\n    )\n  return (\n    <Message\n      role={ROLES.RAW_MESSAGE}\n      json={serialize(props)}\n      {...props}\n      data={data}\n      type={INPUT.RAW}\n    >\n      {content}\n    </Message>\n  )\n}\n\nRaw.serialize = serialize\n"],"file":"raw.js"}