{"version":3,"sources":["../../src/components/document.jsx"],"names":["StyledButton","styled","a","serialize","documentProps","document","src","Document","props","content","children","WebchatContext","getThemeProperty","documentDownload","WEBCHAT","CUSTOM_PROPERTIES","from","style","text","ROLES","DOCUMENT_MESSAGE","INPUT","DOCUMENT"],"mappings":";;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,6BAAOC,CAAV,iYAAlB;;AAkBA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,aAAa,EAAI;AACjC,SAAO;AAAEC,IAAAA,QAAQ,EAAED,aAAa,CAACE;AAA1B,GAAP;AACD,CAFD;;AAIO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAC/B,MAAIC,OAAO,GAAGD,KAAK,CAACE,QAApB;;AAEA,oBAA6B,uBAAWC,wBAAX,CAA7B;AAAA,MAAQC,gBAAR,eAAQA,gBAAR;;AACA,MAAIC,gBAAgB,GAAGD,gBAAgB,CACrCE,mBAAQC,iBAAR,CAA0BF,gBADW,EAErC,EAFqC,CAAvC;AAIA,MAAI,OAAOA,gBAAP,KAA4B,UAAhC,EACEA,gBAAgB,GAAGA,gBAAgB,CAACL,KAAK,CAACQ,IAAP,CAAnC;;AAEF,MAAI,sBAAJ,EAAiB;AACfP,IAAAA,OAAO,gBACL,gCAAC,YAAD;AACE,MAAA,IAAI,EAAED,KAAK,CAACF,GADd;AAEE,MAAA,MAAM,EAAC,QAFT;AAGE,MAAA,GAAG,EAAC,YAHN;AAIE,MAAA,KAAK,oBACAO,gBAAgB,CAACI,KADjB;AAJP,OAQGJ,gBAAgB,CAACK,IAAjB,IAAyB,UAR5B,CADF;AAYD;;AAED,sBACE,gCAAC,gBAAD;AACE,IAAA,IAAI,EAAEC,iBAAMC,gBADd;AAEE,IAAA,IAAI,EAAEjB,SAAS,CAACK,KAAD;AAFjB,KAGMA,KAHN;AAIE,IAAA,IAAI,EAAEa,YAAMC;AAJd,MAMGb,OANH,CADF;AAUD,CApCM;;;AAsCPF,QAAQ,CAACJ,SAAT,GAAqBA,SAArB","sourcesContent":["import { INPUT, isBrowser } from '@botonic/core'\nimport React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { ROLES, WEBCHAT } from '../constants'\nimport { WebchatContext } from '../contexts'\nimport { Message } from './message'\n\nconst StyledButton = styled.a`\n  display: block;\n  height: 25px;\n  background-color: #f0f0f0;\n  padding: 10px;\n  text-align: center;\n  border-radius: 5px;\n  color: black;\n  font-weight: bold;\n  line-height: 25px;\n  text-decoration: none;\n  border: 1px solid black;\n  opacity: 0.9;\n  &:hover {\n    opacity: 1;\n  }\n`\n\nconst serialize = documentProps => {\n  return { document: documentProps.src }\n}\n\nexport const Document = props => {\n  let content = props.children\n\n  const { getThemeProperty } = useContext(WebchatContext)\n  let documentDownload = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.documentDownload,\n    {}\n  )\n  if (typeof documentDownload === 'function')\n    documentDownload = documentDownload(props.from)\n\n  if (isBrowser()) {\n    content = (\n      <StyledButton\n        href={props.src}\n        target='_blank'\n        rel='noreferrer'\n        style={{\n          ...documentDownload.style,\n        }}\n      >\n        {documentDownload.text || 'Download'}\n      </StyledButton>\n    )\n  }\n\n  return (\n    <Message\n      role={ROLES.DOCUMENT_MESSAGE}\n      json={serialize(props)}\n      {...props}\n      type={INPUT.DOCUMENT}\n    >\n      {content}\n    </Message>\n  )\n}\n\nDocument.serialize = serialize\n"],"file":"document.js"}