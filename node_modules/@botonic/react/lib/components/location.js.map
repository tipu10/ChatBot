{"version":3,"sources":["../../src/components/location.jsx"],"names":["Link","styled","a","serialize","locationProps","location","lat","Location","props","parseFloat","long","renderBrowser","locationUrl","INPUT","LOCATION","text","renderNode"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;;;AAEA,IAAMA,IAAI,GAAGC,6BAAOC,CAAV,0JAAV;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,aAAa,EAAI;AACjC,SAAO;AAAEC,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,GAAG,EAAEF,aAAa,CAACE,GAArB;AAA0B,cAAMF,aAAa;AAA7C;AAAZ,GAAP;AACD,CAFD;;AAIO,IAAMG,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK,EAAI;AAC/B,MAAMF,GAAG,GAAGG,UAAU,CAACD,KAAK,CAACF,GAAP,CAAtB;;AACA,MAAMI,KAAI,GAAGD,UAAU,CAACD,KAAK,QAAN,CAAvB;;AACA,MAAMG,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAMC,WAAW,6DAAsDN,GAAtD,cAA6DI,KAA7D,CAAjB;AACA,wBACE,gCAAC,gBAAD;AAAS,MAAA,IAAI,EAAEP,SAAS,CAACK,KAAD;AAAxB,OAAqCA,KAArC;AAA4C,MAAA,IAAI,EAAEK,YAAMC;AAAxD,qBACE,gCAAC,IAAD;AAAM,MAAA,IAAI,EAAEF,WAAZ;AAAyB,MAAA,MAAM,EAAC,QAAhC;AAAyC,MAAA,GAAG,EAAC;AAA7C,OACGJ,KAAK,CAACO,IAAN,IAAc,eADjB,CADF,CADF;AAOD,GATD;;AAWA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,wBACE;AAAS,MAAA,IAAI,EAAEH,YAAMC;AAArB,oBACE,6CAAMR,GAAN,CADF,eAEE,8CAAOI,KAAP,CAFF,CADF;AAMD,GAPD;;AASA,SAAO,6BAAgB;AAAEC,IAAAA,aAAa,EAAbA,aAAF;AAAiBK,IAAAA,UAAU,EAAVA;AAAjB,GAAhB,CAAP;AACD,CAxBM;;;AA0BPT,QAAQ,CAACJ,SAAT,GAAqBA,SAArB","sourcesContent":["import { INPUT } from '@botonic/core'\nimport React from 'react'\nimport styled from 'styled-components'\n\nimport { renderComponent } from '../util/react'\nimport { Message } from './message'\n\nconst Link = styled.a`\n  text-decoration: none;\n  font-weight: bold;\n  target: blank;\n`\n\nconst serialize = locationProps => {\n  return { location: { lat: locationProps.lat, long: locationProps.long } }\n}\n\nexport const Location = props => {\n  const lat = parseFloat(props.lat)\n  const long = parseFloat(props.long)\n  const renderBrowser = () => {\n    const locationUrl = `https://www.google.com/maps/search/?api=1&query=${lat},${long}`\n    return (\n      <Message json={serialize(props)} {...props} type={INPUT.LOCATION}>\n        <Link href={locationUrl} target='_blank' rel='noopener noreferrer'>\n          {props.text || 'Open Location'}\n        </Link>\n      </Message>\n    )\n  }\n\n  const renderNode = () => {\n    return (\n      <message type={INPUT.LOCATION}>\n        <lat>{lat}</lat>\n        <long>{long}</long>\n      </message>\n    )\n  }\n\n  return renderComponent({ renderBrowser, renderNode })\n}\n\nLocation.serialize = serialize\n"],"file":"location.js"}