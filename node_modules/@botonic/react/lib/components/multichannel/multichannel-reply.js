"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MultichannelReply = void 0;

var _react = _interopRequireWildcard(require("react"));

var _contexts = require("../../contexts");

var _reply = require("../reply");

var _multichannelUtils = require("./multichannel-utils");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var MultichannelReply = function MultichannelReply(props) {
  var requestContext = (0, _react.useContext)(_contexts.RequestContext);

  var hasPath = function hasPath() {
    return Boolean(props.path);
  };

  var hasPayload = function hasPayload() {
    return Boolean(props.payload);
  };

  var getText = function getText() {
    return "".concat(props.children);
  };

  if ((0, _multichannelUtils.isWhatsapp)(requestContext)) {
    if (hasPath() || hasPayload()) return "".concat(getText());
    return null;
  } else {
    return /*#__PURE__*/_react["default"].createElement(_reply.Reply, props, props.children);
  }
};

exports.MultichannelReply = MultichannelReply;
//# sourceMappingURL=multichannel-reply.js.map