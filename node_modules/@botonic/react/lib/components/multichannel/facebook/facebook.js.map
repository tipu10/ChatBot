{"version":3,"sources":["../../../../src/components/multichannel/facebook/facebook.jsx"],"names":["MAX_CHARACTERS_FACEBOOK","MultichannelFacebook","props","originalText","length","texts","splitText","lastText","pop","getNewProps","propsLastText","propsWithoutChildren","lines","split","initialText","shift","index","forEach","currentText","push","concat","children","Array","isArray","filter","e","type"],"mappings":";;;;;;;;;;;;;;;;;;;AAAO,IAAMA,uBAAuB,GAAG,GAAhC;;;IAEMC,oB;AACX,kCAAc;AAAA;AAAE;;;;WAEhB,qBAAYC,KAAZ,EAAmBC,YAAnB,EAAiC;AAC/B,UAAIA,YAAY,CAACC,MAAb,GAAsBJ,uBAA1B,EAAmD;AACjD,YAAMK,KAAK,GAAG,KAAKC,SAAL,CAAeH,YAAf,CAAd;AACA,YAAMI,QAAQ,GAAGF,KAAK,CAACG,GAAN,EAAjB;;AACA,gCAAgD,KAAKC,WAAL,CAC9CP,KAD8C,EAE9CK,QAF8C,CAAhD;AAAA,YAAQG,aAAR,qBAAQA,aAAR;AAAA,YAAuBC,oBAAvB,qBAAuBA,oBAAvB;;AAIA,eAAO;AAAEN,UAAAA,KAAK,EAALA,KAAF;AAASK,UAAAA,aAAa,EAAbA,aAAT;AAAwBC,UAAAA,oBAAoB,EAApBA;AAAxB,SAAP;AACD;;AACD,aAAO;AAAED,QAAAA,aAAa,EAAER;AAAjB,OAAP;AACD;;;WAED,mBAAUC,YAAV,EAAwB;AACtB,UAAMS,KAAK,GAAGT,YAAY,CAACU,KAAb,CAAmB,IAAnB,CAAd;AACA,UAAMC,WAAW,GAAGF,KAAK,CAACG,KAAN,EAApB;AACA,UAAMV,KAAK,GAAG,CAACS,WAAD,CAAd;AACA,UAAIE,KAAK,GAAG,CAAZ;AACAJ,MAAAA,KAAK,CAACK,OAAN,CAAc,UAAAC,WAAW,EAAI;AAC3B,YAAIb,KAAK,CAACW,KAAD,CAAL,CAAaZ,MAAb,GAAsBc,WAAW,CAACd,MAAlC,GAA2CJ,uBAA/C,EAAwE;AACtEgB,UAAAA,KAAK;AACLX,UAAAA,KAAK,CAACc,IAAN,CAAWD,WAAX;AACD,SAHD,MAGO;AACLb,UAAAA,KAAK,CAACW,KAAD,CAAL,GAAeX,KAAK,CAACW,KAAD,CAAL,CAAaI,MAAb,CAAoB,IAApB,EAA0BF,WAA1B,CAAf;AACD;AACF,OAPD;AAQA,aAAOb,KAAP;AACD,K,CAED;;;;WACA,qBAAYH,KAAZ,EAAmBK,QAAnB,EAA6B;AAC3B,UAAMG,aAAa,qBAAQR,KAAR,CAAnB;;AACAQ,MAAAA,aAAa,CAACW,QAAd,GAAyB,CAACd,QAAD,CAAzB;;AACA,UAAIe,KAAK,CAACC,OAAN,CAAcrB,KAAK,CAACmB,QAApB,CAAJ,EAAmC;AACjCnB,QAAAA,KAAK,CAACmB,QAAN,CACGG,MADH,CACU,UAAAC,CAAC;AAAA,iBAAIA,CAAC,CAACC,IAAN;AAAA,SADX,EAEGT,OAFH,CAEW,UAAAQ,CAAC;AAAA,iBAAIf,aAAa,CAACW,QAAd,CAAuBF,IAAvB,CAA4BM,CAA5B,CAAJ;AAAA,SAFZ;AAGD;;AACD,UAAMd,oBAAoB,qBAAQT,KAAR,CAA1B;;AACA,aAAOS,oBAAoB,CAACU,QAA5B;AACA,aAAO;AAAEX,QAAAA,aAAa,EAAbA,aAAF;AAAiBC,QAAAA,oBAAoB,EAApBA;AAAjB,OAAP;AACD","sourcesContent":["export const MAX_CHARACTERS_FACEBOOK = 640\n\nexport class MultichannelFacebook {\n  constructor() {}\n\n  convertText(props, originalText) {\n    if (originalText.length > MAX_CHARACTERS_FACEBOOK) {\n      const texts = this.splitText(originalText)\n      const lastText = texts.pop()\n      const { propsLastText, propsWithoutChildren } = this.getNewProps(\n        props,\n        lastText\n      )\n      return { texts, propsLastText, propsWithoutChildren }\n    }\n    return { propsLastText: props }\n  }\n\n  splitText(originalText) {\n    const lines = originalText.split('\\n')\n    const initialText = lines.shift()\n    const texts = [initialText]\n    let index = 0\n    lines.forEach(currentText => {\n      if (texts[index].length + currentText.length > MAX_CHARACTERS_FACEBOOK) {\n        index++\n        texts.push(currentText)\n      } else {\n        texts[index] = texts[index].concat('\\n', currentText)\n      }\n    })\n    return texts\n  }\n\n  // modifies the props to keep the children only for the last text message, this message will be the one with buttons and replies\n  getNewProps(props, lastText) {\n    const propsLastText = { ...props }\n    propsLastText.children = [lastText]\n    if (Array.isArray(props.children)) {\n      props.children\n        .filter(e => e.type)\n        .forEach(e => propsLastText.children.push(e))\n    }\n    const propsWithoutChildren = { ...props }\n    delete propsWithoutChildren.children\n    return { propsLastText, propsWithoutChildren }\n  }\n}\n"],"file":"facebook.js"}