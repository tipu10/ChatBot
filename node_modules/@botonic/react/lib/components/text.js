"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Text = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _core = require("@botonic/core");

var _react = _interopRequireWildcard(require("react"));

var _react2 = require("../util/react");

var _markdown = require("./markdown");

var _message = require("./message");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var serializeText = function serializeText(children) {
  children = Array.isArray(children) ? children : [children];
  var text = children.filter(function (e) {
    return !e.type;
  }).map(function (e) {
    if (Array.isArray(e)) return serializeText(e);else return String(e);
  }).join('');
  return text;
};

var serialize = function serialize(textProps) {
  if (!textProps.markdown) return {
    text: serializeText(textProps.children)
  };
  return {
    text: (0, _markdown.serializeMarkdown)(textProps.children)
  };
};
/**
 *
 * @param {TextProps} props
 * @returns {JSX.Element}
 */


var Text = function Text(props) {
  var defaultTextProps = {
    markdown: props.markdown === undefined ? true : props.markdown
  };
  var textProps = (0, _react2.mapObjectNonBooleanValues)(_objectSpread(_objectSpread(_objectSpread({}, props), defaultTextProps), {
    children: _react.Children.toArray(props.children)
  }));
  if (!textProps.markdown) return /*#__PURE__*/_react["default"].createElement(_message.Message, (0, _extends2["default"])({
    json: serialize(textProps)
  }, textProps, {
    type: _core.INPUT.TEXT
  }), textProps.children);
  return /*#__PURE__*/_react["default"].createElement(_message.Message, (0, _extends2["default"])({
    json: serialize(textProps)
  }, textProps, {
    type: _core.INPUT.TEXT
  }), (0, _markdown.toMarkdownChildren)(textProps.children));
};

exports.Text = Text;
Text.serialize = serialize;
//# sourceMappingURL=text.js.map