{"version":3,"sources":["../../src/components/reply.jsx"],"names":["StyledButton","styled","button","Reply","props","WebchatContext","sendText","getThemeProperty","handleClick","event","preventDefault","children","payload","path","renderBrowser","replyStyle","WEBCHAT","CUSTOM_PROPERTIES","CustomReply","customReply","e","border","brandColor","COLORS","BOTONIC_BLUE","color","renderNode","serialize","replyProps","reply","title"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,YAAY,GAAGC,6BAAOC,MAAV,gNAAlB;;AASO,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK,EAAI;AAC5B,oBAAuC,uBAAWC,wBAAX,CAAvC;AAAA,MAAQC,QAAR,eAAQA,QAAR;AAAA,MAAkBC,gBAAlB,eAAkBA,gBAAlB;;AACA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAIN,KAAK,CAACO,QAAV,EAAoB;AAClB,UAAIC,OAAO,GAAGR,KAAK,CAACQ,OAApB;AACA,UAAIR,KAAK,CAACS,IAAV,EAAgBD,OAAO,6BAAsBR,KAAK,CAACS,IAA5B,CAAP;AAChBP,MAAAA,QAAQ,CAACF,KAAK,CAACO,QAAP,EAAiBC,OAAjB,CAAR;AACD;AACF,GAPD;;AASA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAMC,UAAU,GAAGR,gBAAgB,CAACS,mBAAQC,iBAAR,CAA0BF,UAA3B,CAAnC;AACA,QAAMG,WAAW,GAAGX,gBAAgB,CAACS,mBAAQC,iBAAR,CAA0BE,WAA3B,CAApC;;AACA,QAAID,WAAJ,EAAiB;AACf,0BACE;AAAK,QAAA,OAAO,EAAE,iBAAAE,CAAC;AAAA,iBAAIZ,WAAW,CAACY,CAAD,CAAf;AAAA;AAAf,sBACE,gCAAC,WAAD,QAAchB,KAAK,CAACO,QAApB,CADF,CADF;AAKD;;AAED,wBACE,gCAAC,YAAD;AACE,MAAA,KAAK;AACHU,QAAAA,MAAM,sBAAed,gBAAgB,CACnCS,mBAAQC,iBAAR,CAA0BK,UADS,EAEnCC,kBAAOC,YAF4B,CAA/B,CADH;AAKHC,QAAAA,KAAK,EAAElB,gBAAgB,CACrBS,mBAAQC,iBAAR,CAA0BK,UADL,EAErBC,kBAAOC,YAFc;AALpB,SASAT,UATA,CADP;AAYE,MAAA,OAAO,EAAE,iBAAAK,CAAC;AAAA,eAAIZ,WAAW,CAACY,CAAD,CAAf;AAAA;AAZZ,OAcGhB,KAAK,CAACO,QAdT,CADF;AAkBD,GA7BD;;AA+BA,MAAMe,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAItB,KAAK,CAACS,IAAV,EAAgB;AACd,UAAMD,OAAO,6BAAsBR,KAAK,CAACS,IAA5B,CAAb;AACA,0BAAO;AAAO,QAAA,OAAO,EAAED;AAAhB,SAA0BR,KAAK,CAACO,QAAhC,CAAP;AACD;;AACD,wBAAO;AAAO,MAAA,OAAO,EAAEP,KAAK,CAACQ;AAAtB,OAAgCR,KAAK,CAACO,QAAtC,CAAP;AACD,GAND;;AAQA,SAAO,6BAAgB;AAAEG,IAAAA,aAAa,EAAbA,aAAF;AAAiBY,IAAAA,UAAU,EAAVA;AAAjB,GAAhB,CAAP;AACD,CAnDM;;;;AAqDPvB,KAAK,CAACwB,SAAN,GAAkB,UAAAC,UAAU,EAAI;AAC9B,MAAIhB,OAAO,GAAGgB,UAAU,CAAChB,OAAzB;AACA,MAAIgB,UAAU,CAACf,IAAf,EAAqBD,OAAO,6BAAsBgB,UAAU,CAACf,IAAjC,CAAP;AACrB,SAAO;AAAEgB,IAAAA,KAAK,EAAE;AAAEC,MAAAA,KAAK,EAAEF,UAAU,CAACjB,QAApB;AAA8BC,MAAAA,OAAO,EAAPA;AAA9B;AAAT,GAAP;AACD,CAJD","sourcesContent":["import React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { COLORS, WEBCHAT } from '../constants'\nimport { WebchatContext } from '../contexts'\nimport { renderComponent } from '../util/react'\n\nconst StyledButton = styled.button`\n  width: 100%;\n  padding: 4px 8px;\n  font-family: inherit;\n  border-radius: 8px;\n  cursor: pointer;\n  outline: 0;\n`\n\nexport const Reply = props => {\n  const { sendText, getThemeProperty } = useContext(WebchatContext)\n  const handleClick = event => {\n    event.preventDefault()\n    if (props.children) {\n      let payload = props.payload\n      if (props.path) payload = `__PATH_PAYLOAD__${props.path}`\n      sendText(props.children, payload)\n    }\n  }\n\n  const renderBrowser = () => {\n    const replyStyle = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.replyStyle)\n    const CustomReply = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.customReply)\n    if (CustomReply) {\n      return (\n        <div onClick={e => handleClick(e)}>\n          <CustomReply>{props.children}</CustomReply>\n        </div>\n      )\n    }\n\n    return (\n      <StyledButton\n        style={{\n          border: `1px solid ${getThemeProperty(\n            WEBCHAT.CUSTOM_PROPERTIES.brandColor,\n            COLORS.BOTONIC_BLUE\n          )}`,\n          color: getThemeProperty(\n            WEBCHAT.CUSTOM_PROPERTIES.brandColor,\n            COLORS.BOTONIC_BLUE\n          ),\n          ...replyStyle,\n        }}\n        onClick={e => handleClick(e)}\n      >\n        {props.children}\n      </StyledButton>\n    )\n  }\n\n  const renderNode = () => {\n    if (props.path) {\n      const payload = `__PATH_PAYLOAD__${props.path}`\n      return <reply payload={payload}>{props.children}</reply>\n    }\n    return <reply payload={props.payload}>{props.children}</reply>\n  }\n\n  return renderComponent({ renderBrowser, renderNode })\n}\n\nReply.serialize = replyProps => {\n  let payload = replyProps.payload\n  if (replyProps.path) payload = `__PATH_PAYLOAD__${replyProps.path}`\n  return { reply: { title: replyProps.children, payload } }\n}\n"],"file":"reply.js"}