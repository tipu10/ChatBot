"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ButtonsDisabler = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _button = require("../components/button");

var _constants = require("../constants");

var _messageUtils = require("../message-utils");

var _objects = require("../util/objects");

var _react = require("../util/react");

var _webchat = require("../util/webchat");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var ButtonsDisabler = /*#__PURE__*/function () {
  function ButtonsDisabler() {
    (0, _classCallCheck2["default"])(this, ButtonsDisabler);
  }

  (0, _createClass2["default"])(ButtonsDisabler, null, [{
    key: "constructBrowserProps",
    value: function constructBrowserProps(props) {
      var disabledProps = {
        disabled: props.disabled
      };
      if (props.autodisable !== undefined) disabledProps.autodisable = (0, _objects.strToBool)(props.autodisable);
      if (props.disabledstyle !== undefined) disabledProps.disabledstyle = props.disabledstyle;
      return disabledProps;
    }
  }, {
    key: "constructNodeProps",
    value: function constructNodeProps(props) {
      var disabledProps = {};
      if (props.autodisable !== undefined) disabledProps.autodisable = String(props.autodisable);
      if (props.disabledstyle !== undefined) disabledProps.disabledstyle = JSON.stringify(props.disabledstyle);
      return disabledProps;
    }
  }, {
    key: "withDisabledProps",
    value: function withDisabledProps(props) {
      return {
        disabled: props.disabled,
        autodisable: props.autodisable,
        disabledstyle: props.disabledstyle
      };
    }
  }, {
    key: "resolveDisabling",
    value: function resolveDisabling(theme, props) {
      var getThemeProperty = (0, _webchat._getThemeProperty)(theme);
      var autoDisable = props.autodisable !== undefined ? props.autodisable : getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.buttonAutoDisable, _constants.WEBCHAT.DEFAULTS.BUTTON_AUTO_DISABLE);
      var computedDisabledStyle = props.disabledstyle !== undefined ? props.disabledstyle : getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.buttonDisabledStyle, {});

      var disabledStyle = _objectSpread(_objectSpread({}, _constants.WEBCHAT.DEFAULTS.BUTTON_DISABLED_STYLE), computedDisabledStyle);

      return {
        autoDisable: autoDisable,
        disabledStyle: disabledStyle
      };
    }
  }, {
    key: "updateChildrenButtons",
    value: function updateChildrenButtons(children) {
      var _this = this;

      var additionalProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;
      return (0, _react.deepMapWithIndex)(children, function (n) {
        if (n.type === _button.Button) return _this.updateButtons(n, additionalProps);
        return n;
      });
    }
  }, {
    key: "updateButtons",
    value: function updateButtons(node, additionalProps) {
      if (!additionalProps) additionalProps = {};else {
        additionalProps = {
          disabled: node.props.disabled === true ? node.props.disabled : additionalProps.disabled,
          setDisabled: additionalProps.setDisabled,
          parentId: additionalProps.parentId
        };
      }
      return _objectSpread(_objectSpread({}, node), {}, {
        props: _objectSpread(_objectSpread({}, node.props), additionalProps)
      });
    }
  }, {
    key: "getUpdatedMessage",
    value: function getUpdatedMessage(messageToUpdate, _ref) {
      var autoDisable = _ref.autoDisable,
          disabledStyle = _ref.disabledStyle;

      var updateMsgButton = function updateMsgButton(button) {
        return _objectSpread(_objectSpread({}, button), {
          disabled: true
        });
      };

      if ((0, _messageUtils.isCarousel)(messageToUpdate) && messageToUpdate.data && messageToUpdate.data.elements) {
        messageToUpdate.data.elements = messageToUpdate.data.elements.map(function (e) {
          return _objectSpread(_objectSpread({}, e), {
            buttons: e.buttons.map(updateMsgButton)
          });
        });
        return messageToUpdate;
      } else {
        return _objectSpread(_objectSpread({}, messageToUpdate), {
          buttons: messageToUpdate.buttons.map(updateMsgButton)
        });
      }
    }
  }]);
  return ButtonsDisabler;
}();

exports.ButtonsDisabler = ButtonsDisabler;
//# sourceMappingURL=buttons-disabler.js.map