{"version":3,"sources":["../../src/components/webchat-settings.jsx"],"names":["WebchatSettings","theme","blockInputs","persistentMenu","enableEmojiPicker","enableAttachments","enableUserInput","enableAnimations","renderBrowser","WebchatContext","updateWebchatDevSettings","renderNode","updatedTheme","normalizeWebchatSettings","INPUT","WEBCHAT_SETTINGS","settings","userInput","animations","undefined","emojiPicker","enable","attachments"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,OAQzB;AAAA,MAPJC,KAOI,QAPJA,KAOI;AAAA,MANJC,WAMI,QANJA,WAMI;AAAA,MALJC,cAKI,QALJA,cAKI;AAAA,MAJJC,iBAII,QAJJA,iBAII;AAAA,MAHJC,iBAGI,QAHJA,iBAGI;AAAA,MAFJC,eAEI,QAFJA,eAEI;AAAA,MADJC,gBACI,QADJA,gBACI;;AACJ,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B;AACA,sBAAqC,uBAAWC,wBAAX,CAArC;AAAA,QAAQC,wBAAR,eAAQA,wBAAR;;AACAA,IAAAA,wBAAwB,CAAC;AACvBT,MAAAA,KAAK,EAALA,KADuB;AAEvBC,MAAAA,WAAW,EAAXA,WAFuB;AAGvBC,MAAAA,cAAc,EAAdA,cAHuB;AAIvBC,MAAAA,iBAAiB,EAAjBA,iBAJuB;AAKvBC,MAAAA,iBAAiB,EAAjBA,iBALuB;AAMvBC,MAAAA,eAAe,EAAfA,eANuB;AAOvBC,MAAAA,gBAAgB,EAAhBA;AAPuB,KAAD,CAAxB;AASA,WAAO,IAAP;AACD,GAbD;;AAcA,MAAMI,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAMC,YAAY,GAAGC,wBAAwB,CAAC;AAC5CZ,MAAAA,KAAK,EAALA,KAD4C;AAE5CC,MAAAA,WAAW,EAAXA,WAF4C;AAG5CC,MAAAA,cAAc,EAAdA,cAH4C;AAI5CC,MAAAA,iBAAiB,EAAjBA,iBAJ4C;AAK5CC,MAAAA,iBAAiB,EAAjBA,iBAL4C;AAM5CC,MAAAA,eAAe,EAAfA,eAN4C;AAO5CC,MAAAA,gBAAgB,EAAhBA;AAP4C,KAAD,CAA7C;AASA,wBACE;AACE,MAAA,IAAI,EAAEO,YAAMC,gBADd;AAEE,MAAA,QAAQ,EAAE,iCAAoB;AAAEd,QAAAA,KAAK,EAAEW;AAAT,OAApB;AAFZ,MADF;AAMD,GAhBD;;AAiBA,SAAO,6BAAgB;AAAEJ,IAAAA,aAAa,EAAbA,aAAF;AAAiBG,IAAAA,UAAU,EAAVA;AAAjB,GAAhB,CAAP;AACD,CAzCM;;;;AA2CA,IAAME,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAAG,QAAQ,EAAI;AAClD,MACEf,KADF,GAQIe,QARJ,CACEf,KADF;AAAA,MAEEC,WAFF,GAQIc,QARJ,CAEEd,WAFF;AAAA,MAGEC,cAHF,GAQIa,QARJ,CAGEb,cAHF;AAAA,MAIEC,iBAJF,GAQIY,QARJ,CAIEZ,iBAJF;AAAA,MAKEC,iBALF,GAQIW,QARJ,CAKEX,iBALF;AAAA,MAMEC,eANF,GAQIU,QARJ,CAMEV,eANF;AAAA,MAOEC,gBAPF,GAQIS,QARJ,CAOET,gBAPF;AASA,MAAI,CAACN,KAAL,EAAYA,KAAK,GAAG,EAAR;AACZ,MAAI,CAACA,KAAK,CAACgB,SAAX,EAAsBhB,KAAK,CAACgB,SAAN,GAAkB,EAAlB;AACtB,MAAI,CAAChB,KAAK,CAACiB,UAAX,EAAuBjB,KAAK,CAACiB,UAAN,GAAmB,EAAnB;;AACvB,MAAIf,cAAc,KAAKgB,SAAvB,EAAkC;AAChC,QAAI,CAAClB,KAAK,CAACgB,SAAN,CAAgBd,cAArB,EAAqCF,KAAK,CAACgB,SAAN,CAAgBd,cAAhB,GAAiC,EAAjC;AACrCF,IAAAA,KAAK,CAACgB,SAAN,CAAgBd,cAAhB,GAAiCA,cAAjC;AACD;;AACD,MAAIC,iBAAiB,KAAKe,SAA1B,EAAqC;AACnC,QAAI,CAAClB,KAAK,CAACgB,SAAN,CAAgBG,WAArB,EAAkCnB,KAAK,CAACgB,SAAN,CAAgBG,WAAhB,GAA8B,EAA9B;AAClCnB,IAAAA,KAAK,CAACgB,SAAN,CAAgBG,WAAhB,CAA4BC,MAA5B,GAAqCjB,iBAArC;AACD;;AACD,MAAIC,iBAAiB,KAAKc,SAA1B,EAAqC;AACnC,QAAI,CAAClB,KAAK,CAACgB,SAAN,CAAgBK,WAArB,EAAkCrB,KAAK,CAACgB,SAAN,CAAgBK,WAAhB,GAA8B,EAA9B;AAClCrB,IAAAA,KAAK,CAACgB,SAAN,CAAgBK,WAAhB,CAA4BD,MAA5B,GAAqChB,iBAArC;AACD;;AACD,MAAIC,eAAe,KAAKa,SAAxB,EAAmC;AACjC,QAAI,CAAClB,KAAK,CAACgB,SAAN,CAAgBI,MAArB,EAA6BpB,KAAK,CAACgB,SAAN,CAAgBI,MAAhB,GAAyB,EAAzB;AAC7BpB,IAAAA,KAAK,CAACgB,SAAN,CAAgBI,MAAhB,GAAyBf,eAAzB;AACD;;AACD,MAAIC,gBAAgB,KAAKY,SAAzB,EAAoC;AAClC,QAAI,CAAClB,KAAK,CAACiB,UAAN,CAAiBG,MAAtB,EAA8BpB,KAAK,CAACiB,UAAN,CAAiBG,MAAjB,GAA0B,EAA1B;AAC9BpB,IAAAA,KAAK,CAACiB,UAAN,CAAiBG,MAAjB,GAA0Bd,gBAA1B;AACD;;AACD,MAAIL,WAAW,KAAKiB,SAApB,EAA+BlB,KAAK,CAACgB,SAAN,CAAgBf,WAAhB,GAA8BA,WAA9B;AAC/B,SAAOD,KAAP;AACD,CAnCM","sourcesContent":["import { INPUT } from '@botonic/core'\nimport React, { useContext } from 'react'\n\nimport { WebchatContext } from '../contexts'\nimport { renderComponent } from '../util/react'\nimport { stringifyWithRegexs } from '../util/regexs'\n\nexport const WebchatSettings = ({\n  theme,\n  blockInputs,\n  persistentMenu,\n  enableEmojiPicker,\n  enableAttachments,\n  enableUserInput,\n  enableAnimations,\n}) => {\n  const renderBrowser = () => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { updateWebchatDevSettings } = useContext(WebchatContext)\n    updateWebchatDevSettings({\n      theme,\n      blockInputs,\n      persistentMenu,\n      enableEmojiPicker,\n      enableAttachments,\n      enableUserInput,\n      enableAnimations,\n    })\n    return null\n  }\n  const renderNode = () => {\n    const updatedTheme = normalizeWebchatSettings({\n      theme,\n      blockInputs,\n      persistentMenu,\n      enableEmojiPicker,\n      enableAttachments,\n      enableUserInput,\n      enableAnimations,\n    })\n    return (\n      <message\n        type={INPUT.WEBCHAT_SETTINGS}\n        settings={stringifyWithRegexs({ theme: updatedTheme })}\n      ></message>\n    )\n  }\n  return renderComponent({ renderBrowser, renderNode })\n}\n\nexport const normalizeWebchatSettings = settings => {\n  let {\n    theme,\n    blockInputs,\n    persistentMenu,\n    enableEmojiPicker,\n    enableAttachments,\n    enableUserInput,\n    enableAnimations,\n  } = settings\n  if (!theme) theme = {}\n  if (!theme.userInput) theme.userInput = {}\n  if (!theme.animations) theme.animations = {}\n  if (persistentMenu !== undefined) {\n    if (!theme.userInput.persistentMenu) theme.userInput.persistentMenu = {}\n    theme.userInput.persistentMenu = persistentMenu\n  }\n  if (enableEmojiPicker !== undefined) {\n    if (!theme.userInput.emojiPicker) theme.userInput.emojiPicker = {}\n    theme.userInput.emojiPicker.enable = enableEmojiPicker\n  }\n  if (enableAttachments !== undefined) {\n    if (!theme.userInput.attachments) theme.userInput.attachments = {}\n    theme.userInput.attachments.enable = enableAttachments\n  }\n  if (enableUserInput !== undefined) {\n    if (!theme.userInput.enable) theme.userInput.enable = {}\n    theme.userInput.enable = enableUserInput\n  }\n  if (enableAnimations !== undefined) {\n    if (!theme.animations.enable) theme.animations.enable = {}\n    theme.animations.enable = enableAnimations\n  }\n  if (blockInputs !== undefined) theme.userInput.blockInputs = blockInputs\n  return theme\n}\n"],"file":"webchat-settings.js"}