"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Carousel = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _core = require("@botonic/core");

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _leftArrow = _interopRequireDefault(require("../assets/leftArrow.svg"));

var _rightArrow = _interopRequireDefault(require("../assets/rightArrow.svg"));

var _constants = require("../constants");

var _contexts = require("../contexts");

var _environment = require("../util/environment");

var _styledScrollbar = require("../webchat/components/styled-scrollbar");

var _buttonsDisabler = require("./buttons-disabler");

var _message = require("./message");

var _templateObject, _templateObject2, _templateObject3, _templateObject4;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var StyledCarousel = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  padding: 10px 0px;\n  display: flex;\n  flex-direction: row;\n  max-width: 100%;\n  ", "\n"])), function (props) {
  return props.carouselArrowsEnabled && 'overflow-x: auto;';
});

var StyledItems = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n"])));

var StyledArrowContainer = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  position: absolute;\n  top: calc(50% - 20px);\n  height: 40px;\n  width: 25px;\n  background: ", ";\n  display: flex;\n  align-items: center;\n  cursor: pointer;\n  justify-content: ", ";\n  left: ", "px;\n  right: ", "px;\n  border-top-", "-radius: 30px;\n  border-bottom-", "-radius: 30px;\n"])), _constants.COLORS.SILVER, function (props) {
  return props.justifyContent;
}, function (props) {
  return props.left;
}, function (props) {
  return props.right;
}, function (props) {
  return props.arrow;
}, function (props) {
  return props.arrow;
});

var StyledArrow = _styledComponents["default"].img(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2["default"])(["\n  width: 20px;\n  height: 20px;\n"])));

var serialize = function serialize(carouselProps) {
  var carouselChildren = carouselProps.children;
  if (!Array.isArray(carouselChildren)) carouselChildren = [carouselChildren];
  return {
    type: _core.INPUT.CAROUSEL,
    elements: carouselChildren.map(function (e) {
      return e && e.type && e.type.serialize && e.type.serialize(e.props);
    })
  };
};
/**
 *
 * @param {MessageProps} props
 * @returns {JSX.Element}
 */


var Carousel = function Carousel(props) {
  var _useContext = (0, _react.useContext)(_contexts.WebchatContext),
      getThemeProperty = _useContext.getThemeProperty;

  var content = props.children;

  var scrollbarOptions = _objectSpread(_objectSpread({}, {
    enable: true,
    autoHide: true
  }), getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.scrollbar));

  var _useState = (0, _react.useState)(false),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      hasLeftArrow = _useState2[0],
      setLeftArrow = _useState2[1];

  var _useState3 = (0, _react.useState)(true),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      hasRightArrow = _useState4[0],
      setRightArrow = _useState4[1];

  var carouselRef = (0, _react.useRef)(null);
  var CustomCarouselLeftArrow = getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.customCarouselLeftArrow, undefined);
  var CustomCarouselRightArrow = getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.customCarouselRightArrow, undefined);
  var carouselArrowsEnabled = getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.enableCarouselArrows, true);

  var scrollCarouselBy = function scrollCarouselBy(value) {
    carouselRef.current.scrollBy({
      left: value,
      behavior: 'smooth'
    });
  };

  var setArrowsVisibility = function setArrowsVisibility(event) {
    var carousel = event.currentTarget;
    var maxRightScroll = carousel.scrollWidth - carousel.offsetWidth - _constants.WEBCHAT.DEFAULTS.ELEMENT_MARGIN_RIGHT;
    setLeftArrow(carousel.scrollLeft !== 0);
    setRightArrow(carousel.scrollLeft < maxRightScroll);
  };

  var getArrows = function getArrows() {
    var scrollBy = _constants.WEBCHAT.DEFAULTS.ELEMENT_WIDTH + _constants.WEBCHAT.DEFAULTS.ELEMENT_MARGIN_RIGHT;
    return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, hasLeftArrow && (CustomCarouselLeftArrow ? /*#__PURE__*/_react["default"].createElement(CustomCarouselLeftArrow, {
      scrollCarouselBy: scrollCarouselBy
    }) : /*#__PURE__*/_react["default"].createElement(StyledArrowContainer, {
      left: 0,
      arrow: 'right',
      justifyContent: 'flex-start',
      onClick: function onClick() {
        return scrollCarouselBy(-scrollBy);
      }
    }, /*#__PURE__*/_react["default"].createElement(StyledArrow, {
      src: (0, _environment.resolveImage)(_leftArrow["default"])
    }))), hasRightArrow && (CustomCarouselRightArrow ? /*#__PURE__*/_react["default"].createElement(CustomCarouselRightArrow, {
      scrollCarouselBy: scrollCarouselBy
    }) : /*#__PURE__*/_react["default"].createElement(StyledArrowContainer, {
      right: 0,
      arrow: 'left',
      justifyContent: 'flex-end',
      onClick: function onClick() {
        return scrollCarouselBy(scrollBy);
      }
    }, /*#__PURE__*/_react["default"].createElement(StyledArrow, {
      src: (0, _environment.resolveImage)(_rightArrow["default"])
    }))));
  };

  (0, _react.useEffect)(function () {
    var carousel = carouselRef.current;

    if (carousel && carousel.addEventListener) {
      carousel.addEventListener('scroll', setArrowsVisibility, false);
    } else if (carousel && carousel.attachEvent) {
      carousel.attachEvent('scroll', setArrowsVisibility);
    }
  }, [carouselRef.current]);

  var carouselProps = _objectSpread(_objectSpread({}, props), {}, {
    children: _buttonsDisabler.ButtonsDisabler.updateChildrenButtons(props.children)
  });

  if ((0, _core.isBrowser)()) {
    content = /*#__PURE__*/_react["default"].createElement(_styledScrollbar.StyledScrollbar, {
      scrollbar: scrollbarOptions,
      autoHide: scrollbarOptions.autoHide
    }, /*#__PURE__*/_react["default"].createElement(StyledCarousel, {
      ref: carouselRef,
      carouselArrowsEnabled: carouselArrowsEnabled
    }, /*#__PURE__*/_react["default"].createElement(StyledItems, null, carouselProps.children), carouselArrowsEnabled && getArrows()));
  }

  return /*#__PURE__*/_react["default"].createElement(_message.Message, (0, _extends2["default"])({
    style: {
      width: '85%',
      padding: 0,
      backgroundColor: _constants.COLORS.TRANSPARENT
    },
    blob: false,
    json: serialize(carouselProps),
    type: _core.INPUT.CAROUSEL
  }, carouselProps), content);
};

exports.Carousel = Carousel;
Carousel.serialize = serialize;
//# sourceMappingURL=carousel.js.map