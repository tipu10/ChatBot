"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Message = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));

var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _core = require("@botonic/core");

var _react = _interopRequireWildcard(require("react"));

var _Fade = _interopRequireDefault(require("react-reveal/Fade"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _uuid = require("uuid");

var _constants = require("../constants");

var _contexts = require("../contexts");

var _environment = require("../util/environment");

var _react2 = require("../util/react");

var _button = require("./button");

var _buttonsDisabler = require("./buttons-disabler");

var _markdown = require("./markdown");

var _reply = require("./reply");

var _timestamps = require("./timestamps");

var _excluded = ["type", "blob", "from", "delay", "typing", "children", "enabletimestamps", "json", "style", "imagestyle"],
    _excluded2 = ["blob", "json"];

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var MessageContainer = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  justify-content: ", ";\n  position: relative;\n  padding: 0px 6px;\n"])), function (props) {
  return props.isfromuser ? 'flex-end' : 'flex-start';
});

var BotMessageImageContainer = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  width: 28px;\n  padding: 12px 4px;\n  flex: none;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n"])));

var Blob = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  position: relative;\n  margin: 8px;\n  border-radius: 8px;\n  background-color: ", ";\n  color: ", ";\n  max-width: ", ";\n"])), function (props) {
  return props.bgcolor;
}, function (props) {
  return props.color;
}, function (props) {
  return props.blob ? props.blobwidth ? props.blobwidth : '60%' : 'calc(100% - 16px)';
});

var BlobText = _styledComponents["default"].div(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2["default"])(["\n  padding: ", ";\n  display: flex;\n  flex-direction: column;\n  white-space: pre-line;\n  ", "\n"])), function (props) {
  return props.blob ? '8px 12px' : '0px';
}, function (props) {
  return props.markdownstyle;
});

var BlobTickContainer = _styledComponents["default"].div(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2["default"])(["\n  position: absolute;\n  box-sizing: border-box;\n  height: 100%;\n  padding: 18px 0px 18px 0px;\n  display: flex;\n  top: 0;\n  align-items: center;\n"])));

var BlobTick = _styledComponents["default"].div(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2["default"])(["\n  position: relative;\n  margin: -", "px 0px;\n  border: ", "px solid ", ";\n"])), function (props) {
  return props.pointerSize;
}, function (props) {
  return props.pointerSize;
}, _constants.COLORS.TRANSPARENT);

var Message = function Message(props) {
  var _useContext = (0, _react.useContext)(_contexts.RequestContext),
      defaultTyping = _useContext.defaultTyping,
      defaultDelay = _useContext.defaultDelay;

  var _props$type = props.type,
      type = _props$type === void 0 ? '' : _props$type,
      _props$blob = props.blob,
      blob = _props$blob === void 0 ? true : _props$blob,
      _props$from = props.from,
      from = _props$from === void 0 ? _constants.SENDERS.bot : _props$from,
      _props$delay = props.delay,
      delay = _props$delay === void 0 ? defaultDelay : _props$delay,
      _props$typing = props.typing,
      typing = _props$typing === void 0 ? defaultTyping : _props$typing,
      children = props.children,
      _props$enabletimestam = props.enabletimestamps,
      enabletimestamps = _props$enabletimestam === void 0 ? props.enabletimestamps || props.enableTimestamps : _props$enabletimestam,
      json = props.json,
      style = props.style,
      _props$imagestyle = props.imagestyle,
      imagestyle = _props$imagestyle === void 0 ? props.imagestyle || props.imageStyle : _props$imagestyle,
      otherProps = (0, _objectWithoutProperties2["default"])(props, _excluded);
  var isFromUser = from === _constants.SENDERS.user;
  var isFromBot = from === _constants.SENDERS.bot;
  var markdown = props.markdown;

  var _useContext2 = (0, _react.useContext)(_contexts.WebchatContext),
      webchatState = _useContext2.webchatState,
      addMessage = _useContext2.addMessage,
      updateReplies = _useContext2.updateReplies,
      getThemeProperty = _useContext2.getThemeProperty;

  var _useState = (0, _react.useState)({
    id: props.id || (0, _uuid.v4)()
  }),
      _useState2 = (0, _slicedToArray2["default"])(_useState, 2),
      state = _useState2[0],
      setState = _useState2[1];

  var _useState3 = (0, _react.useState)(false),
      _useState4 = (0, _slicedToArray2["default"])(_useState3, 2),
      disabled = _useState4[0],
      setDisabled = _useState4[1];

  children = _buttonsDisabler.ButtonsDisabler.updateChildrenButtons(children, {
    parentId: state.id,
    disabled: disabled,
    setDisabled: setDisabled
  });

  var replies = _react["default"].Children.toArray(children).filter(function (e) {
    return e.type === _reply.Reply;
  });

  var buttons = _react["default"].Children.toArray(children).filter(function (e) {
    return e.type === _button.Button;
  });

  var textChildren = _react["default"].Children.toArray(children).filter(function (e) {
    return ![_button.Button, _reply.Reply].includes(e.type);
  });

  if (isFromUser) textChildren = textChildren.map(function (e) {
    return typeof e === 'string' ? (0, _markdown.renderLinks)(e) : e;
  });

  var _resolveMessageTimest = (0, _timestamps.resolveMessageTimestamps)(getThemeProperty, enabletimestamps),
      timestampsEnabled = _resolveMessageTimest.timestampsEnabled,
      getFormattedTimestamp = _resolveMessageTimest.getFormattedTimestamp,
      timestampStyle = _resolveMessageTimest.timestampStyle;

  var getEnvAck = function getEnvAck() {
    if (_environment.isDev) return 1;
    if (!isFromUser) return 1;
    if (props.ack !== undefined) return props.ack;
    return 0;
  };

  var ack = getEnvAck();

  if ((0, _core.isBrowser)()) {
    // eslint-disable-next-line react-hooks/rules-of-hooks
    (0, _react.useEffect)(function () {
      var decomposedChildren = json;
      var message = {
        id: state.id,
        type: type,
        data: decomposedChildren ? decomposedChildren : textChildren,
        timestamp: props.timestamp || getFormattedTimestamp,
        markdown: markdown,
        from: from,
        buttons: buttons.map(function (b) {
          return _objectSpread({
            parentId: b.props.parentId,
            payload: b.props.payload,
            path: b.props.path,
            url: b.props.url,
            target: b.props.target,
            webview: b.props.webview && String(b.props.webview),
            title: b.props.children
          }, _buttonsDisabler.ButtonsDisabler.withDisabledProps(b.props));
        }),
        delay: delay,
        typing: typing,
        replies: replies.map(function (r) {
          return {
            payload: r.props.payload,
            path: r.props.path,
            url: r.props.url,
            text: r.props.children
          };
        }),
        display: delay + typing == 0,
        customTypeName: decomposedChildren.customTypeName,
        ack: ack
      };
      addMessage(message);
    }, []); // eslint-disable-next-line react-hooks/rules-of-hooks

    (0, _react.useEffect)(function () {
      var msg = webchatState.messagesJSON.find(function (m) {
        return m.id === state.id;
      });

      if (msg && msg.display && webchatState.messagesJSON.filter(function (m) {
        return !m.display;
      }).length == 0) {
        updateReplies(replies);
      }
    }, [webchatState.messagesJSON]);
  }

  var brandColor = getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.brandColor, _constants.COLORS.BOTONIC_BLUE);

  var getBgColor = function getBgColor() {
    if (!blob) return _constants.COLORS.TRANSPARENT;

    if (isFromUser) {
      return getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.userMessageBackground, brandColor);
    }

    return getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.botMessageBackground, _constants.COLORS.SEASHELL_WHITE);
  };

  var getMessageStyle = function getMessageStyle() {
    return isFromBot ? getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.botMessageStyle) : getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.userMessageStyle);
  };

  var hasBlobTick = function hasBlobTick() {
    return getThemeProperty("message.".concat(from, ".blobTick"), true);
  };

  var renderBrowser = function renderBrowser() {
    var m = webchatState.messagesJSON.find(function (m) {
      return m.id === state.id;
    });
    if (!m || !m.display) return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null);

    var getBlobTick = function getBlobTick(pointerSize) {
      // to add a border to the blobTick we need to create two triangles and overlap them
      // that is why the color depends on the pointerSize
      // https://developpaper.com/realization-code-of-css-drawing-triangle-border-method/
      var color = pointerSize == 5 ? getBgColor() : getThemeProperty("message.".concat(from, ".style.borderColor"), _constants.COLORS.TRANSPARENT);

      var containerStyle = _objectSpread({}, getThemeProperty("message.".concat(from, ".blobTickStyle")));

      var blobTickStyle = {};

      if (isFromUser) {
        containerStyle.right = 0;
        containerStyle.marginRight = -pointerSize;
        blobTickStyle.borderRight = 0;
        blobTickStyle.borderLeftColor = color;
      } else {
        containerStyle.left = 0;
        containerStyle.marginLeft = -pointerSize;
        blobTickStyle.borderLeft = 0;
        blobTickStyle.borderRightColor = color;
      }

      return /*#__PURE__*/_react["default"].createElement(BlobTickContainer, {
        style: containerStyle
      }, /*#__PURE__*/_react["default"].createElement(BlobTick, {
        pointerSize: pointerSize,
        style: blobTickStyle
      }));
    };

    var BotMessageImage = getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.botMessageImage, getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.brandImage, _constants.WEBCHAT.DEFAULTS.LOGO));
    var animationsEnabled = getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.enableAnimations, true);

    var resolveCustomTypeName = function resolveCustomTypeName() {
      return isFromBot && type === _core.INPUT.CUSTOM ? " ".concat(m.customTypeName) : '';
    };

    var className = "".concat(type, "-").concat(from).concat(resolveCustomTypeName());
    return /*#__PURE__*/_react["default"].createElement(_react2.ConditionalWrapper, {
      condition: animationsEnabled,
      wrapper: function wrapper(children) {
        return /*#__PURE__*/_react["default"].createElement(_Fade["default"], null, children);
      }
    }, /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(MessageContainer, {
      isfromuser: isFromUser,
      style: _objectSpread({}, getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.messageStyle))
    }, isFromBot && BotMessageImage && /*#__PURE__*/_react["default"].createElement(BotMessageImageContainer, {
      style: _objectSpread(_objectSpread({}, getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.botMessageImageStyle)), imagestyle)
    }, /*#__PURE__*/_react["default"].createElement("img", {
      style: {
        width: '100%'
      },
      src: (0, _environment.resolveImage)(BotMessageImage)
    })), /*#__PURE__*/_react["default"].createElement(Blob, (0, _extends2["default"])({
      className: className,
      bgcolor: getBgColor(),
      color: isFromUser ? _constants.COLORS.SOLID_WHITE : _constants.COLORS.SOLID_BLACK,
      blobwidth: getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.botMessageBlobWidth),
      blob: blob,
      style: _objectSpread(_objectSpread(_objectSpread({}, getMessageStyle()), style), {
        opacity: ack === 0 ? 0.6 : 1
      })
    }, otherProps), markdown ? /*#__PURE__*/_react["default"].createElement(BlobText, {
      blob: blob,
      dangerouslySetInnerHTML: {
        __html: (0, _markdown.renderMarkdown)(textChildren)
      },
      markdownstyle: (0, _markdown.getMarkdownStyle)(getThemeProperty, isFromUser ? _constants.COLORS.SEASHELL_WHITE : brandColor)
    }) : /*#__PURE__*/_react["default"].createElement(BlobText, {
      blob: blob
    }, textChildren), !!buttons.length && /*#__PURE__*/_react["default"].createElement("div", {
      className: "message-buttons-container"
    }, buttons), Boolean(blob) && hasBlobTick() && getBlobTick(6), Boolean(blob) && hasBlobTick() && getBlobTick(5))), timestampsEnabled && /*#__PURE__*/_react["default"].createElement(_timestamps.MessageTimestamp, {
      timestamp: m.timestamp,
      style: timestampStyle,
      isfromuser: isFromUser
    })));
  };

  var _blob = props.blob,
      _json = props.json,
      nodeProps = (0, _objectWithoutProperties2["default"])(props, _excluded2);

  var renderNode = function renderNode() {
    return type === _core.INPUT.CUSTOM ? /*#__PURE__*/_react["default"].createElement("message", (0, _extends2["default"])({
      json: JSON.stringify(_json),
      typing: typing,
      delay: delay
    }, nodeProps)) : /*#__PURE__*/_react["default"].createElement("message", (0, _extends2["default"])({
      typing: typing,
      delay: delay
    }, nodeProps), children);
  };

  return (0, _react2.renderComponent)({
    renderBrowser: renderBrowser,
    renderNode: renderNode
  });
};

exports.Message = Message;
//# sourceMappingURL=message.js.map