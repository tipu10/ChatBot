{"version":3,"sources":["../src/webview.jsx"],"names":["App","props","url","URL","window","location","href","params","Array","from","searchParams","entries","filter","key","value","reduce","o","session","JSON","parse","get","state","options","payload","path","s","baseUrl","_hubtype_api","method","bot","id","data","chat_id","user","resp","console","log","provider","impId","imp_id","PROVIDER","WHATSAPP","phone_number","unformatted_phone_number","TELEGRAM","APPLE","TWITTER","FACEBOOK","MessengerExtensions","requestCloseBrowser","undefined","err","e","WEBCHAT","parent","postMessage","requestContext","getString","stringId","locales","__locale","closeWebview","close","bind","webviews","map","Webview","i","name","React","Component","WebviewApp","dest"],"mappings":"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","sourcesContent":["import { getString, params2queryString, PROVIDER } from '@botonic/core'\nimport axios from 'axios'\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { BrowserRouter, Route } from 'react-router-dom'\n\nimport { RequestContext } from './contexts'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    const url = new URL(window.location.href)\n    const params = Array.from(url.searchParams.entries())\n      .filter(([key, value]) => key != 'context')\n      .reduce((o, [key, value]) => {\n        o[key] = value\n        return o\n      }, {})\n    const session = JSON.parse(url.searchParams.get('context') || {})\n    this.state = { session, params }\n  }\n\n  async close(options) {\n    let payload = options ? options.payload : null\n    if (options.path) payload = `__PATH_PAYLOAD__${options.path}`\n    if (payload) {\n      if (options.params) {\n        payload = `${payload}?${params2queryString(options.params)}`\n      }\n      const s = this.state.session\n      try {\n        const baseUrl = s._hubtype_api || 'https://api.hubtype.com'\n        const resp = await axios({\n          method: 'post',\n          url: `${baseUrl}/v1/bots/${s.bot.id}/send_postback/`,\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          data: { payload: payload, chat_id: s.user.id },\n        })\n      } catch (e) {\n        console.log(e)\n      }\n    }\n    const provider = this.state.session.user.provider\n    const impId = this.state.session.user.imp_id\n    if (provider === PROVIDER.WHATSAPP) {\n      const phone_number = this.state.session.user.unformatted_phone_number\n      location.href = 'https://wa.me/' + phone_number\n    }\n    if (provider === PROVIDER.TELEGRAM) {\n      location.href = 'https://t.me/' + impId\n    }\n    if (provider === PROVIDER.APPLE) {\n      location.href = 'https://bcrw.apple.com/urn:biz:' + impId\n    }\n    if (provider === PROVIDER.TWITTER) {\n      location.href =\n        'https://twitter.com/messages/compose?recipient_id=' + impId\n    }\n    if (provider === PROVIDER.FACEBOOK) {\n      try {\n        window.MessengerExtensions.requestCloseBrowser(\n          () => undefined,\n          err => console.log(err)\n        )\n      } catch (e) {}\n    }\n    if (provider === PROVIDER.WEBCHAT) {\n      try {\n        await parent.postMessage('botonicCloseWebview', '*')\n      } catch (e) {}\n    }\n  }\n\n  render() {\n    const requestContext = {\n      getString: stringId =>\n        getString(this.props.locales, this.state.session.__locale, stringId),\n      session: this.state.session || {},\n      params: this.state.params || {},\n      closeWebview: this.close.bind(this),\n    }\n\n    return (\n      <RequestContext.Provider value={requestContext}>\n        {this.props.webviews.map((Webview, i) => (\n          <Route key={i} path={`/${Webview.name}`} component={Webview} />\n        ))}\n      </RequestContext.Provider>\n    )\n  }\n}\n\nexport class WebviewApp {\n  constructor({ webviews, locales }) {\n    this.webviews = webviews\n    this.locales = locales\n  }\n\n  render(dest) {\n    render(\n      <BrowserRouter>\n        <App webviews={this.webviews} locales={this.locales} />\n      </BrowserRouter>,\n      dest\n    )\n  }\n}\n"],"file":"webview.js"}