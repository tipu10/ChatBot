{"version":3,"sources":["../src/react-bot.jsx"],"names":["ReactBot","options","defaultRoutes","path","action","renderer","args","renderReactActions","request","actions","renderedActions","Action","botonicInit","props","renderedAction","push","CoreBot"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;;;;;;;;;;;;;;;IAEaA,Q;;;;;AACX,oBAAYC,OAAZ,EAAqB;AAAA;;AAAA;AAAA;AAEjBC,MAAAA,aAAa,EAAE,CACb;AACEC,QAAAA,IAAI,EAAE,KADR;AAEEC,QAAAA,MAAM,EAAE;AAAA,8BAAM,gCAAC,UAAD,iCAAN;AAAA,SAFV,CAEqD;;AAFrD,OADa,CAFE;AAQjBC,MAAAA,QAAQ,EAAE,kBAAAC,IAAI;AAAA,eAAI,MAAKC,kBAAL,CAAwBD,IAAxB,CAAJ;AAAA;AARG,OASdL,OATc;AAWpB;;;;;8GAED;AAAA;;AAAA;AAAA;AAAA;AAAA;AAA2BO,gBAAAA,OAA3B,QAA2BA,OAA3B,EAAoCC,OAApC,QAAoCA,OAApC;AACQC,gBAAAA,eADR,GAC0B,EAD1B;AAAA,uDAIuBD,OAJvB;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIaE,gBAAAA,MAJb;;AAAA,qBAKQA,MALR;AAAA;AAAA;AAAA;;AAAA,qBAMcA,MAAM,CAACC,WANrB;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAMyCD,MAAM,CAACC,WAAP,CAAmBJ,OAAnB,CANzC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,8BAMuE,EANvE;;AAAA;AAMMK,gBAAAA,KANN;AAOMC,gBAAAA,cAAc,gBACZ,gCAAC,wBAAD,CAAgB,QAAhB;AAAyB,kBAAA,KAAK,EAAEN;AAAhC,gCACE,gCAAC,MAAD,EAAYK,KAAZ,CADF,CADF;AAKAH,gBAAAA,eAAe,CAACK,IAAhB,CAAqBD,cAArB;;AAZN;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA,iDAeSJ,eAfT;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;EAd4BM,a","sourcesContent":["import { CoreBot } from '@botonic/core'\nimport React from 'react'\n\nimport { Text } from './components/text'\nimport { RequestContext } from './contexts'\n\nexport class ReactBot extends CoreBot {\n  constructor(options) {\n    super({\n      defaultRoutes: [\n        {\n          path: '404',\n          action: () => <Text>I don't understand you</Text>, // eslint-disable-line\n        },\n      ],\n      renderer: args => this.renderReactActions(args),\n      ...options,\n    })\n  }\n\n  async renderReactActions({ request, actions }) {\n    const renderedActions = []\n    let props\n    let renderedAction\n    for (const Action of actions) {\n      if (Action) {\n        props = Action.botonicInit ? await Action.botonicInit(request) : {}\n        renderedAction = (\n          <RequestContext.Provider value={request}>\n            <Action {...props} />\n          </RequestContext.Provider>\n        )\n        renderedActions.push(renderedAction)\n      }\n    }\n    return renderedActions\n  }\n}\n"],"file":"react-bot.js"}