"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WebchatContext = exports.RequestContext = void 0;

var _react = _interopRequireDefault(require("react"));

var _hooks = require("./webchat/hooks");

var RequestContext = /*#__PURE__*/_react["default"].createContext({
  getString: function getString() {
    return '';
  },
  setLocale: function setLocale() {
    return '';
  },
  session: {},
  params: {},
  input: {},
  defaultDelay: 0,
  defaultTyping: 0
});

exports.RequestContext = RequestContext;

var WebchatContext = /*#__PURE__*/_react["default"].createContext({
  sendText: function sendText(text) {},
  sendAttachment: function sendAttachment(attachment) {},
  sendPayload: function sendPayload(payload) {},
  sendInput: function sendInput(input) {},
  setReplies: function setReplies(replies) {},
  openWebview: function openWebview(webviewComponent) {},
  addMessage: function addMessage(message) {},
  updateMessage: function updateMessage(message) {},
  updateReplies: function updateReplies(replies) {},
  updateLatestInput: function updateLatestInput(input) {},
  closeWebview: function closeWebview() {},
  toggleWebchat: function toggleWebchat() {},
  getThemeProperty: function getThemeProperty(property) {
    return undefined;
  },
  // used to retrieve a specific property of the theme defined by the developer in his 'webchat/index.js'
  resolveCase: function resolveCase() {},
  theme: {},
  webchatState: _hooks.webchatInitialState,
  updateWebchatDevSettings: function updateWebchatDevSettings(settings) {
    return {};
  },
  updateUser: function updateUser(user) {}
});

exports.WebchatContext = WebchatContext;
//# sourceMappingURL=contexts.js.map