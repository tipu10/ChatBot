"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WebchatResizer = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _dom = require("../../util/dom");

var _ = require(".");

var WebchatResizer = /*#__PURE__*/function () {
  function WebchatResizer(currentDevice, host) {
    (0, _classCallCheck2["default"])(this, WebchatResizer);
    this.currentDevice = currentDevice;
    this.host = host;
    this.webchat = (0, _dom.getWebchatElement)(host);
  }

  (0, _createClass2["default"])(WebchatResizer, [{
    key: "onFocus",
    value: function onFocus(onKeyboardShownFn) {
      var _this = this;

      if (this.currentDevice !== _.DEVICES.MOBILE.IPHONE) return;
      /*
        Based on Tip #4 from https://blog.opendigerati.com/the-eccentric-ways-of-ios-safari-with-the-keyboard-b5aa3f34228d,
        taking window.innerHeight as the amount of pixels the virtual keyboard adds
      */

      var waitUntilKeyboardIsShown = 400;

      var calculateNewWebchatElementHeight = function calculateNewWebchatElementHeight() {
        var webchatHeight = _this.webchat.clientHeight; // Some iOS versions keep track of this height with VisualViewport API: https://stackoverflow.com/a/59056851

        var keyboardOffset = window.visualViewport && window.visualViewport.height || window.innerHeight;
        var newWebchatPercentualHeight = keyboardOffset / webchatHeight;

        var toTwoDecimal = function toTwoDecimal(toRound) {
          return Math.round(toRound * 100) / 100;
        };

        newWebchatPercentualHeight = toTwoDecimal(newWebchatPercentualHeight) * 100;
        return newWebchatPercentualHeight;
      };

      setTimeout(function () {
        _this.setWebchatElementHeight("".concat(calculateNewWebchatElementHeight(), "%"));

        (0, _dom.scrollToBottom)(_this.host);
        onKeyboardShownFn();
      }, waitUntilKeyboardIsShown);
    }
  }, {
    key: "onBlur",
    value: function onBlur() {
      if (this.currentDevice !== _.DEVICES.MOBILE.IPHONE) return;
      this.setWebchatElementHeight('100%');
    }
  }, {
    key: "setWebchatElementHeight",
    value: function setWebchatElementHeight(newHeight) {
      this.webchat.style.height = newHeight;
    }
  }]);
  return WebchatResizer;
}();

exports.WebchatResizer = WebchatResizer;
//# sourceMappingURL=webchat-resizer.js.map