"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.WebchatReplies = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireWildcard(require("react"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _constants = require("../constants");

var _contexts = require("../contexts");

var _styledScrollbar = require("../webchat/components/styled-scrollbar");

var _templateObject, _templateObject2;

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var RepliesContainer = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  text-align: center;\n  justify-content: ", ";\n  flex-wrap: ", ";\n  padding-bottom: 10px;\n  margin-left: 5px;\n  margin-right: 5px;\n"])), function (props) {
  return props.justify;
}, function (props) {
  return props.wrap;
});

var ReplyContainer = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  flex: none;\n  display: inline-block;\n  margin: 3px;\n"])));

var options = {
  left: 'flex-start',
  center: 'center',
  right: 'flex-end'
};

var WebchatReplies = function WebchatReplies(props) {
  var _useContext = (0, _react.useContext)(_contexts.WebchatContext),
      webchatState = _useContext.webchatState,
      getThemeProperty = _useContext.getThemeProperty;

  var scrollbarOptions = _objectSpread(_objectSpread({}, {
    enable: true,
    autoHide: true
  }), getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.scrollbar));

  var justifyContent = 'center';
  var flexWrap = getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.wrapReplies, 'wrap');
  if (flexWrap == 'nowrap') justifyContent = 'flex-start';else if (getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.alignReplies)) justifyContent = options[getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.alignReplies)];
  return /*#__PURE__*/_react["default"].createElement(_styledScrollbar.StyledScrollbar, {
    scrollbar: scrollbarOptions,
    autoHide: scrollbarOptions.autoHide
  }, /*#__PURE__*/_react["default"].createElement(RepliesContainer, {
    justify: justifyContent,
    wrap: flexWrap,
    style: _objectSpread({}, props.style)
  }, webchatState.replies.map(function (r, i) {
    return /*#__PURE__*/_react["default"].createElement(ReplyContainer, {
      key: i
    }, r);
  })));
};

exports.WebchatReplies = WebchatReplies;
//# sourceMappingURL=replies.js.map