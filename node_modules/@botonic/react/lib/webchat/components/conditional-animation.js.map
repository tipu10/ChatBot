{"version":3,"sources":["../../../src/webchat/components/conditional-animation.jsx"],"names":["ConditionalAnimation","props","WebchatContext","getThemeProperty","animationsEnabled","WEBCHAT","CUSTOM_PROPERTIES","enableAnimations","undefined","children","scale"],"mappings":";;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;AAEO,IAAMA,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAC,KAAK,EAAI;AAC3C,oBAA6B,uBAAWC,wBAAX,CAA7B;AAAA,MAAQC,gBAAR,eAAQA,gBAAR;;AAEA,MAAMC,iBAAiB,GAAGD,gBAAgB,CACxCE,mBAAQC,iBAAR,CAA0BC,gBADc,EAExCN,KAAK,CAACM,gBAAN,KAA2BC,SAA3B,GAAuCP,KAAK,CAACM,gBAA7C,GAAgE,IAFxB,CAA1C;AAIA,sBACE,gCAAC,0BAAD;AACE,IAAA,SAAS,EAAEH,iBADb;AAEE,IAAA,OAAO,EAAE,iBAAAK,QAAQ;AAAA,0BACf,gCAAC,oBAAD,CAAQ,GAAR;AAAY,QAAA,UAAU,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAxB,SAAyCD,QAAzC,CADe;AAAA;AAFnB,KAMGR,KAAK,CAACQ,QANT,CADF;AAUD,CAjBM","sourcesContent":["import { motion } from 'framer-motion'\nimport React, { useContext } from 'react'\n\nimport { WEBCHAT } from '../../constants'\nimport { WebchatContext } from '../../contexts'\nimport { ConditionalWrapper } from '../../util/react'\n\nexport const ConditionalAnimation = props => {\n  const { getThemeProperty } = useContext(WebchatContext)\n\n  const animationsEnabled = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.enableAnimations,\n    props.enableAnimations !== undefined ? props.enableAnimations : true\n  )\n  return (\n    <ConditionalWrapper\n      condition={animationsEnabled}\n      wrapper={children => (\n        <motion.div whileHover={{ scale: 1.2 }}>{children}</motion.div>\n      )}\n    >\n      {props.children}\n    </ConditionalWrapper>\n  )\n}\n"],"file":"conditional-animation.js"}