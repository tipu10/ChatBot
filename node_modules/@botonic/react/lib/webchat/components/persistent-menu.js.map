{"version":3,"sources":["../../../src/webchat/components/persistent-menu.jsx"],"names":["ButtonsContainer","styled","div","OpenedPersistentMenu","onClick","options","borderRadius","ref","isComponentVisible","WebchatContext","getThemeProperty","CustomPersistentMenu","WEBCHAT","CUSTOM_PROPERTIES","customPersistentMenu","undefined","closeLabel","filter","opt","e","ROLES","PERSISTENT_MENU","Object","values","map","i","label","url","target","webview","payload","PersistentMenu","persistentMenu","persistentMenuOptions","CustomMenuButton","customMenuButton","PERSISTENT_MENU_ICON","LogoMenu"],"mappings":";;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,6BAAOC,GAAV,mLAAtB;;AAQO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,OAAwC;AAAA,MAArCC,OAAqC,QAArCA,OAAqC;AAAA,MAA5BC,OAA4B,QAA5BA,OAA4B;AAAA,MAAnBC,YAAmB,QAAnBA,YAAmB;;AAC1E,6BAAoC,gCAAoB,IAApB,EAA0BF,OAA1B,CAApC;AAAA,MAAQG,GAAR,wBAAQA,GAAR;AAAA,MAAaC,kBAAb,wBAAaA,kBAAb;;AACA,oBAA6B,uBAAWC,wBAAX,CAA7B;AAAA,MAAQC,gBAAR,eAAQA,gBAAR;;AACA,MAAMC,oBAAoB,GAAGD,gBAAgB,CAC3CE,mBAAQC,iBAAR,CAA0BC,oBADiB,EAE3CC,SAF2C,CAA7C;AAIA,MAAIC,UAAU,GAAG,QAAjB;;AACA,MAAI;AACFA,IAAAA,UAAU,GAAGX,OAAO,CAACY,MAAR,CAAe,UAAAC,GAAG;AAAA,aAAIA,GAAG,CAACF,UAAJ,KAAmBD,SAAvB;AAAA,KAAlB,EAAoD,CAApD,EACVC,UADH;AAED,GAHD,CAGE,OAAOG,CAAP,EAAU,CAAE;;AACd,sBACE;AAAK,IAAA,GAAG,EAAEZ,GAAV;AAAe,IAAA,IAAI,EAAEa,iBAAMC;AAA3B,KACGb,kBAAkB,IAAIG,oBAAtB,gBACC,gCAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEP,OAA/B;AAAwC,IAAA,OAAO,EAAEC;AAAjD,IADD,gBAGC,gCAAC,gBAAD,QACGiB,MAAM,CAACC,MAAP,CAAclB,OAAd,EAAuBmB,GAAvB,CAA2B,UAACL,CAAD,EAAIM,CAAJ,EAAU;AACpC,WACEN,CAAC,CAACO,KAAF,iBACE,gCAAC,cAAD;AACE,MAAA,OAAO,EAAEtB,OADX;AAEE,MAAA,GAAG,EAAEe,CAAC,CAACQ,GAFT;AAGE,MAAA,MAAM,EAAER,CAAC,CAACS,MAHZ;AAIE,MAAA,OAAO,EAAET,CAAC,CAACU,OAJb;AAKE,MAAA,OAAO,EAAEV,CAAC,CAACW,OALb;AAME,MAAA,GAAG,EAAEL;AANP,OAQGN,CAAC,CAACO,KARL,CAFJ;AAcD,GAfA,CADH,eAiBE,gCAAC,cAAD;AAAQ,IAAA,OAAO,EAAEtB,OAAjB;AAA0B,IAAA,YAAY,EAAEE;AAAxC,KACGU,UADH,CAjBF,CAJJ,CADF;AA6BD,CAzCM;;;;AA2CA,IAAMe,cAAc,GAAG,SAAjBA,cAAiB,QAAiC;AAAA,MAA9B3B,OAA8B,SAA9BA,OAA8B;AAAA,MAArB4B,cAAqB,SAArBA,cAAqB;;AAC7D,qBAA6B,uBAAWvB,wBAAX,CAA7B;AAAA,MAAQC,gBAAR,gBAAQA,gBAAR;;AAEA,MAAMuB,qBAAqB,GAAGvB,gBAAgB,CAC5CE,mBAAQC,iBAAR,CAA0BmB,cADkB,EAE5CA,cAF4C,CAA9C;AAKA,MAAME,gBAAgB,GAAGxB,gBAAgB,CACvCE,mBAAQC,iBAAR,CAA0BsB,gBADa,EAEvCpB,SAFuC,CAAzC;AAKA,sBACE,kEACGkB,qBAAqB,gBACpB,gCAAC,0CAAD,qBACE;AAAK,IAAA,IAAI,EAAEb,iBAAMgB,oBAAjB;AAAuC,IAAA,OAAO,EAAEhC;AAAhD,KACG8B,gBAAgB,gBAAG,gCAAC,gBAAD,OAAH,gBAA0B,gCAAC,YAAD;AAAM,IAAA,GAAG,EAAEG;AAAX,IAD7C,CADF,CADoB,GAMlB,IAPN,CADF;AAWD,CAxBM;;;eA0BQlC,oB","sourcesContent":["import React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport LogoMenu from '../../assets/menuButton.svg'\nimport { Button } from '../../components/button'\nimport { ROLES, WEBCHAT } from '../../constants'\nimport { WebchatContext } from '../../contexts'\nimport { ConditionalAnimation } from '../components/conditional-animation'\nimport { useComponentVisible } from '../hooks'\nimport { Icon } from './common'\n\nconst ButtonsContainer = styled.div`\n  position: absolute;\n  z-index: 2;\n  width: 100%;\n  bottom: 0;\n  text-align: center;\n`\n\nexport const OpenedPersistentMenu = ({ onClick, options, borderRadius }) => {\n  const { ref, isComponentVisible } = useComponentVisible(true, onClick)\n  const { getThemeProperty } = useContext(WebchatContext)\n  const CustomPersistentMenu = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.customPersistentMenu,\n    undefined\n  )\n  let closeLabel = 'Cancel'\n  try {\n    closeLabel = options.filter(opt => opt.closeLabel !== undefined)[0]\n      .closeLabel\n  } catch (e) {}\n  return (\n    <div ref={ref} role={ROLES.PERSISTENT_MENU}>\n      {isComponentVisible && CustomPersistentMenu ? (\n        <CustomPersistentMenu onClick={onClick} options={options} />\n      ) : (\n        <ButtonsContainer>\n          {Object.values(options).map((e, i) => {\n            return (\n              e.label && (\n                <Button\n                  onClick={onClick}\n                  url={e.url}\n                  target={e.target}\n                  webview={e.webview}\n                  payload={e.payload}\n                  key={i}\n                >\n                  {e.label}\n                </Button>\n              )\n            )\n          })}\n          <Button onClick={onClick} bottomRadius={borderRadius}>\n            {closeLabel}\n          </Button>\n        </ButtonsContainer>\n      )}\n    </div>\n  )\n}\n\nexport const PersistentMenu = ({ onClick, persistentMenu }) => {\n  const { getThemeProperty } = useContext(WebchatContext)\n\n  const persistentMenuOptions = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.persistentMenu,\n    persistentMenu\n  )\n\n  const CustomMenuButton = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.customMenuButton,\n    undefined\n  )\n\n  return (\n    <>\n      {persistentMenuOptions ? (\n        <ConditionalAnimation>\n          <div role={ROLES.PERSISTENT_MENU_ICON} onClick={onClick}>\n            {CustomMenuButton ? <CustomMenuButton /> : <Icon src={LogoMenu} />}\n          </div>\n        </ConditionalAnimation>\n      ) : null}\n    </>\n  )\n}\n\nexport default OpenedPersistentMenu\n"],"file":"persistent-menu.js"}