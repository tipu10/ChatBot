"use strict";

var _typeof = require("@babel/runtime/helpers/typeof");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ConditionalAnimation = void 0;

var _framerMotion = require("framer-motion");

var _react = _interopRequireWildcard(require("react"));

var _constants = require("../../constants");

var _contexts = require("../../contexts");

var _react2 = require("../../util/react");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var ConditionalAnimation = function ConditionalAnimation(props) {
  var _useContext = (0, _react.useContext)(_contexts.WebchatContext),
      getThemeProperty = _useContext.getThemeProperty;

  var animationsEnabled = getThemeProperty(_constants.WEBCHAT.CUSTOM_PROPERTIES.enableAnimations, props.enableAnimations !== undefined ? props.enableAnimations : true);
  return /*#__PURE__*/_react["default"].createElement(_react2.ConditionalWrapper, {
    condition: animationsEnabled,
    wrapper: function wrapper(children) {
      return /*#__PURE__*/_react["default"].createElement(_framerMotion.motion.div, {
        whileHover: {
          scale: 1.2
        }
      }, children);
    }
  }, props.children);
};

exports.ConditionalAnimation = ConditionalAnimation;
//# sourceMappingURL=conditional-animation.js.map