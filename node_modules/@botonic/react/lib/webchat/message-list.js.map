{"version":3,"sources":["../../src/webchat/message-list.jsx"],"names":["StyledMessages","styled","div","DefaultIntroImage","img","WebchatMessageList","props","WebchatContext","webchatState","getThemeProperty","animationsEnabled","WEBCHAT","CUSTOM_PROPERTIES","enableAnimations","CustomIntro","customIntro","introImage","introStyle","scrollbarOptions","enable","autoHide","scrollbar","DefaultIntro","ROLES","MESSAGE_LIST","style","children","messagesComponents","map","e","i","MESSAGE"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,cAAc,GAAGC,6BAAOC,GAAV,0NAApB;;AASA,IAAMC,iBAAiB,GAAGF,6BAAOG,GAAV,8HAAvB;;AAKO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,KAAK,EAAI;AACzC,oBAA2C,uBAAWC,wBAAX,CAA3C;AAAA,MAAQC,YAAR,eAAQA,YAAR;AAAA,MAAsBC,gBAAtB,eAAsBA,gBAAtB;;AACA,MAAMC,iBAAiB,GAAGD,gBAAgB,CACxCE,mBAAQC,iBAAR,CAA0BC,gBADc,EAExC,IAFwC,CAA1C;AAIA,MAAMC,WAAW,GAAGL,gBAAgB,CAACE,mBAAQC,iBAAR,CAA0BG,WAA3B,CAApC;AACA,MAAMC,UAAU,GAAGP,gBAAgB,CAACE,mBAAQC,iBAAR,CAA0BI,UAA3B,CAAnC;AACA,MAAMC,UAAU,GAAGR,gBAAgB,CAACE,mBAAQC,iBAAR,CAA0BK,UAA3B,CAAnC;;AAEA,MAAMC,gBAAgB,mCACjB;AAAEC,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADiB,GAEjBX,gBAAgB,CAACE,mBAAQC,iBAAR,CAA0BS,SAA3B,CAFC,CAAtB;;AAKA,MAAMC,YAAY,GAAGN,UAAU,iBAC7B,gCAAC,iBAAD;AACE,IAAA,KAAK,oBACAC,UADA,CADP;AAIE,IAAA,GAAG,EAAE,+BAAaD,UAAb;AAJP,IADF;;AASA,sBACE,gCAAC,gCAAD;AACE,IAAA,IAAI,EAAEO,iBAAMC,YADd,CAEE;AAFF;AAGE,IAAA,EAAE,EAAC,4BAHL;AAIE,IAAA,SAAS,EAAEN,gBAJb;AAKE,IAAA,QAAQ,EAAEA,gBAAgB,CAACE,QAL7B;AAME,IAAA,mBAAmB,EAAC,MANtB;AAOE,IAAA,KAAK,oBACAd,KAAK,CAACmB,KADN;AAPP,KAWG,CAACX,WAAW,IAAIQ,YAAhB,kBACC,gCAAC,0BAAD;AACE,IAAA,SAAS,EAAEZ,iBADb;AAEE,IAAA,OAAO,EAAE,iBAAAgB,QAAQ;AAAA,0BAAI,gCAAC,gBAAD,QAAOA,QAAP,CAAJ;AAAA;AAFnB,KAIGZ,WAAW,gBAAG,gCAAC,WAAD,OAAH,GAAqBQ,YAJnC,CAZJ,EAmBGd,YAAY,CAACmB,kBAAb,CAAgCC,GAAhC,CAAoC,UAACC,CAAD,EAAIC,CAAJ;AAAA,wBACnC,gCAAC,cAAD;AAAgB,MAAA,IAAI,EAAEP,iBAAMQ,OAA5B;AAAqC,MAAA,GAAG,EAAED;AAA1C,OACGD,CADH,CADmC;AAAA,GAApC,CAnBH,EAwBGvB,KAAK,CAACoB,QAxBT,CADF;AA4BD,CApDM","sourcesContent":["import React, { useContext } from 'react'\nimport Fade from 'react-reveal/Fade'\nimport styled from 'styled-components'\n\nimport { ROLES, WEBCHAT } from '../constants'\nimport { WebchatContext } from '../contexts'\nimport { resolveImage } from '../util/environment'\nimport { ConditionalWrapper } from '../util/react'\nimport { StyledScrollbar } from './components/styled-scrollbar'\n\nconst StyledMessages = styled.div`\n  display: flex;\n  overflow-x: hidden;\n  flex-direction: column;\n  flex: none;\n  white-space: pre;\n  word-wrap: break-word;\n`\n\nconst DefaultIntroImage = styled.img`\n  max-height: 50%;\n  width: 100%;\n`\n\nexport const WebchatMessageList = props => {\n  const { webchatState, getThemeProperty } = useContext(WebchatContext)\n  const animationsEnabled = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.enableAnimations,\n    true\n  )\n  const CustomIntro = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.customIntro)\n  const introImage = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.introImage)\n  const introStyle = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.introStyle)\n\n  const scrollbarOptions = {\n    ...{ enable: true, autoHide: true },\n    ...getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.scrollbar),\n  }\n\n  const DefaultIntro = introImage && (\n    <DefaultIntroImage\n      style={{\n        ...introStyle,\n      }}\n      src={resolveImage(introImage)}\n    />\n  )\n\n  return (\n    <StyledScrollbar\n      role={ROLES.MESSAGE_LIST}\n      // TODO: Distinguis between multiple instances of webchat, e.g. `${uniqueId}-botonic-scrollable`\n      id='botonic-scrollable-content'\n      scrollbar={scrollbarOptions}\n      autoHide={scrollbarOptions.autoHide}\n      ismessagescontainer='true'\n      style={{\n        ...props.style,\n      }}\n    >\n      {(CustomIntro || DefaultIntro) && (\n        <ConditionalWrapper\n          condition={animationsEnabled}\n          wrapper={children => <Fade>{children}</Fade>}\n        >\n          {CustomIntro ? <CustomIntro /> : DefaultIntro}\n        </ConditionalWrapper>\n      )}\n      {webchatState.messagesComponents.map((e, i) => (\n        <StyledMessages role={ROLES.MESSAGE} key={i}>\n          {e}\n        </StyledMessages>\n      ))}\n      {props.children}\n    </StyledScrollbar>\n  )\n}\n"],"file":"message-list.js"}