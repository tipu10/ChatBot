"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.messagesReducer = void 0;

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _actions = require("./actions");

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var messagesReducer = function messagesReducer(state, action) {
  switch (action.type) {
    case _actions.ADD_MESSAGE:
      return addMessageReducer(state, action);

    case _actions.ADD_MESSAGE_COMPONENT:
      return _objectSpread(_objectSpread({}, state), {}, {
        messagesComponents: [].concat((0, _toConsumableArray2["default"])(state.messagesComponents || []), [action.payload])
      });

    case _actions.UPDATE_MESSAGE:
      return updateMessageReducer(state, action);

    case _actions.UPDATE_REPLIES:
      return _objectSpread(_objectSpread({}, state), {}, {
        replies: action.payload
      });

    case _actions.CLEAR_MESSAGES:
      return _objectSpread(_objectSpread({}, state), {}, {
        messagesJSON: [],
        messagesComponents: []
      });

    case _actions.UPDATE_LAST_MESSAGE_DATE:
      return _objectSpread(_objectSpread({}, state), {}, {
        lastMessageUpdate: action.payload
      });

    default:
      throw new Error();
  }
};

exports.messagesReducer = messagesReducer;

function updateMessageReducer(state, action) {
  var msgIndex = state.messagesJSON.map(function (m) {
    return m.id;
  }).indexOf(action.payload.id);

  if (msgIndex > -1) {
    var msgComponent = state.messagesComponents[msgIndex];
    var updatedMessageComponents = {};

    if (msgComponent) {
      var updatedMsgComponent = _objectSpread(_objectSpread({}, msgComponent), {
        props: _objectSpread(_objectSpread({}, msgComponent.props), {}, {
          ack: action.payload.ack
        })
      });

      updatedMessageComponents = {
        messagesComponents: [].concat((0, _toConsumableArray2["default"])(state.messagesComponents.slice(0, msgIndex)), [_objectSpread({}, updatedMsgComponent)], (0, _toConsumableArray2["default"])(state.messagesComponents.slice(msgIndex + 1)))
      };
    }

    return _objectSpread(_objectSpread({}, state), {}, {
      messagesJSON: [].concat((0, _toConsumableArray2["default"])(state.messagesJSON.slice(0, msgIndex)), [_objectSpread({}, action.payload)], (0, _toConsumableArray2["default"])(state.messagesJSON.slice(msgIndex + 1)))
    }, updatedMessageComponents);
  }

  return state;
}

function addMessageReducer(state, action) {
  if (state.messagesJSON && state.messagesJSON.find(function (m) {
    return m.id === action.payload.id;
  })) return state;
  return _objectSpread(_objectSpread({}, state), {}, {
    messagesJSON: [].concat((0, _toConsumableArray2["default"])(state.messagesJSON || []), [action.payload])
  });
}
//# sourceMappingURL=messages-reducer.js.map