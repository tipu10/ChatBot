{"version":3,"sources":["../../src/webchat/session-view.jsx"],"names":["AttributeContainer","styled","div","COLORS","SOLID_WHITE","Label","Value","CURIOUS_BLUE","SessionViewAttribute","props","label","value","SessionViewContent","show","DAINTREE_BLUE","ToggleTab","SOLID_WHITE_ALPHA_0_8","ContentContainer","Title","SOLID_WHITE_ALPHA_0_2","SessionContainer","KeepSessionContainer","SessionView","webchatHooks","webchatState","updateDevSettings","input","latestInput","session","lastRoutePath","toggleSessionView","devSettings","showSessionView","toggleKeepSessionOnReload","keepSessionOnReload","Object","keys","length","type","data","payload","intent","confidence","toFixed","Boolean"],"mappings":"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","sourcesContent":["import React from 'react'\nimport JSONTree from 'react-json-tree'\nimport styled from 'styled-components'\n\nimport { COLORS } from '../constants'\nimport { useWebchat } from './hooks'\n\nconst AttributeContainer = styled.div`\n  display: flex;\n  flex: none;\n  padding: 12px;\n  padding-bottom: 0px;\n  font-size: 12px;\n  font-weight: 600;\n  color: ${COLORS.SOLID_WHITE};\n  align-items: center;\n`\n\nconst Label = styled.div`\n  flex: none;\n`\n\nconst Value = styled.div`\n  flex: 1 1 auto;\n  max-height: 20px;\n  font-size: 16px;\n  font-weight: 400;\n  margin-left: 6px;\n  color: ${COLORS.CURIOUS_BLUE};\n  overflow-x: hidden;\n`\n\nconst SessionViewAttribute = props => (\n  <AttributeContainer>\n    <Label>{props.label}</Label>\n    <Value>{props.value}</Value>\n  </AttributeContainer>\n)\n\nconst SessionViewContent = styled.div`\n  position: relative;\n  width: ${props => (props.show ? '100%' : '0%')};\n  height: 100%;\n  display: flex;\n  background-color: ${COLORS.DAINTREE_BLUE};\n  font-family: Arial, Helvetica, sans-serif;\n  flex-direction: column;\n  z-index: 100000;\n  transition: all 0.2s ease-in-out;\n`\n\nconst ToggleTab = styled.div`\n  position: absolute;\n  top: 10px;\n  right: -32px;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ${COLORS.SOLID_WHITE_ALPHA_0_8};\n  font-size: 14px;\n  font-weight: 600;\n  background-color: ${COLORS.DAINTREE_BLUE};\n  flex-direction: column;\n  z-index: 100000;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n`\n\nconst ContentContainer = styled.div`\n  overflow-y: auto;\n  overflow-x: auto;\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n`\n\nconst Title = styled.div`\n  padding: 12px;\n  text-align: center;\n  color: ${COLORS.SOLID_WHITE};\n  border-bottom: 1px solid ${COLORS.SOLID_WHITE_ALPHA_0_2};\n`\n\nconst SessionContainer = styled.div`\n  flex: 1 1 auto;\n  height: 100%;\n  overflow-y: auto;\n`\n\nconst KeepSessionContainer = styled.div`\n  flex: none;\n  padding: 12px;\n  color: ${COLORS.SOLID_WHITE_ALPHA_0_8};\n  font-size: 12px;\n`\n\nexport const SessionView = props => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const { webchatState, updateDevSettings } = props.webchatHooks || useWebchat()\n  const { latestInput: input, session, lastRoutePath } = webchatState\n  const toggleSessionView = () =>\n    updateDevSettings({\n      ...webchatState.devSettings,\n      showSessionView: !webchatState.devSettings.showSessionView,\n    })\n  const toggleKeepSessionOnReload = () =>\n    updateDevSettings({\n      ...webchatState.devSettings,\n      keepSessionOnReload: !webchatState.devSettings.keepSessionOnReload,\n    })\n  return (\n    <SessionViewContent show={webchatState.devSettings.showSessionView}>\n      <ToggleTab onClick={toggleSessionView}>\n        {webchatState.devSettings.showSessionView ? '⇤' : '⇥'}\n      </ToggleTab>\n      <ContentContainer>\n        <Title>Botonic Dev Console</Title>\n        <SessionViewAttribute\n          label='INPUT:'\n          value={\n            input && Object.keys(input).length\n              ? `[${input.type}] ${input.data || ''}`\n              : ''\n          }\n        />\n        <SessionViewAttribute label='PAYLOAD:' value={input.payload} />\n        <SessionViewAttribute\n          label='INTENT:'\n          value={\n            input.intent\n              ? `${input.intent} (${(input.confidence * 100).toFixed(1)}%)`\n              : ''\n          }\n        />\n        <SessionViewAttribute\n          label='PATH:'\n          value={lastRoutePath ? `/${lastRoutePath}` : '/'}\n        />\n        <SessionViewAttribute label='SESSION:' />\n        <SessionContainer>\n          <JSONTree data={session} hideRoot={true} />\n        </SessionContainer>\n        <KeepSessionContainer>\n          <label>\n            <input\n              type='checkbox'\n              name='toggleKeepSessionOnReload'\n              checked={Boolean(webchatState.devSettings.keepSessionOnReload)}\n              onChange={toggleKeepSessionOnReload}\n            />\n            Keep session on reload\n          </label>\n        </KeepSessionContainer>\n      </ContentContainer>\n    </SessionViewContent>\n  )\n}\n"],"file":"session-view.js"}