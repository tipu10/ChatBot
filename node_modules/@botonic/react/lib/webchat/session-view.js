"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SessionView = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _taggedTemplateLiteral2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteral"));

var _react = _interopRequireDefault(require("react"));

var _reactJsonTree = _interopRequireDefault(require("react-json-tree"));

var _styledComponents = _interopRequireDefault(require("styled-components"));

var _constants = require("../constants");

var _hooks = require("./hooks");

var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9;

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2["default"])(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

var AttributeContainer = _styledComponents["default"].div(_templateObject || (_templateObject = (0, _taggedTemplateLiteral2["default"])(["\n  display: flex;\n  flex: none;\n  padding: 12px;\n  padding-bottom: 0px;\n  font-size: 12px;\n  font-weight: 600;\n  color: ", ";\n  align-items: center;\n"])), _constants.COLORS.SOLID_WHITE);

var Label = _styledComponents["default"].div(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteral2["default"])(["\n  flex: none;\n"])));

var Value = _styledComponents["default"].div(_templateObject3 || (_templateObject3 = (0, _taggedTemplateLiteral2["default"])(["\n  flex: 1 1 auto;\n  max-height: 20px;\n  font-size: 16px;\n  font-weight: 400;\n  margin-left: 6px;\n  color: ", ";\n  overflow-x: hidden;\n"])), _constants.COLORS.CURIOUS_BLUE);

var SessionViewAttribute = function SessionViewAttribute(props) {
  return /*#__PURE__*/_react["default"].createElement(AttributeContainer, null, /*#__PURE__*/_react["default"].createElement(Label, null, props.label), /*#__PURE__*/_react["default"].createElement(Value, null, props.value));
};

var SessionViewContent = _styledComponents["default"].div(_templateObject4 || (_templateObject4 = (0, _taggedTemplateLiteral2["default"])(["\n  position: relative;\n  width: ", ";\n  height: 100%;\n  display: flex;\n  background-color: ", ";\n  font-family: Arial, Helvetica, sans-serif;\n  flex-direction: column;\n  z-index: 100000;\n  transition: all 0.2s ease-in-out;\n"])), function (props) {
  return props.show ? '100%' : '0%';
}, _constants.COLORS.DAINTREE_BLUE);

var ToggleTab = _styledComponents["default"].div(_templateObject5 || (_templateObject5 = (0, _taggedTemplateLiteral2["default"])(["\n  position: absolute;\n  top: 10px;\n  right: -32px;\n  width: 32px;\n  height: 32px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: ", ";\n  font-size: 14px;\n  font-weight: 600;\n  background-color: ", ";\n  flex-direction: column;\n  z-index: 100000;\n  border-top-right-radius: 6px;\n  border-bottom-right-radius: 6px;\n"])), _constants.COLORS.SOLID_WHITE_ALPHA_0_8, _constants.COLORS.DAINTREE_BLUE);

var ContentContainer = _styledComponents["default"].div(_templateObject6 || (_templateObject6 = (0, _taggedTemplateLiteral2["default"])(["\n  overflow-y: auto;\n  overflow-x: auto;\n  display: flex;\n  flex: 1 1 auto;\n  flex-direction: column;\n"])));

var Title = _styledComponents["default"].div(_templateObject7 || (_templateObject7 = (0, _taggedTemplateLiteral2["default"])(["\n  padding: 12px;\n  text-align: center;\n  color: ", ";\n  border-bottom: 1px solid ", ";\n"])), _constants.COLORS.SOLID_WHITE, _constants.COLORS.SOLID_WHITE_ALPHA_0_2);

var SessionContainer = _styledComponents["default"].div(_templateObject8 || (_templateObject8 = (0, _taggedTemplateLiteral2["default"])(["\n  flex: 1 1 auto;\n  height: 100%;\n  overflow-y: auto;\n"])));

var KeepSessionContainer = _styledComponents["default"].div(_templateObject9 || (_templateObject9 = (0, _taggedTemplateLiteral2["default"])(["\n  flex: none;\n  padding: 12px;\n  color: ", ";\n  font-size: 12px;\n"])), _constants.COLORS.SOLID_WHITE_ALPHA_0_8);

var SessionView = function SessionView(props) {
  // eslint-disable-next-line react-hooks/rules-of-hooks
  var _ref = props.webchatHooks || (0, _hooks.useWebchat)(),
      webchatState = _ref.webchatState,
      updateDevSettings = _ref.updateDevSettings;

  var input = webchatState.latestInput,
      session = webchatState.session,
      lastRoutePath = webchatState.lastRoutePath;

  var toggleSessionView = function toggleSessionView() {
    return updateDevSettings(_objectSpread(_objectSpread({}, webchatState.devSettings), {}, {
      showSessionView: !webchatState.devSettings.showSessionView
    }));
  };

  var toggleKeepSessionOnReload = function toggleKeepSessionOnReload() {
    return updateDevSettings(_objectSpread(_objectSpread({}, webchatState.devSettings), {}, {
      keepSessionOnReload: !webchatState.devSettings.keepSessionOnReload
    }));
  };

  return /*#__PURE__*/_react["default"].createElement(SessionViewContent, {
    show: webchatState.devSettings.showSessionView
  }, /*#__PURE__*/_react["default"].createElement(ToggleTab, {
    onClick: toggleSessionView
  }, webchatState.devSettings.showSessionView ? '⇤' : '⇥'), /*#__PURE__*/_react["default"].createElement(ContentContainer, null, /*#__PURE__*/_react["default"].createElement(Title, null, "Botonic Dev Console"), /*#__PURE__*/_react["default"].createElement(SessionViewAttribute, {
    label: "INPUT:",
    value: input && Object.keys(input).length ? "[".concat(input.type, "] ").concat(input.data || '') : ''
  }), /*#__PURE__*/_react["default"].createElement(SessionViewAttribute, {
    label: "PAYLOAD:",
    value: input.payload
  }), /*#__PURE__*/_react["default"].createElement(SessionViewAttribute, {
    label: "INTENT:",
    value: input.intent ? "".concat(input.intent, " (").concat((input.confidence * 100).toFixed(1), "%)") : ''
  }), /*#__PURE__*/_react["default"].createElement(SessionViewAttribute, {
    label: "PATH:",
    value: lastRoutePath ? "/".concat(lastRoutePath) : '/'
  }), /*#__PURE__*/_react["default"].createElement(SessionViewAttribute, {
    label: "SESSION:"
  }), /*#__PURE__*/_react["default"].createElement(SessionContainer, null, /*#__PURE__*/_react["default"].createElement(_reactJsonTree["default"], {
    data: session,
    hideRoot: true
  })), /*#__PURE__*/_react["default"].createElement(KeepSessionContainer, null, /*#__PURE__*/_react["default"].createElement("label", null, /*#__PURE__*/_react["default"].createElement("input", {
    type: "checkbox",
    name: "toggleKeepSessionOnReload",
    checked: Boolean(webchatState.devSettings.keepSessionOnReload),
    onChange: toggleKeepSessionOnReload
  }), "Keep session on reload"))));
};

exports.SessionView = SessionView;
//# sourceMappingURL=session-view.js.map