{"version":3,"sources":["../../src/webchat/webchat.jsx"],"names":["getParsedAction","botonicAction","splittedAction","split","length","undefined","JSON","parse","StyledWebchat","styled","div","props","width","height","COLORS","SOLID_WHITE","SOLID_BLACK_ALPHA_0_2","StyledTriggerButton","UserInputContainer","SOLID_BLACK_ALPHA_0_5","TextAreaContainer","TriggerImage","img","ErrorMessageContainer","ErrorMessage","ERROR_RED","CONCRETE_WHITE","WEBCHAT","DEFAULTS","FONT_FAMILY","DarkBackgroundMenu","SOLID_BLACK","Webchat","ref","webchatHooks","webchatState","addMessage","addMessageComponent","updateMessage","updateReplies","updateLatestInput","updateTyping","updateWebview","updateSession","updateLastRoutePath","updateHandoff","updateTheme","updateDevSettings","toggleWebchat","toggleEmojiPicker","togglePersistentMenu","toggleCoverComponent","doRenderCustomComponent","setError","setOnline","clearMessages","openWebviewT","closeWebviewT","updateLastMessageDate","setCurrentAttachment","firstUpdate","isOnline","online","currentDateString","Date","toISOString","theme","initialSession","initialDevSettings","onStateChange","getThemeProperty","customComponent","setCustomComponent","storage","storageKey","botonicState","saveState","host","document","body","deviceAdapter","DeviceAdapter","saveWebchatState","messages","messagesJSON","session","lastRoutePath","devSettings","lastMessageUpdate","themeUpdates","handleAttachment","event","target","files","size","Error","MAX_ALLOWED_SIZE_MB","fileName","name","file","attachmentType","type","currentAttachment","sendAttachment","sendUserInput","input","onUserInput","user","sendChatEvent","chatEvent","chatEventInput","id","INPUT","CHAT_EVENT","data","window","_botonicInsertStyles","botonicStyle","head","appendChild","shadowDOM","cloneNode","querySelectorAll","style","textContent","includes","forEach","m","newComponent","delay","typing","message","customTypes","customMessageTypes","onInit","setTimeout","isWebchatOpen","init","behavior","server","current","openWebview","webviewComponent","params","handleSelectedEmoji","emojiObject","textArea","value","emoji","focus","closeWebview","options","userInputEnabled","payload","sendPayload","path","handleMenu","isPersistentMenuOpen","handleEmojiClick","isEmojiPickerOpen","persistentMenuOptions","CUSTOM_PROPERTIES","persistentMenu","darkBackgroundMenu","getBlockInputs","rule","inputData","processedInput","preprocess","match","some","regex","test","checkBlockInput","blockInputs","Array","isArray","SENDERS","backgroundColor","SCORPION_GRAY","borderColor","padding","closeMenu","borderRadius","getCoverComponent","coverComponent","component","CoverComponent","closeCoverComponent","coverComponentProps","isCoverComponentOpen","messageComponentFromInput","messageComponent","temporaryDisplayUrl","URL","createObjectURL","mediaProps","from","src","sendInput","Object","keys","trim","updateSessionWithUser","userToUpdate","addBotResponse","response","map","r","action","_botonic_action","handoff","startsWith","isDev","setTyping","addUserMessage","updateUser","openWebchat","closeWebchat","openCoverComponent","renderCustomComponent","_customComponent","unmountCustomComponent","openWebviewApi","getMessages","getLastMessageUpdate","updateMessageInfo","msgId","messageInfo","messageToUpdate","filter","updatedMsg","ack","unsentInput","updateWebchatSettings","settings","resolveCase","prevSession","on_finish","sendText","text","TEXT","POSTBACK","attachment","sendTextAreaText","isTyping","typingTimeout","clearTimeoutWithReset","reset","waitTime","clearTimeout","stopTyping","startTyping","onKeyDown","keyCode","shiftKey","preventDefault","onKeyUp","webviewRequestContext","getString","stringId","setLocale","locale","webviewParams","defaultDelay","defaultTyping","onOpen","onClose","getTriggerImage","triggerImage","triggerButtonImage","LOGO","triggerButtonStyle","CustomTriggerButton","customTrigger","triggerButton","ROLES","TRIGGER_BUTTON","webchatMessageList","flex","webchatReplies","replies","isUserInputEnabled","enableUserInput","userInputArea","userInputStyle","onFocus","onBlur","textPlaceholder","PLACEHOLDER","e","display","fontSize","border","resize","overflow","outline","paddingLeft","fontFamily","userInputBoxStyle","enableEmojiPicker","enableAttachments","join","webchatWebview","webviewStyle","mobileStyle","webview","mobileBreakpoint","right","bottom","updateWebchatDevSettings","DarkenBackground","_renderCustomComponent","WebchatComponent","ID","error","isCustomComponentRendered"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AAOA;;AACA;;AACA;;AACA;;AAEA;;AACA;;AACA;;AACA;;AAOA;;AACA;;AAYA;;AACA;;AACA;;AACA;;AACA;;AAMA;;AACA;;AACA;;AAIA;;AACA;;AACA;;AACA;;AACA;;AAMA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,aAAa,EAAI;AAC9C,MAAMC,cAAc,GAAGD,aAAa,CAACE,KAAd,CAAoB,cAApB,CAAvB;AACA,MAAID,cAAc,CAACE,MAAf,IAAyB,CAA7B,EAAgC,OAAOC,SAAP;AAChC,SAAOC,IAAI,CAACC,KAAL,CAAWL,cAAc,CAAC,CAAD,CAAzB,CAAP;AACD,CAJM;;;;AAMP,IAAMM,aAAa,GAAGC,6BAAOC,GAAV,sUAIR,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,KAAV;AAAA,CAJG,EAKP,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACE,MAAV;AAAA,CALE,EAOGC,kBAAOC,WAPV,EASHD,kBAAOE,qBATJ,CAAnB;;AAcA,IAAMC,mBAAmB,GAAGR,6BAAOC,GAAV,6VAGTI,kBAAOC,WAHE,CAAzB;;AAgBA,IAAMG,kBAAkB,GAAGT,6BAAOC,GAAV,mSASEI,kBAAOK,qBATT,CAAxB;;AAYA,IAAMC,iBAAiB,GAAGX,6BAAOC,GAAV,uJAAvB;;AAMA,IAAMW,YAAY,GAAGZ,6BAAOa,GAAV,mIAAlB;;AAKA,IAAMC,qBAAqB,GAAGd,6BAAOC,GAAV,8LAA3B;;AAQA,IAAMc,YAAY,GAAGf,6BAAOC,GAAV,8VAOII,kBAAOW,SAPX,EAQPX,kBAAOY,cARA,EAYDC,mBAAQC,QAAR,CAAiBC,WAZhB,CAAlB;;AAeA,IAAMC,kBAAkB,GAAGrB,6BAAOC,GAAV,2PACRI,kBAAOiB,WADC,CAAxB,C,CAYA;;;AACO,IAAMC,OAAO,gBAAG,uBAAW,UAACrB,KAAD,EAAQsB,GAAR,EAAgB;AAChD,aA2BItB,KAAK,CAACuB,YAAN,IAAsB,wBA3B1B;AAAA,MACEC,YADF,QACEA,YADF;AAAA,MAEEC,UAFF,QAEEA,UAFF;AAAA,MAGEC,mBAHF,QAGEA,mBAHF;AAAA,MAIEC,aAJF,QAIEA,aAJF;AAAA,MAKEC,aALF,QAKEA,aALF;AAAA,MAMEC,iBANF,QAMEA,iBANF;AAAA,MAOEC,YAPF,QAOEA,YAPF;AAAA,MAQEC,aARF,QAQEA,aARF;AAAA,MASEC,aATF,QASEA,aATF;AAAA,MAUEC,mBAVF,QAUEA,mBAVF;AAAA,MAWEC,aAXF,QAWEA,aAXF;AAAA,MAYEC,WAZF,QAYEA,WAZF;AAAA,MAaEC,iBAbF,QAaEA,iBAbF;AAAA,MAcEC,cAdF,QAcEA,aAdF;AAAA,MAeEC,iBAfF,QAeEA,iBAfF;AAAA,MAgBEC,oBAhBF,QAgBEA,oBAhBF;AAAA,MAiBEC,qBAjBF,QAiBEA,oBAjBF;AAAA,MAkBEC,uBAlBF,QAkBEA,uBAlBF;AAAA,MAmBEC,QAnBF,QAmBEA,QAnBF;AAAA,MAoBEC,SApBF,QAoBEA,SApBF;AAAA,MAqBEC,cArBF,QAqBEA,aArBF;AAAA,MAsBEC,YAtBF,QAsBEA,YAtBF;AAAA,MAuBEC,aAvBF,QAuBEA,aAvBF;AAAA,MAwBEC,qBAxBF,QAwBEA,qBAxBF;AAAA,MAyBEC,oBAzBF,QAyBEA,oBAzBF;;AA4BA,MAAMC,WAAW,GAAG,mBAAO,IAAP,CAApB;;AACA,MAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,WAAM1B,YAAY,CAAC2B,MAAnB;AAAA,GAAjB;;AACA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,WAAM,IAAIC,IAAJ,GAAWC,WAAX,EAAN;AAAA,GAA1B;;AACA,MAAMC,KAAK,GAAG,wBAAM/B,YAAY,CAAC+B,KAAnB,EAA0BvD,KAAK,CAACuD,KAAhC,CAAd;AACA,MAAQC,cAAR,GAA8DxD,KAA9D,CAAQwD,cAAR;AAAA,MAAwBC,kBAAxB,GAA8DzD,KAA9D,CAAwByD,kBAAxB;AAAA,MAA4CC,aAA5C,GAA8D1D,KAA9D,CAA4C0D,aAA5C;AACA,MAAMC,gBAAgB,GAAG,gCAAkBJ,KAAlB,CAAzB;;AAEA,kBAA8C,qBAAS,IAAT,CAA9C;AAAA;AAAA,MAAOK,eAAP;AAAA,MAAwBC,kBAAxB;;AACA,MAAMC,OAAO,GAAG9D,KAAK,CAAC8D,OAAtB;AACA,MAAMC,UAAU,GACd,OAAO/D,KAAK,CAAC+D,UAAb,KAA4B,UAA5B,GACI/D,KAAK,CAAC+D,UAAN,EADJ,GAEI/D,KAAK,CAAC+D,UAHZ;;AAKA,yBAAkC,0CAAgBD,OAAhB,EAAyBC,UAAzB,CAAlC;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,SAArB;;AAEA,MAAMC,IAAI,GAAGlE,KAAK,CAACkE,IAAN,IAAcC,QAAQ,CAACC,IAApC;AAEA,MAAMC,aAAa,GAAG,IAAIC,4BAAJ,EAAtB;;AAEA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAA/C,YAAY,EAAI;AACvCsC,IAAAA,OAAO,IACLG,SAAS,CACPtE,IAAI,CAACC,KAAL,CACE,iCAAoB;AAClB4E,MAAAA,QAAQ,EAAEhD,YAAY,CAACiD,YADL;AAElBC,MAAAA,OAAO,EAAElD,YAAY,CAACkD,OAFJ;AAGlBC,MAAAA,aAAa,EAAEnD,YAAY,CAACmD,aAHV;AAIlBC,MAAAA,WAAW,EAAEpD,YAAY,CAACoD,WAJR;AAKlBC,MAAAA,iBAAiB,EAAErD,YAAY,CAACqD,iBALd;AAMlBC,MAAAA,YAAY,EAAEtD,YAAY,CAACsD;AANT,KAApB,CADF,CADO,CADX;AAaD,GAdD;;AAgBA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK,EAAI;AAChC,QAAI,CAAC,iCAAcA,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,IAApC,CAAL,EAAgD;AAC9C,YAAM,IAAIC,KAAJ,+CACmCC,8BADnC,oBAAN;AAGD;;AACDrC,IAAAA,oBAAoB,CAAC;AACnBsC,MAAAA,QAAQ,EAAEN,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBK,IADb;AAEnBC,MAAAA,IAAI,EAAER,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAFa;AAEU;AAC7BO,MAAAA,cAAc,EAAE,gCAAaT,KAAK,CAACC,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBQ,IAAnC;AAHG,KAAD,CAApB;AAKD,GAXD;;AAaA,wBAAU,YAAM;AACd,QAAIlE,YAAY,CAACmE,iBAAjB,EACEC,cAAc,CAACpE,YAAY,CAACmE,iBAAd,CAAd;AACH,GAHD,EAGG,CAACnE,YAAY,CAACmE,iBAAd,CAHH;;AAKA,MAAME,aAAa;AAAA,8FAAG,iBAAMC,KAAN;AAAA;AAAA;AAAA;AAAA;AACpB9F,cAAAA,KAAK,CAAC+F,WAAN,IACE/F,KAAK,CAAC+F,WAAN,CAAkB;AAChBC,gBAAAA,IAAI,EAAExE,YAAY,CAACkD,OAAb,CAAqBsB,IADX;AAEhBF,gBAAAA,KAAK,EAAEA,KAFS;AAGhBpB,gBAAAA,OAAO,EAAElD,YAAY,CAACkD,OAHN;AAIhBC,gBAAAA,aAAa,EAAEnD,YAAY,CAACmD;AAJZ,eAAlB,CADF;;AADoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbkB,aAAa;AAAA;AAAA;AAAA,KAAnB;;AAUA,MAAMI,aAAa;AAAA,8FAAG,kBAAMC,SAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,cAAAA,cADc,GACG;AACrBC,gBAAAA,EAAE,EAAE,eADiB;AAErBV,gBAAAA,IAAI,EAAEW,YAAMC,UAFS;AAGrBC,gBAAAA,IAAI,EAAEL;AAHe,eADH;AAMpBlG,cAAAA,KAAK,CAAC+F,WAAN,IACE/F,KAAK,CAAC+F,WAAN,CAAkB;AAChBC,gBAAAA,IAAI,EAAExE,YAAY,CAACkD,OAAb,CAAqBsB,IADX;AAEhBF,gBAAAA,KAAK,EAAEK,cAFS;AAGhBzB,gBAAAA,OAAO,EAAElD,YAAY,CAACkD,OAHN;AAIhBC,gBAAAA,aAAa,EAAEnD,YAAY,CAACmD;AAJZ,eAAlB,CADF;;AANoB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAbsB,aAAa;AAAA;AAAA;AAAA,KAAnB,CA7FgD,CA4GhD;;;AACA,oCAAsB,YAAM;AAC1B,QAAIO,MAAM,CAACC,oBAAP,IAA+BD,MAAM,CAACC,oBAAP,CAA4BhH,MAA/D,EAAuE;AAAA,iDAC1C+G,MAAM,CAACC,oBADmC;AAAA;;AAAA;AACrE,4DAAwD;AAAA,cAA7CC,YAA6C;AACtD;AACA;AACA;AACAvC,UAAAA,QAAQ,CAACwC,IAAT,CAAcC,WAAd,CAA0BF,YAA1B,EAJsD,CAMtD;;AACA,cAAI1G,KAAK,CAAC6G,SAAV,EAAqB3C,IAAI,CAAC0C,WAAL,CAAiBF,YAAY,CAACI,SAAb,CAAuB,IAAvB,CAAjB;AACtB;AAToE;AAAA;AAAA;AAAA;AAAA;;AAUrE,aAAON,MAAM,CAACC,oBAAd;AACD;;AAED,QAAIzG,KAAK,CAAC6G,SAAV,EAAqB;AACnB;AACA;AAFmB,kDAGC1C,QAAQ,CAAC4C,gBAAT,CAA0B,OAA1B,CAHD;AAAA;;AAAA;AAGnB,+DAAwD;AAAA,cAA7CC,KAA6C;AACtD,cACEA,KAAK,CAACC,WAAN,IACAD,KAAK,CAACC,WAAN,CAAkBC,QAAlB,CAA2B,oBAA3B,CAFF,EAIEhD,IAAI,CAAC0C,WAAL,CAAiBI,KAAK,CAACF,SAAN,CAAgB,IAAhB,CAAjB;AACH;AATkB;AAAA;AAAA;AAAA;AAAA;AAUpB;AACF,GAzBD,EA7GgD,CAwIhD;;AACA,wBAAU,YAAM;AACd,gBAOI9C,YAAY,IAAI,EAPpB;AAAA,QACEQ,QADF,SACEA,QADF;AAAA,QAEEE,OAFF,SAEEA,OAFF;AAAA,QAGEC,aAHF,SAGEA,aAHF;AAAA,QAIEC,WAJF,SAIEA,WAJF;AAAA,QAKEC,iBALF,SAKEA,iBALF;AAAA,QAMEC,YANF,SAMEA,YANF;;AAQAJ,IAAAA,OAAO,GAAG,0BAAYA,OAAZ,CAAV;AACA1C,IAAAA,aAAa,CAAC0C,OAAD,CAAb;;AACA,QAAI,wCAA0B;AAAEjB,MAAAA,kBAAkB,EAAlBA,kBAAF;AAAsBmB,MAAAA,WAAW,EAAXA;AAAtB,KAA1B,CAAJ,EAAoE;AAClE,UAAIJ,QAAJ,EAAc;AACZA,QAAAA,QAAQ,CAAC2C,OAAT,CAAiB,UAAAC,CAAC,EAAI;AACpB3F,UAAAA,UAAU,CAAC2F,CAAD,CAAV;AACA,cAAMC,YAAY,GAAG,gEACdD,CADc;AACXE,YAAAA,KAAK,EAAE,CADI;AACDC,YAAAA,MAAM,EAAE;AADP,cAElBvH,KAAK,CAACuD,KAAN,CAAYiE,OAAZ,IAAuBxH,KAAK,CAACuD,KAAN,CAAYiE,OAAZ,CAAoBC,WAA5C,IACEzH,KAAK,CAACuD,KAAN,CAAYmE,kBAHK,CAArB;AAKA,cAAIL,YAAJ,EAAkB3F,mBAAmB,CAAC2F,YAAD,CAAnB;AACnB,SARD;AASD;;AACD,UAAI7D,cAAJ,EAAoBxB,aAAa,CAAC,wBAAMwB,cAAN,EAAsBkB,OAAtB,CAAD,CAAb;AACpB,UAAIC,aAAJ,EAAmB1C,mBAAmB,CAAC0C,aAAD,CAAnB;AACpB,KAdD,MAcO3C,aAAa,CAAC,wBAAMwB,cAAN,EAAsBkB,OAAtB,CAAD,CAAb;;AACP,QAAIE,WAAJ,EAAiBxC,iBAAiB,CAACwC,WAAD,CAAjB,CAAjB,KACK,IAAInB,kBAAJ,EAAwBrB,iBAAiB,CAACqB,kBAAD,CAAjB;AAC7B,QAAIoB,iBAAJ,EAAuB9B,qBAAqB,CAAC8B,iBAAD,CAArB;AACvB,QAAIC,YAAY,KAAKpF,SAArB,EACEyC,WAAW,CAAC,wBAAMnC,KAAK,CAACuD,KAAZ,EAAmBuB,YAAnB,CAAD,EAAmCA,YAAnC,CAAX;AACF,QAAI9E,KAAK,CAAC2H,MAAV,EAAkBC,UAAU,CAAC;AAAA,aAAM5H,KAAK,CAAC2H,MAAN,EAAN;AAAA,KAAD,EAAuB,GAAvB,CAAV;AACnB,GAhCD,EAgCG,EAhCH;AAkCA,wBAAU,YAAM;AACd,QAAI,CAACnG,YAAY,CAACqG,aAAlB,EAAiC;AACjCxD,IAAAA,aAAa,CAACyD,IAAd,CAAmB5D,IAAnB;AACA,6BAAe;AAAE6D,MAAAA,QAAQ,EAAE,MAAZ;AAAoB7D,MAAAA,IAAI,EAAJA;AAApB,KAAf;AACD,GAJD,EAIG,CAAC1C,YAAY,CAACqG,aAAd,CAJH;AAMA,wBAAU,YAAM;AACd,QAAInE,aAAa,IAAI,OAAOA,aAAP,KAAyB,UAA9C,EACEA,aAAa,CAAClC,YAAD,CAAb;AACF+C,IAAAA,gBAAgB,CAAC/C,YAAD,CAAhB;AACD,GAJD,EAIG,CACDA,YAAY,CAACiD,YADZ,EAEDjD,YAAY,CAACkD,OAFZ,EAGDlD,YAAY,CAACmD,aAHZ,EAIDnD,YAAY,CAACoD,WAJZ,EAKDpD,YAAY,CAACqD,iBALZ,CAJH;AAYA,kIAAe;AAAA;AAAA;AAAA;AAAA;AACb,gBAAI,CAACrD,YAAY,CAAC2B,MAAlB,EAA0B;AACxBT,cAAAA,QAAQ,CAAC;AACP8E,gBAAAA,OAAO,EAAE,oCAAsBxH,KAAK,CAACgI,MAA5B;AADF,eAAD,CAAR;AAGD,aAJD,MAIO;AACL,kBAAI,CAAC/E,WAAW,CAACgF,OAAjB,EAA0B;AACxBvF,gBAAAA,QAAQ,CAAChD,SAAD,CAAR;AACD;AACF;;AATY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAf,IAUG,CAAC8B,YAAY,CAAC2B,MAAd,CAVH;AAYA,wBAAU;AAAE3B,IAAAA,YAAY,EAAZA,YAAF;AAAgBM,IAAAA,YAAY,EAAZA,YAAhB;AAA8BH,IAAAA,aAAa,EAAbA,aAA9B;AAA6CuC,IAAAA,IAAI,EAAJA;AAA7C,GAAV;AAEA,wBAAU,YAAM;AACd/B,IAAAA,WAAW,CAAC,wBAAMnC,KAAK,CAACuD,KAAZ,EAAmBA,KAAnB,EAA0B/B,YAAY,CAACsD,YAAvC,CAAD,CAAX;AACD,GAFD,EAEG,CAAC9E,KAAK,CAACuD,KAAP,EAAc/B,YAAY,CAACsD,YAA3B,CAFH;;AAIA,MAAMoD,WAAW,GAAG,SAAdA,WAAc,CAACC,gBAAD,EAAmBC,MAAnB;AAAA,WAClBrG,aAAa,CAACoG,gBAAD,EAAmBC,MAAnB,CADK;AAAA,GAApB;;AAGA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACrD,KAAD,EAAQsD,WAAR,EAAwB;AAClDC,IAAAA,QAAQ,CAACN,OAAT,CAAiBO,KAAjB,IAA0BF,WAAW,CAACG,KAAtC;AACAF,IAAAA,QAAQ,CAACN,OAAT,CAAiBS,KAAjB;AACD,GAHD;;AAKA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAAAC,OAAO,EAAI;AAC9B7G,IAAAA,aAAa;;AACb,QAAI8G,gBAAJ,EAAsB;AACpBN,MAAAA,QAAQ,CAACN,OAAT,CAAiBS,KAAjB;AACD;;AACD,QAAIE,OAAO,IAAIA,OAAO,CAACE,OAAvB,EAAgC;AAC9BC,MAAAA,WAAW,CAACH,OAAO,CAACE,OAAT,CAAX;AACD,KAFD,MAEO,IAAIF,OAAO,IAAIA,OAAO,CAACI,IAAvB,EAA6B;AAClC,UAAIZ,MAAM,GAAG,EAAb;AACA,UAAIQ,OAAO,CAACR,MAAZ,EAAoBA,MAAM,GAAG,8BAAmBQ,OAAO,CAACR,MAA3B,CAAT;AACpBW,MAAAA,WAAW,2BAAoBH,OAAO,CAACI,IAA5B,cAAoCZ,MAApC,EAAX;AACD;AACF,GAZD;;AAcA,MAAMa,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB1G,IAAAA,oBAAoB,CAAC,CAACf,YAAY,CAAC0H,oBAAf,CAApB;AACD,GAFD;;AAIA,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B7G,IAAAA,iBAAiB,CAAC,CAACd,YAAY,CAAC4H,iBAAf,CAAjB;AACD,GAFD;;AAIA,MAAMC,qBAAqB,GAAG1F,gBAAgB,CAC5C3C,mBAAQsI,iBAAR,CAA0BC,cADkB,EAE5CvJ,KAAK,CAACuJ,cAFsC,CAA9C;AAKA,MAAMC,kBAAkB,GAAG7F,gBAAgB,CACzC3C,mBAAQsI,iBAAR,CAA0BE,kBADe,EAEzC,KAFyC,CAA3C;;AAKA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,SAAP,EAAqB;AAC1C,QAAMC,cAAc,GAAGF,IAAI,CAACG,UAAL,GACnBH,IAAI,CAACG,UAAL,CAAgBF,SAAhB,CADmB,GAEnBA,SAFJ;AAIA,WAAOD,IAAI,CAACI,KAAL,CAAWC,IAAX,CAAgB,UAAAC,KAAK,EAAI;AAC9B,UAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+BA,KAAK,GAAG,8BAAiBA,KAAjB,CAAR;AAC/B,aAAOA,KAAK,CAACC,IAAN,CAAWL,cAAX,CAAP;AACD,KAHM,CAAP;AAID,GATD;;AAWA,MAAMM,eAAe,GAAG,SAAlBA,eAAkB,CAAApE,KAAK,EAAI;AAC/B;AACA,QAAMqE,WAAW,GAAGxG,gBAAgB,CAClC3C,mBAAQsI,iBAAR,CAA0Ba,WADQ,EAElCnK,KAAK,CAACmK,WAF4B,CAApC;AAIA,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,WAAd,CAAL,EAAiC,OAAO,KAAP;;AANF,gDAOZA,WAPY;AAAA;;AAAA;AAO/B,6DAAgC;AAAA,YAArBT,IAAqB;;AAC9B,YAAID,cAAc,CAACC,IAAD,EAAO5D,KAAK,CAACS,IAAb,CAAlB,EAAsC;AACpC7E,UAAAA,mBAAmB,eACjB,gCAAC,gBAAD;AACE,YAAA,EAAE,EAAEoE,KAAK,CAACM,EADZ;AAEE,YAAA,IAAI,EAAEkE,mBAAQtE,IAFhB;AAGE,YAAA,IAAI,EAAE,KAHR;AAIE,YAAA,KAAK,EAAE;AACLuE,cAAAA,eAAe,EAAEpK,kBAAOqK,aADnB;AAELC,cAAAA,WAAW,EAAEtK,kBAAOqK,aAFf;AAGLE,cAAAA,OAAO,EAAE;AAHJ;AAJT,aAUGhB,IAAI,CAAClC,OAVR,CADiB,CAAnB;AAcA5F,UAAAA,aAAa,CAAC,KAAD,CAAb;AACA,iBAAO,IAAP;AACD;AACF;AA1B8B;AAAA;AAAA;AAAA;AAAA;;AA2B/B,WAAO,KAAP;AACD,GA5BD;;AA6BA,MAAM+I,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtBpI,IAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,GAFD;;AAIA,MAAMgH,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,wBACE,gCAAC,oCAAD;AACE,MAAA,OAAO,EAAEoB,SADX;AAEE,MAAA,OAAO,EAAEtB,qBAFX;AAGE,MAAA,YAAY,EAAE7H,YAAY,CAAC+B,KAAb,CAAmByD,KAAnB,CAAyB4D,YAAzB,IAAyC;AAHzD,MADF;AAOD,GARD;;AAUA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,WAAOlH,gBAAgB,CACrB3C,mBAAQsI,iBAAR,CAA0BwB,cADL,EAErB9K,KAAK,CAAC8K,cAAN,KACG9K,KAAK,CAAC8K,cAAN,CAAqBC,SAArB,IAAkC/K,KAAK,CAAC8K,cAD3C,CAFqB,CAAvB;AAKD,GAND;;AAOA,MAAME,cAAc,GAAGH,iBAAiB,EAAxC;;AAEA,MAAMI,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCzI,IAAAA,qBAAoB,CAAC,KAAD,CAApB;AACD,GAFD;;AAIA,wBAAU,YAAM;AACd,QAAI,CAACwI,cAAL,EAAqB;AACrB,QACE,CAAChH,YAAD,IACCA,YAAY,CAACQ,QAAb,IAAyBR,YAAY,CAACQ,QAAb,CAAsB/E,MAAtB,IAAgC,CAF5D,EAIE+C,qBAAoB,CAAC,IAAD,CAApB;AACH,GAPD,EAOG,EAPH;;AASA,MAAMsI,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,QAAMI,mBAAmB,GAAGvH,gBAAgB,CAC1C3C,mBAAQsI,iBAAR,CAA0B4B,mBADgB,EAE1ClL,KAAK,CAAC8K,cAAN,IAAwB9K,KAAK,CAAC8K,cAAN,CAAqB9K,KAFH,CAA5C;AAKA,QAAIgL,cAAc,IAAIxJ,YAAY,CAAC2J,oBAAnC,EACE,oBACE,gCAAC,cAAD;AACE,MAAA,cAAc,EAAEF;AADlB,OAEMC,mBAFN,EADF;AAMF,WAAO,IAAP;AACD,GAdD;;AAgBA,MAAME,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAtF,KAAK,EAAI;AACzC,QAAIuF,gBAAgB,GAAG,IAAvB;;AACA,QAAI,0BAAOvF,KAAP,CAAJ,EAAmB;AACjBuF,MAAAA,gBAAgB,gBACd,gCAAC,gBAAD;AAAM,QAAA,EAAE,EAAEvF,KAAK,CAACM,EAAhB;AAAoB,QAAA,OAAO,EAAEN,KAAK,CAACgD,OAAnC;AAA4C,QAAA,IAAI,EAAEwB,mBAAQtE;AAA1D,SACGF,KAAK,CAACS,IADT,CADF;AAKD,KAND,MAMO,IAAI,2BAAQT,KAAR,CAAJ,EAAoB;AACzB,UAAMwF,mBAAmB,GAAGC,GAAG,CAACC,eAAJ,CAAoB1F,KAAK,CAACS,IAA1B,CAA5B;AACA,UAAMkF,UAAU,GAAG;AACjBrF,QAAAA,EAAE,EAAEN,KAAK,CAACM,EADO;AAEjBsF,QAAAA,IAAI,EAAEpB,mBAAQtE,IAFG;AAGjB2F,QAAAA,GAAG,EAAEL;AAHY,OAAnB;AAKA,UAAI,2BAAQxF,KAAR,CAAJ,EAAoBuF,gBAAgB,gBAAG,gCAAC,iBAAD,EAAWI,UAAX,CAAnB,CAApB,KACK,IAAI,2BAAQ3F,KAAR,CAAJ,EAAoBuF,gBAAgB,gBAAG,gCAAC,iBAAD,EAAWI,UAAX,CAAnB,CAApB,KACA,IAAI,2BAAQ3F,KAAR,CAAJ,EAAoBuF,gBAAgB,gBAAG,gCAAC,iBAAD,EAAWI,UAAX,CAAnB,CAApB,KACA,IAAI,8BAAW3F,KAAX,CAAJ,EACHuF,gBAAgB,gBAAG,gCAAC,oBAAD,EAAcI,UAAd,CAAnB;AACH;;AACD,WAAOJ,gBAAP;AACD,GAtBD;;AAwBA,MAAMO,SAAS;AAAA,8FAAG,kBAAM9F,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACZ,CAACA,KAAD,IAAU+F,MAAM,CAACC,IAAP,CAAYhG,KAAZ,EAAmBrG,MAAnB,IAA6B,CAD3B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAEZ,0BAAOqG,KAAP,MAAkB,CAACA,KAAK,CAACS,IAAP,IAAe,CAACT,KAAK,CAACS,IAAN,CAAWwF,IAAX,EAAlC,CAFY;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,oBAGZ,0BAAOjG,KAAP,KAAiBoE,eAAe,CAACpE,KAAD,CAHpB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIhB,kBAAI,CAACA,KAAK,CAACM,EAAX,EAAeN,KAAK,CAACM,EAAN,GAAW,eAAX;AACTiF,cAAAA,gBALU,GAKSD,yBAAyB,CAACtF,KAAD,CALlC;AAMhB,kBAAIuF,gBAAJ,EAAsB3J,mBAAmB,CAAC2J,gBAAD,CAAnB;;AANN,mBAOZ,2BAAQvF,KAAR,CAPY;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAOuB,+BAAYA,KAAK,CAACS,IAAlB,CAPvB;;AAAA;AAOIT,cAAAA,KAAK,CAACS,IAPV;;AAAA;AAQhBV,cAAAA,aAAa,CAACC,KAAD,CAAb;AACAjE,cAAAA,iBAAiB,CAACiE,KAAD,CAAjB;AACA5C,cAAAA,QAAQ,MAAMH,qBAAqB,CAACK,iBAAiB,EAAlB,CAAnC;AACAxB,cAAAA,aAAa,CAAC,KAAD,CAAb;AACAW,cAAAA,oBAAoB,CAAC,KAAD,CAApB;AACAD,cAAAA,iBAAiB,CAAC,KAAD,CAAjB;;AAbgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAATsJ,SAAS;AAAA;AAAA;AAAA,KAAf;AAgBA;AACF;AACA;;;AAEE,MAAMI,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAAC,YAAY;AAAA,WACxCjK,aAAa,CAAC,wBAAMR,YAAY,CAACkD,OAAnB,EAA4B;AAAEsB,MAAAA,IAAI,EAAEiG;AAAR,KAA5B,CAAD,CAD2B;AAAA,GAA1C;;AAGA,kCAAoB3K,GAApB,EAAyB;AAAA,WAAO;AAC9B4K,MAAAA,cAAc,EAAE,+BAA0C;AAAA,YAAvCC,QAAuC,SAAvCA,QAAuC;AAAA,YAA7BzH,OAA6B,SAA7BA,OAA6B;AAAA,YAApBC,aAAoB,SAApBA,aAAoB;AACxD7C,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACA,YAAIsI,KAAK,CAACC,OAAN,CAAc8B,QAAd,CAAJ,EAA6BA,QAAQ,CAACC,GAAT,CAAa,UAAAC,CAAC;AAAA,iBAAI3K,mBAAmB,CAAC2K,CAAD,CAAvB;AAAA,SAAd,EAA7B,KACK,IAAIF,QAAJ,EAAczK,mBAAmB,CAACyK,QAAD,CAAnB;;AACnB,YAAIzH,OAAJ,EAAa;AACX1C,UAAAA,aAAa,CAAC,wBAAM0C,OAAN,EAAe;AAAEsB,YAAAA,IAAI,EAAExE,YAAY,CAACkD,OAAb,CAAqBsB;AAA7B,WAAf,CAAD,CAAb;AACA,cAAMsG,MAAM,GAAG5H,OAAO,CAAC6H,eAAR,IAA2B,EAA1C;AACA,cAAMC,OAAO,GAAGF,MAAM,CAACG,UAAP,CAAkB,aAAlB,CAAhB;AACA,cAAID,OAAO,IAAIE,kBAAf,EAAsBhL,mBAAmB,eAAC,gCAAC,gBAAD,OAAD,CAAnB;AACtBQ,UAAAA,aAAa,CAACsK,OAAD,CAAb;AACD;;AACD,YAAI7H,aAAJ,EAAmB1C,mBAAmB,CAAC0C,aAAD,CAAnB;AACnB5B,QAAAA,qBAAqB,CAACK,iBAAiB,EAAlB,CAArB;AACD,OAd6B;AAe9BuJ,MAAAA,SAAS,EAAE,mBAAApF,MAAM;AAAA,eAAIzF,YAAY,CAACyF,MAAD,CAAhB;AAAA,OAfa;AAgB9BqF,MAAAA,cAAc,EAAE,wBAAApF,OAAO;AAAA,eAAIoE,SAAS,CAACpE,OAAD,CAAb;AAAA,OAhBO;AAiB9BqF,MAAAA,UAAU,EAAEb,qBAjBkB;AAkB9Bc,MAAAA,WAAW,EAAE;AAAA,eAAMzK,cAAa,CAAC,IAAD,CAAnB;AAAA,OAlBiB;AAmB9B0K,MAAAA,YAAY,EAAE;AAAA,eAAM1K,cAAa,CAAC,KAAD,CAAnB;AAAA,OAnBgB;AAoB9BA,MAAAA,aAAa,EAAE;AAAA,eAAMA,cAAa,CAAC,CAACb,YAAY,CAACqG,aAAf,CAAnB;AAAA,OApBe;AAqB9BmF,MAAAA,kBAAkB,EAAE;AAAA,eAAMxK,qBAAoB,CAAC,IAAD,CAA1B;AAAA,OArBU;AAsB9ByI,MAAAA,mBAAmB,EAAE;AAAA,eAAMzI,qBAAoB,CAAC,KAAD,CAA1B;AAAA,OAtBS;AAuB9ByK,MAAAA,qBAAqB,EAAE,+BAAAC,gBAAgB,EAAI;AACzCrJ,QAAAA,kBAAkB,CAACqJ,gBAAD,CAAlB;AACAzK,QAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD,OA1B6B;AA2B9B0K,MAAAA,sBAAsB,EAAE;AAAA,eAAM1K,uBAAuB,CAAC,KAAD,CAA7B;AAAA,OA3BM;AA4B9BD,MAAAA,oBAAoB,EAAE;AAAA,eACpBA,qBAAoB,CAAC,CAAChB,YAAY,CAAC2J,oBAAf,CADA;AAAA,OA5BQ;AA8B9BiC,MAAAA,cAAc,EAAE,wBAAArC,SAAS;AAAA,eAAIlI,YAAY,CAACkI,SAAD,CAAhB;AAAA,OA9BK;AA+B9BrI,MAAAA,QAAQ,EAARA,QA/B8B;AAgC9BC,MAAAA,SAAS,EAATA,SAhC8B;AAiC9B0K,MAAAA,WAAW,EAAE;AAAA,eAAM7L,YAAY,CAACiD,YAAnB;AAAA,OAjCiB;AAkC9BvB,MAAAA,QAAQ,EAARA,QAlC8B;AAmC9BN,MAAAA,aAAa,EAAE,yBAAM;AACnBA,QAAAA,cAAa;;AACbhB,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAtC6B;AAuC9B0L,MAAAA,oBAAoB,EAAE;AAAA,eAAM9L,YAAY,CAACqD,iBAAnB;AAAA,OAvCQ;AAwC9B0I,MAAAA,iBAAiB,EAAE,2BAACC,KAAD,EAAQC,WAAR,EAAwB;AACzC,YAAMC,eAAe,GAAGlM,YAAY,CAACiD,YAAb,CAA0BkJ,MAA1B,CACtB,UAAAvG,CAAC;AAAA,iBAAIA,CAAC,CAAChB,EAAF,IAAQoH,KAAZ;AAAA,SADqB,EAEtB,CAFsB,CAAxB;AAGA,YAAMI,UAAU,GAAG,wBAAMF,eAAN,EAAuBD,WAAvB,CAAnB;AACA,YAAIG,UAAU,CAACC,GAAX,KAAmB,CAAvB,EAA0B,OAAOD,UAAU,CAACE,WAAlB;AAC1BnM,QAAAA,aAAa,CAACiM,UAAD,CAAb;AACD,OA/C6B;AAgD9BG,MAAAA,qBAAqB,EAAE,+BAAAC,QAAQ,EAAI;AACjC,YAAMlJ,YAAY,GAAG,+CAAyBkJ,QAAzB,CAArB;AACA7L,QAAAA,WAAW,CAAC,wBAAMX,YAAY,CAAC+B,KAAnB,EAA0BuB,YAA1B,CAAD,EAA0CA,YAA1C,CAAX;AACD;AAnD6B,KAAP;AAAA,GAAzB;;AAsDA,MAAMmJ,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB/L,IAAAA,aAAa,CAAC,KAAD,CAAb;AACAF,IAAAA,aAAa,iCAAMR,YAAY,CAACkD,OAAnB;AAA4B6H,MAAAA,eAAe,EAAE;AAA7C,OAAb;AACD,GAHD;;AAKA,MAAM2B,WAAW,GAAG,wBAAY1M,YAAY,CAACkD,OAAzB,CAApB;AACA,wBAAU,YAAM;AACd;AACA,QACEwJ,WAAW,IACXA,WAAW,CAAC3B,eADZ,IAEA,CAAC/K,YAAY,CAACkD,OAAb,CAAqB6H,eAHxB,EAIE;AACA,UAAMD,MAAM,GAAGjN,eAAe,CAAC6O,WAAW,CAAC3B,eAAb,CAA9B;AACA,UAAID,MAAM,IAAIA,MAAM,CAAC6B,SAArB,EAAgCpF,WAAW,CAACuD,MAAM,CAAC6B,SAAR,CAAX;AACjC;AACF,GAVD,EAUG,CAAC3M,YAAY,CAACkD,OAAb,CAAqB6H,eAAtB,CAVH;;AAYA,MAAM6B,QAAQ;AAAA,8FAAG,kBAAOC,IAAP,EAAavF,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACVuF,IADU;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAETvI,cAAAA,KAFS,GAED;AAAEJ,gBAAAA,IAAI,EAAEW,YAAMiI,IAAd;AAAoB/H,gBAAAA,IAAI,EAAE8H,IAA1B;AAAgCvF,gBAAAA,OAAO,EAAPA;AAAhC,eAFC;AAAA;AAAA,qBAGT8C,SAAS,CAAC9F,KAAD,CAHA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARsI,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAMA,MAAMrF,WAAW;AAAA,8FAAG,kBAAMD,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACbA,OADa;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAEZhD,cAAAA,KAFY,GAEJ;AAAEJ,gBAAAA,IAAI,EAAEW,YAAMkI,QAAd;AAAwBzF,gBAAAA,OAAO,EAAPA;AAAxB,eAFI;AAAA;AAAA,qBAGZ8C,SAAS,CAAC9F,KAAD,CAHG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAXiD,WAAW;AAAA;AAAA;AAAA,KAAjB;;AAMA,MAAMnD,cAAc;AAAA,+FAAG,kBAAM4I,UAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACjBA,UAAU,CAAChJ,IADM;AAAA;AAAA;AAAA;;AAEbC,cAAAA,cAFa,GAEI,gCAAa+I,UAAU,CAAChJ,IAAX,CAAgBE,IAA7B,CAFJ;;AAAA,kBAGdD,cAHc;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIbK,cAAAA,KAJa,GAIL;AACZJ,gBAAAA,IAAI,EAAED,cADM;AAEZc,gBAAAA,IAAI,EAAEiI,UAAU,CAAChJ;AAFL,eAJK;AAAA;AAAA,qBAQboG,SAAS,CAAC9F,KAAD,CARI;;AAAA;AASnB9C,cAAAA,oBAAoB,CAACtD,SAAD,CAApB;;AATmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAdkG,cAAc;AAAA;AAAA;AAAA,KAApB;;AAaA,MAAM6I,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BL,IAAAA,QAAQ,CAAC7F,QAAQ,CAACN,OAAT,CAAiBO,KAAlB,CAAR;AACAD,IAAAA,QAAQ,CAACN,OAAT,CAAiBO,KAAjB,GAAyB,EAAzB;AACD,GAHD;;AAKA,MAAIkG,QAAQ,GAAG,KAAf;AACA,MAAIC,aAAa,GAAG,IAApB;;AAEA,WAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AACpC,QAAMC,QAAQ,GAAG,KAAK,IAAtB;AACA,QAAIH,aAAJ,EAAmBI,YAAY,CAACJ,aAAD,CAAZ;AACnB,QAAIE,KAAJ,EAAWF,aAAa,GAAG/G,UAAU,CAACoH,UAAD,EAAaF,QAAb,CAA1B;AACZ;;AAED,WAASG,WAAT,GAAuB;AACrBP,IAAAA,QAAQ,GAAG,IAAX;AACAzI,IAAAA,aAAa,CAAC,WAAD,CAAb;AACD;;AAED,WAAS+I,UAAT,GAAsB;AACpBJ,IAAAA,qBAAqB,CAAC,KAAD,CAArB;AACAF,IAAAA,QAAQ,GAAG,KAAX;AACAzI,IAAAA,aAAa,CAAC,YAAD,CAAb;AACD;;AAED,MAAMiJ,UAAS,GAAG,SAAZA,SAAY,CAAAlK,KAAK,EAAI;AACzB,QAAIA,KAAK,CAACmK,OAAN,KAAkB,EAAlB,IAAwBnK,KAAK,CAACoK,QAAN,KAAmB,KAA/C,EAAsD;AACpDpK,MAAAA,KAAK,CAACqK,cAAN;AACAZ,MAAAA,gBAAgB;AAChBO,MAAAA,UAAU;AACX;AACF,GAND;;AAQA,MAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB,QAAI/G,QAAQ,CAACN,OAAT,CAAiBO,KAAjB,KAA2B,EAA/B,EAAmC;AACjCwG,MAAAA,UAAU;AACV;AACD;;AACD,QAAI,CAACN,QAAL,EAAe;AACbO,MAAAA,WAAW;AACZ;;AACDL,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD,GATD;;AAWA,MAAMW,qBAAqB,GAAG;AAC5BC,IAAAA,SAAS,EAAE,mBAAAC,QAAQ;AAAA,aAAIzP,KAAK,CAACwP,SAAN,CAAgBC,QAAhB,EAA0BjO,YAAY,CAACkD,OAAvC,CAAJ;AAAA,KADS;AAE5BgL,IAAAA,SAAS,EAAE,mBAAAC,MAAM;AAAA,aAAI3P,KAAK,CAACwP,SAAN,CAAgBG,MAAhB,EAAwBnO,YAAY,CAACkD,OAArC,CAAJ;AAAA,KAFW;AAG5BA,IAAAA,OAAO,EAAElD,YAAY,CAACkD,OAAb,IAAwB,EAHL;AAI5B0D,IAAAA,MAAM,EAAE5G,YAAY,CAACoO,aAAb,IAA8B,EAJV;AAK5BjH,IAAAA,YAAY,EAAEA,YALc;AAM5BkH,IAAAA,YAAY,EAAE7P,KAAK,CAAC6P,YAAN,IAAsB,CANR;AAO5BC,IAAAA,aAAa,EAAE9P,KAAK,CAAC8P,aAAN,IAAuB;AAPV,GAA9B;AAUA,wBAAU,YAAM;AACd,QAAI7M,WAAW,CAACgF,OAAhB,EAAyB;AACvBhF,MAAAA,WAAW,CAACgF,OAAZ,GAAsB,KAAtB;AACA;AACD;;AACD,QAAIzG,YAAY,CAACqG,aAAb,IAA8B7H,KAAK,CAAC+P,MAAxC,EAAgD/P,KAAK,CAAC+P,MAAN;;AAChD,QAAI,CAACvO,YAAY,CAACqG,aAAd,IAA+B7H,KAAK,CAACgQ,OAArC,IAAgD,CAAC/M,WAAW,CAACgF,OAAjE,EAA0E;AACxEjI,MAAAA,KAAK,CAACgQ,OAAN;AACA1N,MAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACAC,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AACF,GAXD,EAWG,CAACf,YAAY,CAACqG,aAAd,CAXH;AAaA,MAAMU,QAAQ,GAAG,oBAAjB;;AAEA,MAAM0H,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAMC,YAAY,GAAGvM,gBAAgB,CACnC3C,mBAAQsI,iBAAR,CAA0B6G,kBADS,EAEnC,IAFmC,CAArC;;AAIA,QAAID,YAAY,KAAK,IAArB,EAA2B;AACzB1O,MAAAA,YAAY,CAAC+B,KAAb,CAAmB4M,kBAAnB,GAAwCnP,mBAAQC,QAAR,CAAiBmP,IAAzD;AACA,aAAO,IAAP;AACD;;AACD,WAAOF,YAAP;AACD,GAVD;;AAYA,MAAMG,kBAAkB,GAAG1M,gBAAgB,CACzC3C,mBAAQsI,iBAAR,CAA0B+G,kBADe,CAA3C;AAIA,MAAMC,mBAAmB,GAAG3M,gBAAgB,CAC1C3C,mBAAQsI,iBAAR,CAA0BiH,aADgB,EAE1C7Q,SAF0C,CAA5C;;AAKA,MAAM8Q,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAIF,mBAAJ,EAAyB;AACvB,0BAAO,gCAAC,mBAAD,OAAP;AACD;;AACD,wBACE,gCAAC,mBAAD;AACE,MAAA,IAAI,EAAEG,iBAAMC,cADd;AAEE,MAAA,KAAK,oBAAOL,kBAAP;AAFP,OAIGJ,eAAe,mBACd,gCAAC,YAAD;AAAc,MAAA,GAAG,EAAE,+BAAaA,eAAe,EAA5B;AAAnB,MALJ,CADF;AAUD,GAdD;;AAgBA,MAAMU,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,wBACzB,gCAAC,+BAAD;AAAoB,MAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR;AAA3B,OACGpP,YAAY,CAAC+F,MAAb,iBAAuB,gCAAC,gCAAD,OAD1B,CADyB;AAAA,GAA3B;;AAKA,MAAMsJ,cAAc,GAAG,SAAjBA,cAAiB;AAAA,wBAAM,gCAAC,uBAAD;AAAgB,MAAA,OAAO,EAAErP,YAAY,CAACsP;AAAtC,MAAN;AAAA,GAAvB;;AAEA,MAAMC,kBAAkB,GAAG,8BAAM;AAC/B,QAAMA,kBAAkB,GAAGpN,gBAAgB,CACzC3C,mBAAQsI,iBAAR,CAA0B0H,eADe,EAEzChR,KAAK,CAACgR,eAAN,KAA0BtR,SAA1B,GAAsCM,KAAK,CAACgR,eAA5C,GAA8D,IAFrB,CAA3C;AAIA,WAAOD,kBAAkB,IAAI,CAACvP,YAAY,CAAC2J,oBAA3C;AACD,GAND;;AAQA,MAAMtC,gBAAgB,GAAGkI,kBAAkB,EAA3C;;AAEA,MAAME,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,WACEpI,gBAAgB,iBACd,gCAAC,kBAAD;AACE,MAAA,KAAK,oBACAlF,gBAAgB,CAAC3C,mBAAQsI,iBAAR,CAA0B4H,cAA3B,CADhB,CADP;AAIE,MAAA,SAAS,EAAC;AAJZ,OAMG1P,YAAY,CAAC4H,iBAAb,iBACC,gCAAC,8BAAD;AACE,MAAA,MAAM,EAAE5H,YAAY,CAAC+B,KAAb,CAAmByD,KAAnB,CAAyB9G,MADnC;AAEE,MAAA,YAAY,EAAEmI,mBAFhB;AAGE,MAAA,OAAO,EAAEc;AAHX,MAPJ,eAcE,gCAAC,8BAAD;AACE,MAAA,OAAO,EAAEF,UADX;AAEE,MAAA,cAAc,EAAEjJ,KAAK,CAACuJ;AAFxB,MAdF,eAmBE,gCAAC,iBAAD,qBACE,gCAAC,iCAAD;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,OAAO,EAAE;AAAA,eAAMlF,aAAa,CAAC8M,OAAd,CAAsBjN,IAAtB,CAAN;AAAA,OAFX;AAGE,MAAA,MAAM,EAAE;AAAA,eAAMG,aAAa,CAAC+M,MAAd,EAAN;AAAA,OAHV;AAIE,MAAA,OAAO,EAAE,CAJX;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,SAAS,EAAC,MANZ;AAOE,MAAA,WAAW,EAAEzN,gBAAgB,CAC3B3C,mBAAQsI,iBAAR,CAA0B+H,eADC,EAE3BrQ,mBAAQC,QAAR,CAAiBqQ,WAFU,CAP/B;AAWE,MAAA,SAAS,EAAE,IAXb;AAYE,MAAA,QAAQ,EAAE/I,QAZZ;AAaE,MAAA,SAAS,EAAE,mBAAAgJ,CAAC;AAAA,eAAIrC,UAAS,CAACqC,CAAD,CAAb;AAAA,OAbd;AAcE,MAAA,OAAO,EAAEjC,OAdX;AAeE,MAAA,KAAK;AACHkC,QAAAA,OAAO,EAAE,MADN;AAEHC,QAAAA,QAAQ,EAAEpN,aAAa,CAACoN,QAAd,CAAuB,EAAvB,CAFP;AAGHxR,QAAAA,KAAK,EAAE,MAHJ;AAIHyR,QAAAA,MAAM,EAAE,MAJL;AAKHC,QAAAA,MAAM,EAAE,MALL;AAMHC,QAAAA,QAAQ,EAAE,MANP;AAOHC,QAAAA,OAAO,EAAE,MAPN;AAQHjB,QAAAA,IAAI,EAAE,UARH;AASHlG,QAAAA,OAAO,EAAE,EATN;AAUHoH,QAAAA,WAAW,EAAEzI,qBAAqB,GAAG,CAAH,GAAO,EAVtC;AAWH0I,QAAAA,UAAU,EAAE;AAXT,SAYApO,gBAAgB,CACjB3C,mBAAQsI,iBAAR,CAA0B0I,iBADT,CAZhB;AAfP,MADF,CAnBF,eAsDE,gCAAC,wBAAD;AACE,MAAA,iBAAiB,EAAEhS,KAAK,CAACiS,iBAD3B;AAEE,MAAA,OAAO,EAAE9I;AAFX,MAtDF,eA2DE,gCAAC,sBAAD;AACE,MAAA,iBAAiB,EAAEnJ,KAAK,CAACkS,iBAD3B;AAEE,MAAA,QAAQ,EAAEnN,gBAFZ;AAGE,MAAA,MAAM,EAAE,0CAAuBoN,IAAvB,CAA4B,GAA5B;AAHV,MA3DF,eAiEE,gCAAC,sBAAD;AAAY,MAAA,OAAO,EAAE1D;AAArB,MAjEF,CAFJ;AAuED,GAxED;;AA0EA,MAAM2D,cAAc,GAAG,SAAjBA,cAAiB;AAAA,wBACrB,gCAAC,wBAAD,CAAgB,QAAhB;AAAyB,MAAA,KAAK,EAAE7C;AAAhC,oBACE,gCAAC,yBAAD;AACE,MAAA,KAAK,kCACA5L,gBAAgB,CAAC3C,mBAAQsI,iBAAR,CAA0B+I,YAA3B,CADhB,GAEAC,WAFA,CADP;AAKE,MAAA,OAAO,EAAE9Q,YAAY,CAAC+Q;AALxB,MADF,CADqB;AAAA,GAAvB;;AAWA,MAAID,WAAW,GAAG,EAAlB;;AACA,MAAI,oBAAS3O,gBAAgB,CAAC3C,mBAAQsI,iBAAR,CAA0BkJ,gBAA3B,CAAzB,CAAJ,EAA4E;AAC1EF,IAAAA,WAAW,GAAG3O,gBAAgB,CAAC3C,mBAAQsI,iBAAR,CAA0BgJ,WAA3B,CAAhB,IAA2D;AACvErS,MAAAA,KAAK,EAAE,MADgE;AAEvEC,MAAAA,MAAM,EAAE,MAF+D;AAGvEuS,MAAAA,KAAK,EAAE,CAHgE;AAIvEC,MAAAA,MAAM,EAAE,CAJ+D;AAKvE9H,MAAAA,YAAY,EAAE;AALyD,KAAzE;AAOD;;AAED,wBAAU,YAAM;AACd;AACArG,IAAAA,gBAAgB,CAAC/C,YAAD,CAAhB;AACA,6BAAe;AAAE0C,MAAAA,IAAI,EAAJA;AAAF,KAAf;AACD,GAJD,EAIG,CAAC1C,YAAY,CAACsD,YAAd,CAJH,EA9rBgD,CAosBhD;;AACA,MAAM6N,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAA3E,QAAQ,EAAI;AAC3C;AACA,0BAAU,YAAM;AACd,UAAMlJ,YAAY,GAAG,+CAAyBkJ,QAAzB,CAArB;AACA7L,MAAAA,WAAW,CAAC,wBAAMX,YAAY,CAAC+B,KAAnB,EAA0BuB,YAA1B,CAAD,EAA0CA,YAA1C,CAAX;AACD,KAHD,EAGG,CAACtD,YAAY,CAACiD,YAAd,CAHH;AAID,GAND;;AAQA,MAAMmO,gBAAgB,GAAG,SAAnBA,gBAAmB,SAAmB;AAAA,QAAhB7H,SAAgB,UAAhBA,SAAgB;AAC1C,wBACE,6CACGvB,kBAAkB,iBACjB,gCAAC,kBAAD;AACE,MAAA,KAAK,EAAE;AACLoB,QAAAA,YAAY,EAAEpJ,YAAY,CAAC+B,KAAb,CAAmByD,KAAnB,CAAyB4D;AADlC;AADT,MAFJ,EAQGG,SARH,CADF;AAYD,GAbD;;AAeA,MAAM8H,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,QAAI,CAACjP,eAAL,EAAsB,oBAAO,iEAAP,CAAtB,KACK,OAAOA,eAAP;AACN,GAHD;;AAKA,MAAMkP,gBAAgB,gBACpB,gCAAC,wBAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACL1E,MAAAA,QAAQ,EAARA,QADK;AAELxI,MAAAA,cAAc,EAAdA,cAFK;AAGLmD,MAAAA,WAAW,EAAXA,WAHK;AAIL6C,MAAAA,SAAS,EAATA,SAJK;AAKL1D,MAAAA,WAAW,EAAXA,WALK;AAML+F,MAAAA,WAAW,EAAXA,WANK;AAOLzM,MAAAA,YAAY,EAAZA,YAPK;AAQLmC,MAAAA,gBAAgB,EAAhBA,gBARK;AASLlC,MAAAA,UAAU,EAAVA,UATK;AAULY,MAAAA,aAAa,EAAbA,cAVK;AAWLV,MAAAA,aAAa,EAAbA,aAXK;AAYLC,MAAAA,aAAa,EAAbA,aAZK;AAaLC,MAAAA,iBAAiB,EAAjBA,iBAbK;AAcLgL,MAAAA,UAAU,EAAEb,qBAdP;AAeL2G,MAAAA,wBAAwB,EAAEA;AAfrB;AADT,KAmBG,CAACnR,YAAY,CAACqG,aAAd,iBACC;AACE,IAAA,OAAO,EAAE,iBAAA7C,KAAK,EAAI;AAChB3C,MAAAA,cAAa,CAAC,IAAD,CAAb;;AACA2C,MAAAA,KAAK,CAACqK,cAAN;AACD;AAJH,KAMGmB,aAAa,EANhB,CApBJ,EA8BGhP,YAAY,CAACqG,aAAb,iBACC,gCAAC,aAAD,CACE;AADF;AAEE,IAAA,IAAI,EAAE4I,iBAAMzP,OAFd;AAGE,IAAA,EAAE,EAAEA,mBAAQC,QAAR,CAAiB8R,EAHvB;AAIE,IAAA,KAAK,EAAEvR,YAAY,CAACvB,KAJtB;AAKE,IAAA,MAAM,EAAEuB,YAAY,CAACtB,MALvB;AAME,IAAA,KAAK,kCACAsB,YAAY,CAAC+B,KAAb,CAAmByD,KADnB,GAEAsL,WAFA;AANP,kBAWE,gCAAC,2BAAD;AACE,IAAA,YAAY,EAAE,wBAAM;AAClBjQ,MAAAA,cAAa,CAAC,KAAD,CAAb;AACD;AAHH,IAXF,EAgBGb,YAAY,CAACwR,KAAb,CAAmBxL,OAAnB,iBACC,gCAAC,qBAAD,qBACE,gCAAC,YAAD,QAAehG,YAAY,CAACwR,KAAb,CAAmBxL,OAAlC,CADF,CAjBJ,EAqBGmJ,kBAAkB,EArBrB,EAsBGnP,YAAY,CAACsP,OAAb,IACCjF,MAAM,CAACC,IAAP,CAAYtK,YAAY,CAACsP,OAAzB,EAAkCrR,MAAlC,GAA2C,CAD5C,IAECoR,cAAc,EAxBlB,EAyBGrP,YAAY,CAAC0H,oBAAb,iBACC,gCAAC,gBAAD;AAAkB,IAAA,SAAS,EAAEK,cAAc;AAA3C,IA1BJ,EA4BG,CAAC/H,YAAY,CAACgL,OAAd,IAAyByE,aAAa,EA5BzC,EA6BGzP,YAAY,CAAC+Q,OAAb,IAAwBH,cAAc,EA7BzC,EA8BG5Q,YAAY,CAAC2J,oBAAb,IAAqCL,cAAc,EA9BtD,EA+BGtJ,YAAY,CAACyR,yBAAb,IACCrP,eADD,IAECiP,sBAAsB,EAjC1B,CA/BJ,CADF;;AAsEA,SAAO7S,KAAK,CAAC6G,SAAN,gBACL,gCAAC,mCAAD;AAAmB,IAAA,MAAM,EAAE3C;AAA3B,KAAkC4O,gBAAlC,CADK,GAGLA,gBAHF;AAKD,CA5yBsB,CAAhB","sourcesContent":["import { INPUT, isMobile, params2queryString } from '@botonic/core'\nimport { motion } from 'framer-motion'\nimport merge from 'lodash.merge'\nimport React, {\n  forwardRef,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react'\nimport Textarea from 'react-textarea-autosize'\nimport styled, { StyleSheetManager } from 'styled-components'\nimport { useAsyncEffect } from 'use-async-effect'\nimport { v4 as uuidv4 } from 'uuid'\n\nimport { Audio, Document, Image, Text, Video } from '../components'\nimport { Handoff } from '../components/handoff'\nimport { normalizeWebchatSettings } from '../components/webchat-settings'\nimport {\n  COLORS,\n  MAX_ALLOWED_SIZE_MB,\n  ROLES,\n  SENDERS,\n  WEBCHAT,\n} from '../constants'\nimport { RequestContext, WebchatContext } from '../contexts'\nimport {\n  getFullMimeWhitelist,\n  getMediaType,\n  isAllowedSize,\n  isAudio,\n  isDocument,\n  isImage,\n  isMedia,\n  isText,\n  isVideo,\n  readDataURL,\n} from '../message-utils'\nimport { msgToBotonic } from '../msg-to-botonic'\nimport { scrollToBottom } from '../util/dom'\nimport { isDev, resolveImage } from '../util/environment'\nimport { deserializeRegex, stringifyWithRegexs } from '../util/regexs'\nimport {\n  _getThemeProperty,\n  getServerErrorMessage,\n  initSession,\n  shouldKeepSessionOnReload,\n} from '../util/webchat'\nimport { Attachment } from './components/attachment'\nimport { EmojiPicker, OpenedEmojiPicker } from './components/emoji-picker'\nimport {\n  OpenedPersistentMenu,\n  PersistentMenu,\n} from './components/persistent-menu'\nimport { SendButton } from './components/send-button'\nimport { TypingIndicator } from './components/typing-indicator'\nimport { DeviceAdapter } from './devices/device-adapter'\nimport { StyledWebchatHeader } from './header'\nimport {\n  useComponentWillMount,\n  usePrevious,\n  useTyping,\n  useWebchat,\n} from './hooks'\nimport { WebchatMessageList } from './message-list'\nimport { WebchatReplies } from './replies'\nimport { useStorageState } from './use-storage-state-hook'\nimport { WebviewContainer } from './webview'\n\nexport const getParsedAction = botonicAction => {\n  const splittedAction = botonicAction.split('create_case:')\n  if (splittedAction.length <= 1) return undefined\n  return JSON.parse(splittedAction[1])\n}\n\nconst StyledWebchat = styled.div`\n  position: fixed;\n  right: 20px;\n  bottom: 20px;\n  width: ${props => props.width}px;\n  height: ${props => props.height}px;\n  margin: auto;\n  background-color: ${COLORS.SOLID_WHITE};\n  border-radius: 10px;\n  box-shadow: ${COLORS.SOLID_BLACK_ALPHA_0_2} 0px 0px 12px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledTriggerButton = styled.div`\n  cursor: pointer;\n  position: fixed;\n  background: ${COLORS.SOLID_WHITE};\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  overflow: hidden;\n  width: 65px;\n  height: 65px;\n  bottom: 20px;\n  right: 10px;\n  padding: 8px;\n`\n\nconst UserInputContainer = styled.div`\n  min-height: 52px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  gap: 16px;\n  padding: 0px 16px;\n  z-index: 1;\n  border-top: 1px solid ${COLORS.SOLID_BLACK_ALPHA_0_5};\n`\n\nconst TextAreaContainer = styled.div`\n  display: flex;\n  flex: 1 1 auto;\n  align-items: center;\n`\n\nconst TriggerImage = styled.img`\n  max-width: 100%;\n  max-height: 100%;\n`\n\nconst ErrorMessageContainer = styled.div`\n  position: relative;\n  display: flex;\n  z-index: 1;\n  justify-content: center;\n  width: 100%;\n`\n\nconst ErrorMessage = styled.div`\n  position: absolute;\n  top: 10px;\n  font-size: 14px;\n  line-height: 20px;\n  padding: 4px 11px;\n  display: flex;\n  background-color: ${COLORS.ERROR_RED};\n  color: ${COLORS.CONCRETE_WHITE};\n  border-radius: 5px;\n  align-items: center;\n  justify-content: center;\n  font-family: ${WEBCHAT.DEFAULTS.FONT_FAMILY};\n`\n\nconst DarkBackgroundMenu = styled.div`\n  background: ${COLORS.SOLID_BLACK};\n  opacity: 0.3;\n  z-index: 1;\n  right: 0;\n  bottom: 0;\n  border-radius: 10px;\n  position: absolute;\n  width: 100%;\n  height: 100%;\n`\n\n// eslint-disable-next-line complexity\nexport const Webchat = forwardRef((props, ref) => {\n  const {\n    webchatState,\n    addMessage,\n    addMessageComponent,\n    updateMessage,\n    updateReplies,\n    updateLatestInput,\n    updateTyping,\n    updateWebview,\n    updateSession,\n    updateLastRoutePath,\n    updateHandoff,\n    updateTheme,\n    updateDevSettings,\n    toggleWebchat,\n    toggleEmojiPicker,\n    togglePersistentMenu,\n    toggleCoverComponent,\n    doRenderCustomComponent,\n    setError,\n    setOnline,\n    clearMessages,\n    openWebviewT,\n    closeWebviewT,\n    updateLastMessageDate,\n    setCurrentAttachment,\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n  } = props.webchatHooks || useWebchat()\n  const firstUpdate = useRef(true)\n  const isOnline = () => webchatState.online\n  const currentDateString = () => new Date().toISOString()\n  const theme = merge(webchatState.theme, props.theme)\n  const { initialSession, initialDevSettings, onStateChange } = props\n  const getThemeProperty = _getThemeProperty(theme)\n\n  const [customComponent, setCustomComponent] = useState(null)\n  const storage = props.storage\n  const storageKey =\n    typeof props.storageKey === 'function'\n      ? props.storageKey()\n      : props.storageKey\n\n  const [botonicState, saveState] = useStorageState(storage, storageKey)\n\n  const host = props.host || document.body\n\n  const deviceAdapter = new DeviceAdapter()\n\n  const saveWebchatState = webchatState => {\n    storage &&\n      saveState(\n        JSON.parse(\n          stringifyWithRegexs({\n            messages: webchatState.messagesJSON,\n            session: webchatState.session,\n            lastRoutePath: webchatState.lastRoutePath,\n            devSettings: webchatState.devSettings,\n            lastMessageUpdate: webchatState.lastMessageUpdate,\n            themeUpdates: webchatState.themeUpdates,\n          })\n        )\n      )\n  }\n\n  const handleAttachment = event => {\n    if (!isAllowedSize(event.target.files[0].size)) {\n      throw new Error(\n        `The file is too large. A maximum of ${MAX_ALLOWED_SIZE_MB}MB is allowed.`\n      )\n    }\n    setCurrentAttachment({\n      fileName: event.target.files[0].name,\n      file: event.target.files[0], // TODO: Attach more files?\n      attachmentType: getMediaType(event.target.files[0].type),\n    })\n  }\n\n  useEffect(() => {\n    if (webchatState.currentAttachment)\n      sendAttachment(webchatState.currentAttachment)\n  }, [webchatState.currentAttachment])\n\n  const sendUserInput = async input => {\n    props.onUserInput &&\n      props.onUserInput({\n        user: webchatState.session.user,\n        input: input,\n        session: webchatState.session,\n        lastRoutePath: webchatState.lastRoutePath,\n      })\n  }\n\n  const sendChatEvent = async chatEvent => {\n    const chatEventInput = {\n      id: uuidv4(),\n      type: INPUT.CHAT_EVENT,\n      data: chatEvent,\n    }\n    props.onUserInput &&\n      props.onUserInput({\n        user: webchatState.session.user,\n        input: chatEventInput,\n        session: webchatState.session,\n        lastRoutePath: webchatState.lastRoutePath,\n      })\n  }\n\n  // Load styles stored in window._botonicInsertStyles by Webpack\n  useComponentWillMount(() => {\n    if (window._botonicInsertStyles && window._botonicInsertStyles.length) {\n      for (const botonicStyle of window._botonicInsertStyles) {\n        // Injecting styles at head is needed even if we use shadowDOM\n        // as some dependencies like simplebar rely on creating ephemeral elements\n        // on document.body and assume styles will be available globally\n        document.head.appendChild(botonicStyle)\n\n        // injecting styles in host node too so that shadowDOM works\n        if (props.shadowDOM) host.appendChild(botonicStyle.cloneNode(true))\n      }\n      delete window._botonicInsertStyles\n    }\n\n    if (props.shadowDOM) {\n      // emoji-picker-react injects styles in head, so we need to\n      // re-inject them in our host node to make it work with shadowDOM\n      for (const style of document.querySelectorAll('style')) {\n        if (\n          style.textContent &&\n          style.textContent.includes('emoji-picker-react')\n        )\n          host.appendChild(style.cloneNode(true))\n      }\n    }\n  })\n\n  // Load initial state from storage\n  useEffect(() => {\n    let {\n      messages,\n      session,\n      lastRoutePath,\n      devSettings,\n      lastMessageUpdate,\n      themeUpdates,\n    } = botonicState || {}\n    session = initSession(session)\n    updateSession(session)\n    if (shouldKeepSessionOnReload({ initialDevSettings, devSettings })) {\n      if (messages) {\n        messages.forEach(m => {\n          addMessage(m)\n          const newComponent = msgToBotonic(\n            { ...m, delay: 0, typing: 0 },\n            (props.theme.message && props.theme.message.customTypes) ||\n              props.theme.customMessageTypes\n          )\n          if (newComponent) addMessageComponent(newComponent)\n        })\n      }\n      if (initialSession) updateSession(merge(initialSession, session))\n      if (lastRoutePath) updateLastRoutePath(lastRoutePath)\n    } else updateSession(merge(initialSession, session))\n    if (devSettings) updateDevSettings(devSettings)\n    else if (initialDevSettings) updateDevSettings(initialDevSettings)\n    if (lastMessageUpdate) updateLastMessageDate(lastMessageUpdate)\n    if (themeUpdates !== undefined)\n      updateTheme(merge(props.theme, themeUpdates), themeUpdates)\n    if (props.onInit) setTimeout(() => props.onInit(), 100)\n  }, [])\n\n  useEffect(() => {\n    if (!webchatState.isWebchatOpen) return\n    deviceAdapter.init(host)\n    scrollToBottom({ behavior: 'auto', host })\n  }, [webchatState.isWebchatOpen])\n\n  useEffect(() => {\n    if (onStateChange && typeof onStateChange === 'function')\n      onStateChange(webchatState)\n    saveWebchatState(webchatState)\n  }, [\n    webchatState.messagesJSON,\n    webchatState.session,\n    webchatState.lastRoutePath,\n    webchatState.devSettings,\n    webchatState.lastMessageUpdate,\n  ])\n\n  useAsyncEffect(async () => {\n    if (!webchatState.online) {\n      setError({\n        message: getServerErrorMessage(props.server),\n      })\n    } else {\n      if (!firstUpdate.current) {\n        setError(undefined)\n      }\n    }\n  }, [webchatState.online])\n\n  useTyping({ webchatState, updateTyping, updateMessage, host })\n\n  useEffect(() => {\n    updateTheme(merge(props.theme, theme, webchatState.themeUpdates))\n  }, [props.theme, webchatState.themeUpdates])\n\n  const openWebview = (webviewComponent, params) =>\n    updateWebview(webviewComponent, params)\n\n  const handleSelectedEmoji = (event, emojiObject) => {\n    textArea.current.value += emojiObject.emoji\n    textArea.current.focus()\n  }\n\n  const closeWebview = options => {\n    updateWebview()\n    if (userInputEnabled) {\n      textArea.current.focus()\n    }\n    if (options && options.payload) {\n      sendPayload(options.payload)\n    } else if (options && options.path) {\n      let params = ''\n      if (options.params) params = params2queryString(options.params)\n      sendPayload(`__PATH_PAYLOAD__${options.path}?${params}`)\n    }\n  }\n\n  const handleMenu = () => {\n    togglePersistentMenu(!webchatState.isPersistentMenuOpen)\n  }\n\n  const handleEmojiClick = () => {\n    toggleEmojiPicker(!webchatState.isEmojiPickerOpen)\n  }\n\n  const persistentMenuOptions = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.persistentMenu,\n    props.persistentMenu\n  )\n\n  const darkBackgroundMenu = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.darkBackgroundMenu,\n    false\n  )\n\n  const getBlockInputs = (rule, inputData) => {\n    const processedInput = rule.preprocess\n      ? rule.preprocess(inputData)\n      : inputData\n\n    return rule.match.some(regex => {\n      if (typeof regex === 'string') regex = deserializeRegex(regex)\n      return regex.test(processedInput)\n    })\n  }\n\n  const checkBlockInput = input => {\n    // if is a text we check if it is a serialized RE\n    const blockInputs = getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.blockInputs,\n      props.blockInputs\n    )\n    if (!Array.isArray(blockInputs)) return false\n    for (const rule of blockInputs) {\n      if (getBlockInputs(rule, input.data)) {\n        addMessageComponent(\n          <Text\n            id={input.id}\n            from={SENDERS.user}\n            blob={false}\n            style={{\n              backgroundColor: COLORS.SCORPION_GRAY,\n              borderColor: COLORS.SCORPION_GRAY,\n              padding: '8px 12px',\n            }}\n          >\n            {rule.message}\n          </Text>\n        )\n        updateReplies(false)\n        return true\n      }\n    }\n    return false\n  }\n  const closeMenu = () => {\n    togglePersistentMenu(false)\n  }\n\n  const persistentMenu = () => {\n    return (\n      <OpenedPersistentMenu\n        onClick={closeMenu}\n        options={persistentMenuOptions}\n        borderRadius={webchatState.theme.style.borderRadius || '10px'}\n      />\n    )\n  }\n\n  const getCoverComponent = () => {\n    return getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.coverComponent,\n      props.coverComponent &&\n        (props.coverComponent.component || props.coverComponent)\n    )\n  }\n  const CoverComponent = getCoverComponent()\n\n  const closeCoverComponent = () => {\n    toggleCoverComponent(false)\n  }\n\n  useEffect(() => {\n    if (!CoverComponent) return\n    if (\n      !botonicState ||\n      (botonicState.messages && botonicState.messages.length == 0)\n    )\n      toggleCoverComponent(true)\n  }, [])\n\n  const coverComponent = () => {\n    const coverComponentProps = getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.coverComponentProps,\n      props.coverComponent && props.coverComponent.props\n    )\n\n    if (CoverComponent && webchatState.isCoverComponentOpen)\n      return (\n        <CoverComponent\n          closeComponent={closeCoverComponent}\n          {...coverComponentProps}\n        />\n      )\n    return null\n  }\n\n  const messageComponentFromInput = input => {\n    let messageComponent = null\n    if (isText(input)) {\n      messageComponent = (\n        <Text id={input.id} payload={input.payload} from={SENDERS.user}>\n          {input.data}\n        </Text>\n      )\n    } else if (isMedia(input)) {\n      const temporaryDisplayUrl = URL.createObjectURL(input.data)\n      const mediaProps = {\n        id: input.id,\n        from: SENDERS.user,\n        src: temporaryDisplayUrl,\n      }\n      if (isImage(input)) messageComponent = <Image {...mediaProps} />\n      else if (isAudio(input)) messageComponent = <Audio {...mediaProps} />\n      else if (isVideo(input)) messageComponent = <Video {...mediaProps} />\n      else if (isDocument(input))\n        messageComponent = <Document {...mediaProps} />\n    }\n    return messageComponent\n  }\n\n  const sendInput = async input => {\n    if (!input || Object.keys(input).length == 0) return\n    if (isText(input) && (!input.data || !input.data.trim())) return // in case trim() doesn't work in a browser we can use !/\\S/.test(input.data)\n    if (isText(input) && checkBlockInput(input)) return\n    if (!input.id) input.id = uuidv4()\n    const messageComponent = messageComponentFromInput(input)\n    if (messageComponent) addMessageComponent(messageComponent)\n    if (isMedia(input)) input.data = await readDataURL(input.data)\n    sendUserInput(input)\n    updateLatestInput(input)\n    isOnline() && updateLastMessageDate(currentDateString())\n    updateReplies(false)\n    togglePersistentMenu(false)\n    toggleEmojiPicker(false)\n  }\n\n  /* This is the public API this component exposes to its parents\n  https://stackoverflow.com/questions/37949981/call-child-method-from-parent\n  */\n\n  const updateSessionWithUser = userToUpdate =>\n    updateSession(merge(webchatState.session, { user: userToUpdate }))\n\n  useImperativeHandle(ref, () => ({\n    addBotResponse: ({ response, session, lastRoutePath }) => {\n      updateTyping(false)\n      if (Array.isArray(response)) response.map(r => addMessageComponent(r))\n      else if (response) addMessageComponent(response)\n      if (session) {\n        updateSession(merge(session, { user: webchatState.session.user }))\n        const action = session._botonic_action || ''\n        const handoff = action.startsWith('create_case')\n        if (handoff && isDev) addMessageComponent(<Handoff />)\n        updateHandoff(handoff)\n      }\n      if (lastRoutePath) updateLastRoutePath(lastRoutePath)\n      updateLastMessageDate(currentDateString())\n    },\n    setTyping: typing => updateTyping(typing),\n    addUserMessage: message => sendInput(message),\n    updateUser: updateSessionWithUser,\n    openWebchat: () => toggleWebchat(true),\n    closeWebchat: () => toggleWebchat(false),\n    toggleWebchat: () => toggleWebchat(!webchatState.isWebchatOpen),\n    openCoverComponent: () => toggleCoverComponent(true),\n    closeCoverComponent: () => toggleCoverComponent(false),\n    renderCustomComponent: _customComponent => {\n      setCustomComponent(_customComponent)\n      doRenderCustomComponent(true)\n    },\n    unmountCustomComponent: () => doRenderCustomComponent(false),\n    toggleCoverComponent: () =>\n      toggleCoverComponent(!webchatState.isCoverComponentOpen),\n    openWebviewApi: component => openWebviewT(component),\n    setError,\n    setOnline,\n    getMessages: () => webchatState.messagesJSON,\n    isOnline,\n    clearMessages: () => {\n      clearMessages()\n      updateReplies(false)\n    },\n    getLastMessageUpdate: () => webchatState.lastMessageUpdate,\n    updateMessageInfo: (msgId, messageInfo) => {\n      const messageToUpdate = webchatState.messagesJSON.filter(\n        m => m.id == msgId\n      )[0]\n      const updatedMsg = merge(messageToUpdate, messageInfo)\n      if (updatedMsg.ack === 1) delete updatedMsg.unsentInput\n      updateMessage(updatedMsg)\n    },\n    updateWebchatSettings: settings => {\n      const themeUpdates = normalizeWebchatSettings(settings)\n      updateTheme(merge(webchatState.theme, themeUpdates), themeUpdates)\n    },\n  }))\n\n  const resolveCase = () => {\n    updateHandoff(false)\n    updateSession({ ...webchatState.session, _botonic_action: null })\n  }\n\n  const prevSession = usePrevious(webchatState.session)\n  useEffect(() => {\n    // Resume conversation after handoff\n    if (\n      prevSession &&\n      prevSession._botonic_action &&\n      !webchatState.session._botonic_action\n    ) {\n      const action = getParsedAction(prevSession._botonic_action)\n      if (action && action.on_finish) sendPayload(action.on_finish)\n    }\n  }, [webchatState.session._botonic_action])\n\n  const sendText = async (text, payload) => {\n    if (!text) return\n    const input = { type: INPUT.TEXT, data: text, payload }\n    await sendInput(input)\n  }\n\n  const sendPayload = async payload => {\n    if (!payload) return\n    const input = { type: INPUT.POSTBACK, payload }\n    await sendInput(input)\n  }\n\n  const sendAttachment = async attachment => {\n    if (attachment.file) {\n      const attachmentType = getMediaType(attachment.file.type)\n      if (!attachmentType) return\n      const input = {\n        type: attachmentType,\n        data: attachment.file,\n      }\n      await sendInput(input)\n      setCurrentAttachment(undefined)\n    }\n  }\n\n  const sendTextAreaText = () => {\n    sendText(textArea.current.value)\n    textArea.current.value = ''\n  }\n\n  let isTyping = false\n  let typingTimeout = null\n\n  function clearTimeoutWithReset(reset) {\n    const waitTime = 20 * 1000\n    if (typingTimeout) clearTimeout(typingTimeout)\n    if (reset) typingTimeout = setTimeout(stopTyping, waitTime)\n  }\n\n  function startTyping() {\n    isTyping = true\n    sendChatEvent('typing_on')\n  }\n\n  function stopTyping() {\n    clearTimeoutWithReset(false)\n    isTyping = false\n    sendChatEvent('typing_off')\n  }\n\n  const onKeyDown = event => {\n    if (event.keyCode === 13 && event.shiftKey === false) {\n      event.preventDefault()\n      sendTextAreaText()\n      stopTyping()\n    }\n  }\n\n  const onKeyUp = () => {\n    if (textArea.current.value === '') {\n      stopTyping()\n      return\n    }\n    if (!isTyping) {\n      startTyping()\n    }\n    clearTimeoutWithReset(true)\n  }\n\n  const webviewRequestContext = {\n    getString: stringId => props.getString(stringId, webchatState.session),\n    setLocale: locale => props.getString(locale, webchatState.session),\n    session: webchatState.session || {},\n    params: webchatState.webviewParams || {},\n    closeWebview: closeWebview,\n    defaultDelay: props.defaultDelay || 0,\n    defaultTyping: props.defaultTyping || 0,\n  }\n\n  useEffect(() => {\n    if (firstUpdate.current) {\n      firstUpdate.current = false\n      return\n    }\n    if (webchatState.isWebchatOpen && props.onOpen) props.onOpen()\n    if (!webchatState.isWebchatOpen && props.onClose && !firstUpdate.current) {\n      props.onClose()\n      toggleEmojiPicker(false)\n      togglePersistentMenu(false)\n    }\n  }, [webchatState.isWebchatOpen])\n\n  const textArea = useRef()\n\n  const getTriggerImage = () => {\n    const triggerImage = getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.triggerButtonImage,\n      null\n    )\n    if (triggerImage === null) {\n      webchatState.theme.triggerButtonImage = WEBCHAT.DEFAULTS.LOGO\n      return null\n    }\n    return triggerImage\n  }\n\n  const triggerButtonStyle = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.triggerButtonStyle\n  )\n\n  const CustomTriggerButton = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.customTrigger,\n    undefined\n  )\n\n  const triggerButton = () => {\n    if (CustomTriggerButton) {\n      return <CustomTriggerButton />\n    }\n    return (\n      <StyledTriggerButton\n        role={ROLES.TRIGGER_BUTTON}\n        style={{ ...triggerButtonStyle }}\n      >\n        {getTriggerImage() && (\n          <TriggerImage src={resolveImage(getTriggerImage())} />\n        )}\n      </StyledTriggerButton>\n    )\n  }\n\n  const webchatMessageList = () => (\n    <WebchatMessageList style={{ flex: 1 }}>\n      {webchatState.typing && <TypingIndicator />}\n    </WebchatMessageList>\n  )\n  const webchatReplies = () => <WebchatReplies replies={webchatState.replies} />\n\n  const isUserInputEnabled = () => {\n    const isUserInputEnabled = getThemeProperty(\n      WEBCHAT.CUSTOM_PROPERTIES.enableUserInput,\n      props.enableUserInput !== undefined ? props.enableUserInput : true\n    )\n    return isUserInputEnabled && !webchatState.isCoverComponentOpen\n  }\n\n  const userInputEnabled = isUserInputEnabled()\n\n  const userInputArea = () => {\n    return (\n      userInputEnabled && (\n        <UserInputContainer\n          style={{\n            ...getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.userInputStyle),\n          }}\n          className='user-input-container'\n        >\n          {webchatState.isEmojiPickerOpen && (\n            <OpenedEmojiPicker\n              height={webchatState.theme.style.height}\n              onEmojiClick={handleSelectedEmoji}\n              onClick={handleEmojiClick}\n            />\n          )}\n\n          <PersistentMenu\n            onClick={handleMenu}\n            persistentMenu={props.persistentMenu}\n          />\n\n          <TextAreaContainer>\n            <Textarea\n              name='text'\n              onFocus={() => deviceAdapter.onFocus(host)}\n              onBlur={() => deviceAdapter.onBlur()}\n              maxRows={4}\n              wrap='soft'\n              maxLength='1000'\n              placeholder={getThemeProperty(\n                WEBCHAT.CUSTOM_PROPERTIES.textPlaceholder,\n                WEBCHAT.DEFAULTS.PLACEHOLDER\n              )}\n              autoFocus={true}\n              inputRef={textArea}\n              onKeyDown={e => onKeyDown(e)}\n              onKeyUp={onKeyUp}\n              style={{\n                display: 'flex',\n                fontSize: deviceAdapter.fontSize(14),\n                width: '100%',\n                border: 'none',\n                resize: 'none',\n                overflow: 'auto',\n                outline: 'none',\n                flex: '1 1 auto',\n                padding: 10,\n                paddingLeft: persistentMenuOptions ? 0 : 10,\n                fontFamily: 'inherit',\n                ...getThemeProperty(\n                  WEBCHAT.CUSTOM_PROPERTIES.userInputBoxStyle\n                ),\n              }}\n            />\n          </TextAreaContainer>\n\n          <EmojiPicker\n            enableEmojiPicker={props.enableEmojiPicker}\n            onClick={handleEmojiClick}\n          />\n\n          <Attachment\n            enableAttachments={props.enableAttachments}\n            onChange={handleAttachment}\n            accept={getFullMimeWhitelist().join(',')}\n          />\n\n          <SendButton onClick={sendTextAreaText} />\n        </UserInputContainer>\n      )\n    )\n  }\n\n  const webchatWebview = () => (\n    <RequestContext.Provider value={webviewRequestContext}>\n      <WebviewContainer\n        style={{\n          ...getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.webviewStyle),\n          ...mobileStyle,\n        }}\n        webview={webchatState.webview}\n      />\n    </RequestContext.Provider>\n  )\n  let mobileStyle = {}\n  if (isMobile(getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.mobileBreakpoint))) {\n    mobileStyle = getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.mobileStyle) || {\n      width: '100%',\n      height: '100%',\n      right: 0,\n      bottom: 0,\n      borderRadius: 0,\n    }\n  }\n\n  useEffect(() => {\n    // Prod mode\n    saveWebchatState(webchatState)\n    scrollToBottom({ host })\n  }, [webchatState.themeUpdates])\n\n  // Only needed for dev/serve mode\n  const updateWebchatDevSettings = settings => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    useEffect(() => {\n      const themeUpdates = normalizeWebchatSettings(settings)\n      updateTheme(merge(webchatState.theme, themeUpdates), themeUpdates)\n    }, [webchatState.messagesJSON])\n  }\n\n  const DarkenBackground = ({ component }) => {\n    return (\n      <div>\n        {darkBackgroundMenu && (\n          <DarkBackgroundMenu\n            style={{\n              borderRadius: webchatState.theme.style.borderRadius,\n            }}\n          />\n        )}\n        {component}\n      </div>\n    )\n  }\n\n  const _renderCustomComponent = () => {\n    if (!customComponent) return <></>\n    else return customComponent\n  }\n\n  const WebchatComponent = (\n    <WebchatContext.Provider\n      value={{\n        sendText,\n        sendAttachment,\n        sendPayload,\n        sendInput,\n        openWebview,\n        resolveCase,\n        webchatState,\n        getThemeProperty,\n        addMessage,\n        toggleWebchat,\n        updateMessage,\n        updateReplies,\n        updateLatestInput,\n        updateUser: updateSessionWithUser,\n        updateWebchatDevSettings: updateWebchatDevSettings,\n      }}\n    >\n      {!webchatState.isWebchatOpen && (\n        <div\n          onClick={event => {\n            toggleWebchat(true)\n            event.preventDefault()\n          }}\n        >\n          {triggerButton()}\n        </div>\n      )}\n\n      {webchatState.isWebchatOpen && (\n        <StyledWebchat\n          // TODO: Distinguis between multiple instances of webchat, e.g. `${uniqueId}-botonic-webchat`\n          role={ROLES.WEBCHAT}\n          id={WEBCHAT.DEFAULTS.ID}\n          width={webchatState.width}\n          height={webchatState.height}\n          style={{\n            ...webchatState.theme.style,\n            ...mobileStyle,\n          }}\n        >\n          <StyledWebchatHeader\n            onCloseClick={() => {\n              toggleWebchat(false)\n            }}\n          />\n          {webchatState.error.message && (\n            <ErrorMessageContainer>\n              <ErrorMessage>{webchatState.error.message}</ErrorMessage>\n            </ErrorMessageContainer>\n          )}\n          {webchatMessageList()}\n          {webchatState.replies &&\n            Object.keys(webchatState.replies).length > 0 &&\n            webchatReplies()}\n          {webchatState.isPersistentMenuOpen && (\n            <DarkenBackground component={persistentMenu()} />\n          )}\n          {!webchatState.handoff && userInputArea()}\n          {webchatState.webview && webchatWebview()}\n          {webchatState.isCoverComponentOpen && coverComponent()}\n          {webchatState.isCustomComponentRendered &&\n            customComponent &&\n            _renderCustomComponent()}\n        </StyledWebchat>\n      )}\n    </WebchatContext.Provider>\n  )\n  return props.shadowDOM ? (\n    <StyleSheetManager target={host}>{WebchatComponent}</StyleSheetManager>\n  ) : (\n    WebchatComponent\n  )\n})\n"],"file":"webchat.js"}