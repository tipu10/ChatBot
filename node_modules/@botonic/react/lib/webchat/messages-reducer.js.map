{"version":3,"sources":["../../src/webchat/messages-reducer.js"],"names":["messagesReducer","state","action","type","ADD_MESSAGE","addMessageReducer","ADD_MESSAGE_COMPONENT","messagesComponents","payload","UPDATE_MESSAGE","updateMessageReducer","UPDATE_REPLIES","replies","CLEAR_MESSAGES","messagesJSON","UPDATE_LAST_MESSAGE_DATE","lastMessageUpdate","Error","msgIndex","map","m","id","indexOf","msgComponent","updatedMessageComponents","updatedMsgComponent","props","ack","slice","find"],"mappings":";;;;;;;;;;;;;AAAA;;;;;;AASO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAChD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKC,oBAAL;AACE,aAAOC,iBAAiB,CAACJ,KAAD,EAAQC,MAAR,CAAxB;;AACF,SAAKI,8BAAL;AACE,6CACKL,KADL;AAEEM,QAAAA,kBAAkB,gDACZN,KAAK,CAACM,kBAAN,IAA4B,EADhB,IAEhBL,MAAM,CAACM,OAFS;AAFpB;;AAOF,SAAKC,uBAAL;AACE,aAAOC,oBAAoB,CAACT,KAAD,EAAQC,MAAR,CAA3B;;AACF,SAAKS,uBAAL;AACE,6CAAYV,KAAZ;AAAmBW,QAAAA,OAAO,EAAEV,MAAM,CAACM;AAAnC;;AACF,SAAKK,uBAAL;AACE,6CACKZ,KADL;AAEEa,QAAAA,YAAY,EAAE,EAFhB;AAGEP,QAAAA,kBAAkB,EAAE;AAHtB;;AAKF,SAAKQ,iCAAL;AACE,6CACKd,KADL;AAEEe,QAAAA,iBAAiB,EAAEd,MAAM,CAACM;AAF5B;;AAIF;AACE,YAAM,IAAIS,KAAJ,EAAN;AA3BJ;AA6BD,CA9BM;;;;AAgCP,SAASP,oBAAT,CAA8BT,KAA9B,EAAqCC,MAArC,EAA6C;AAC3C,MAAMgB,QAAQ,GAAGjB,KAAK,CAACa,YAAN,CAAmBK,GAAnB,CAAuB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,EAAN;AAAA,GAAxB,EAAkCC,OAAlC,CAA0CpB,MAAM,CAACM,OAAP,CAAea,EAAzD,CAAjB;;AACA,MAAIH,QAAQ,GAAG,CAAC,CAAhB,EAAmB;AACjB,QAAMK,YAAY,GAAGtB,KAAK,CAACM,kBAAN,CAAyBW,QAAzB,CAArB;AACA,QAAIM,wBAAwB,GAAG,EAA/B;;AACA,QAAID,YAAJ,EAAkB;AAChB,UAAME,mBAAmB,mCACpBF,YADoB,GAEpB;AACDG,QAAAA,KAAK,kCAAOH,YAAY,CAACG,KAApB;AAA2BC,UAAAA,GAAG,EAAEzB,MAAM,CAACM,OAAP,CAAemB;AAA/C;AADJ,OAFoB,CAAzB;;AAMAH,MAAAA,wBAAwB,GAAG;AACzBjB,QAAAA,kBAAkB,gDACbN,KAAK,CAACM,kBAAN,CAAyBqB,KAAzB,CAA+B,CAA/B,EAAkCV,QAAlC,CADa,sBAEXO,mBAFW,wCAGbxB,KAAK,CAACM,kBAAN,CAAyBqB,KAAzB,CAA+BV,QAAQ,GAAG,CAA1C,CAHa;AADO,OAA3B;AAOD;;AACD,2CACKjB,KADL;AAEEa,MAAAA,YAAY,gDACPb,KAAK,CAACa,YAAN,CAAmBc,KAAnB,CAAyB,CAAzB,EAA4BV,QAA5B,CADO,sBAELhB,MAAM,CAACM,OAFF,wCAGPP,KAAK,CAACa,YAAN,CAAmBc,KAAnB,CAAyBV,QAAQ,GAAG,CAApC,CAHO;AAFd,OAOKM,wBAPL;AASD;;AAED,SAAOvB,KAAP;AACD;;AAED,SAASI,iBAAT,CAA2BJ,KAA3B,EAAkCC,MAAlC,EAA0C;AACxC,MACED,KAAK,CAACa,YAAN,IACAb,KAAK,CAACa,YAAN,CAAmBe,IAAnB,CAAwB,UAAAT,CAAC;AAAA,WAAIA,CAAC,CAACC,EAAF,KAASnB,MAAM,CAACM,OAAP,CAAea,EAA5B;AAAA,GAAzB,CAFF,EAIE,OAAOpB,KAAP;AACF,yCACKA,KADL;AAEEa,IAAAA,YAAY,gDAAOb,KAAK,CAACa,YAAN,IAAsB,EAA7B,IAAkCZ,MAAM,CAACM,OAAzC;AAFd;AAID","sourcesContent":["import {\n  ADD_MESSAGE,\n  ADD_MESSAGE_COMPONENT,\n  CLEAR_MESSAGES,\n  UPDATE_LAST_MESSAGE_DATE,\n  UPDATE_MESSAGE,\n  UPDATE_REPLIES,\n} from './actions'\n\nexport const messagesReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      return addMessageReducer(state, action)\n    case ADD_MESSAGE_COMPONENT:\n      return {\n        ...state,\n        messagesComponents: [\n          ...(state.messagesComponents || []),\n          action.payload,\n        ],\n      }\n    case UPDATE_MESSAGE:\n      return updateMessageReducer(state, action)\n    case UPDATE_REPLIES:\n      return { ...state, replies: action.payload }\n    case CLEAR_MESSAGES:\n      return {\n        ...state,\n        messagesJSON: [],\n        messagesComponents: [],\n      }\n    case UPDATE_LAST_MESSAGE_DATE:\n      return {\n        ...state,\n        lastMessageUpdate: action.payload,\n      }\n    default:\n      throw new Error()\n  }\n}\n\nfunction updateMessageReducer(state, action) {\n  const msgIndex = state.messagesJSON.map(m => m.id).indexOf(action.payload.id)\n  if (msgIndex > -1) {\n    const msgComponent = state.messagesComponents[msgIndex]\n    let updatedMessageComponents = {}\n    if (msgComponent) {\n      const updatedMsgComponent = {\n        ...msgComponent,\n        ...{\n          props: { ...msgComponent.props, ack: action.payload.ack },\n        },\n      }\n      updatedMessageComponents = {\n        messagesComponents: [\n          ...state.messagesComponents.slice(0, msgIndex),\n          { ...updatedMsgComponent },\n          ...state.messagesComponents.slice(msgIndex + 1),\n        ],\n      }\n    }\n    return {\n      ...state,\n      messagesJSON: [\n        ...state.messagesJSON.slice(0, msgIndex),\n        { ...action.payload },\n        ...state.messagesJSON.slice(msgIndex + 1),\n      ],\n      ...updatedMessageComponents,\n    }\n  }\n\n  return state\n}\n\nfunction addMessageReducer(state, action) {\n  if (\n    state.messagesJSON &&\n    state.messagesJSON.find(m => m.id === action.payload.id)\n  )\n    return state\n  return {\n    ...state,\n    messagesJSON: [...(state.messagesJSON || []), action.payload],\n  }\n}\n"],"file":"messages-reducer.js"}