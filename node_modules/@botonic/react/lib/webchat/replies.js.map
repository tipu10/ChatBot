{"version":3,"sources":["../../src/webchat/replies.jsx"],"names":["RepliesContainer","styled","div","props","justify","wrap","ReplyContainer","options","left","center","right","WebchatReplies","WebchatContext","webchatState","getThemeProperty","scrollbarOptions","enable","autoHide","WEBCHAT","CUSTOM_PROPERTIES","scrollbar","justifyContent","flexWrap","wrapReplies","alignReplies","style","replies","map","r","i"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AAEA;;AACA;;AACA;;;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAGC,6BAAOC,GAAV,oPAGD,UAAAC,KAAK;AAAA,SAAIA,KAAK,CAACC,OAAV;AAAA,CAHJ,EAIP,UAAAD,KAAK;AAAA,SAAIA,KAAK,CAACE,IAAV;AAAA,CAJE,CAAtB;;AAUA,IAAMC,cAAc,GAAGL,6BAAOC,GAAV,mJAApB;;AAMA,IAAMK,OAAO,GAAG;AACdC,EAAAA,IAAI,EAAE,YADQ;AAEdC,EAAAA,MAAM,EAAE,QAFM;AAGdC,EAAAA,KAAK,EAAE;AAHO,CAAhB;;AAMO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAR,KAAK,EAAI;AACrC,oBAA2C,uBAAWS,wBAAX,CAA3C;AAAA,MAAQC,YAAR,eAAQA,YAAR;AAAA,MAAsBC,gBAAtB,eAAsBA,gBAAtB;;AACA,MAAMC,gBAAgB,mCACjB;AAAEC,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,QAAQ,EAAE;AAA1B,GADiB,GAEjBH,gBAAgB,CAACI,mBAAQC,iBAAR,CAA0BC,SAA3B,CAFC,CAAtB;;AAIA,MAAIC,cAAc,GAAG,QAArB;AACA,MAAMC,QAAQ,GAAGR,gBAAgB,CAC/BI,mBAAQC,iBAAR,CAA0BI,WADK,EAE/B,MAF+B,CAAjC;AAIA,MAAID,QAAQ,IAAI,QAAhB,EAA0BD,cAAc,GAAG,YAAjB,CAA1B,KACK,IAAIP,gBAAgB,CAACI,mBAAQC,iBAAR,CAA0BK,YAA3B,CAApB,EACHH,cAAc,GACZd,OAAO,CAACO,gBAAgB,CAACI,mBAAQC,iBAAR,CAA0BK,YAA3B,CAAjB,CADT;AAGF,sBACE,gCAAC,gCAAD;AACE,IAAA,SAAS,EAAET,gBADb;AAEE,IAAA,QAAQ,EAAEA,gBAAgB,CAACE;AAF7B,kBAIE,gCAAC,gBAAD;AACE,IAAA,OAAO,EAAEI,cADX;AAEE,IAAA,IAAI,EAAEC,QAFR;AAGE,IAAA,KAAK,oBACAnB,KAAK,CAACsB,KADN;AAHP,KAOGZ,YAAY,CAACa,OAAb,CAAqBC,GAArB,CAAyB,UAACC,CAAD,EAAIC,CAAJ;AAAA,wBACxB,gCAAC,cAAD;AAAgB,MAAA,GAAG,EAAEA;AAArB,OAAyBD,CAAzB,CADwB;AAAA,GAAzB,CAPH,CAJF,CADF;AAkBD,CAlCM","sourcesContent":["import React, { useContext } from 'react'\nimport styled from 'styled-components'\n\nimport { WEBCHAT } from '../constants'\nimport { WebchatContext } from '../contexts'\nimport { StyledScrollbar } from '../webchat/components/styled-scrollbar'\n\nconst RepliesContainer = styled.div`\n  display: flex;\n  text-align: center;\n  justify-content: ${props => props.justify};\n  flex-wrap: ${props => props.wrap};\n  padding-bottom: 10px;\n  margin-left: 5px;\n  margin-right: 5px;\n`\n\nconst ReplyContainer = styled.div`\n  flex: none;\n  display: inline-block;\n  margin: 3px;\n`\n\nconst options = {\n  left: 'flex-start',\n  center: 'center',\n  right: 'flex-end',\n}\n\nexport const WebchatReplies = props => {\n  const { webchatState, getThemeProperty } = useContext(WebchatContext)\n  const scrollbarOptions = {\n    ...{ enable: true, autoHide: true },\n    ...getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.scrollbar),\n  }\n  let justifyContent = 'center'\n  const flexWrap = getThemeProperty(\n    WEBCHAT.CUSTOM_PROPERTIES.wrapReplies,\n    'wrap'\n  )\n  if (flexWrap == 'nowrap') justifyContent = 'flex-start'\n  else if (getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.alignReplies))\n    justifyContent =\n      options[getThemeProperty(WEBCHAT.CUSTOM_PROPERTIES.alignReplies)]\n\n  return (\n    <StyledScrollbar\n      scrollbar={scrollbarOptions}\n      autoHide={scrollbarOptions.autoHide}\n    >\n      <RepliesContainer\n        justify={justifyContent}\n        wrap={flexWrap}\n        style={{\n          ...props.style,\n        }}\n      >\n        {webchatState.replies.map((r, i) => (\n          <ReplyContainer key={i}>{r}</ReplyContainer>\n        ))}\n      </RepliesContainer>\n    </StyledScrollbar>\n  )\n}\n"],"file":"replies.js"}