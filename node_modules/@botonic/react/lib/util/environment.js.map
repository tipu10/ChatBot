{"version":3,"sources":["../../src/util/environment.js"],"names":["isDev","process","env","NODE_ENV","isProd","staticAsset","path","isURL","scriptBaseURL","document","querySelector","getAttribute","scriptName","split","pop","basePath","replace","e","console","error","resolveImage","src","urlPath","pattern","RegExp","test"],"mappings":";;;;;;AAAO,IAAMA,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAvC;;AACA,IAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAxC;;;AAEA,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,IAAI,EAAI;AACjC,MAAI;AACF,QAAIC,KAAK,CAACD,IAAD,CAAT,EAAiB,OAAOA,IAAP,CADf,CAC2B;;AAC7B,QAAME,aAAa,GAAGC,QAAQ,CAC3BC,aADmB,CACL,mCADK,EAEnBC,YAFmB,CAEN,KAFM,CAAtB;AAGA,QAAMC,UAAU,GAAGJ,aAAa,CAACK,KAAd,CAAoB,GAApB,EAAyBC,GAAzB,EAAnB;AACA,QAAMC,QAAQ,GAAGP,aAAa,CAACQ,OAAd,CAAsB,MAAMJ,UAA5B,EAAwC,GAAxC,CAAjB;AACA,WAAOG,QAAQ,GAAGT,IAAlB;AACD,GARD,CAQE,OAAOW,CAAP,EAAU;AACVC,IAAAA,OAAO,CAACC,KAAR,oCAA0Cb,IAA1C;AACA,WAAOA,IAAP;AACD;AACF,CAbM;;;;AAeA,IAAMc,YAAY,GAAG,SAAfA,YAAe,CAAAC,GAAG,EAAI;AACjC,MAAId,KAAK,CAACc,GAAD,CAAT,EAAgB,OAAOA,GAAP;AAChB,SAAOhB,WAAW,CAACgB,GAAD,CAAlB;AACD,CAHM;;;;AAKA,IAAMd,KAAK,GAAG,SAARA,KAAQ,CAAAe,OAAO,EAAI;AAC9B;AACA,MAAMC,OAAO,GAAG,IAAIC,MAAJ,CAAW,sCAAX,CAAhB;AACA,SAAO,CAAC,CAACD,OAAO,CAACE,IAAR,CAAaH,OAAb,CAAT;AACD,CAJM","sourcesContent":["export const isDev = process.env.NODE_ENV === 'development'\nexport const isProd = process.env.NODE_ENV === 'production'\n\nexport const staticAsset = path => {\n  try {\n    if (isURL(path)) return path // Webpack 5 >= fully resolves absolute path to assets\n    const scriptBaseURL = document\n      .querySelector('script[src$=\"webchat.botonic.js\"]')\n      .getAttribute('src')\n    const scriptName = scriptBaseURL.split('/').pop()\n    const basePath = scriptBaseURL.replace('/' + scriptName, '/')\n    return basePath + path\n  } catch (e) {\n    console.error(`Could not resolve path: '${path}'`)\n    return path\n  }\n}\n\nexport const resolveImage = src => {\n  if (isURL(src)) return src\n  return staticAsset(src)\n}\n\nexport const isURL = urlPath => {\n  // @stephenhay (38 chars) from: https://mathiasbynens.be/demo/url-regex\n  const pattern = new RegExp(/^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*$/)\n  return !!pattern.test(urlPath)\n}\n"],"file":"environment.js"}