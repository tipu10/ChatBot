{"version":3,"sources":["../../src/util/regexs.js"],"names":["deserializeRegex","regexStr","fragments","match","deserialized","RegExp","stringifyWithRegexs","object","JSON","stringify","_","value","toString"],"mappings":";;;;;;;AAAO,IAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,QAAQ,EAAI;AAC1C;AACA,MAAMC,SAAS,GAAGD,QAAQ,CAACE,KAAT,CAAe,4BAAf,CAAlB,CAF0C,CAEqB;;AAC/D,MAAMC,YAAY,GAAG,IAAIC,MAAJ,CAAWH,SAAS,CAAC,CAAD,CAApB,EAAyBA,SAAS,CAAC,CAAD,CAAT,IAAgB,EAAzC,CAArB;AACA,SAAOE,YAAP;AACD,CALM;AAMP;AACA;AACA;AACA;;;;;AACO,IAAME,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,MAAM,EAAI;AAC3C,SAAOC,IAAI,CAACC,SAAL,CAAeF,MAAf,EAAuB,UAACG,CAAD,EAAIC,KAAJ,EAAc;AAC1C,QAAIA,KAAK,YAAYN,MAArB,EAA6B,OAAOM,KAAK,CAACC,QAAN,EAAP;AAC7B,WAAOD,KAAP;AACD,GAHM,CAAP;AAID,CALM","sourcesContent":["export const deserializeRegex = regexStr => {\n  /* eslint-disable no-useless-escape */\n  const fragments = regexStr.match(/\\/(.[^\\/]+)\\/([a-z]{1})?$/i) // https://stackoverflow.com/a/33642463, https://github.com/hubtype/botonic/pull/805#discussion_r437309074\n  const deserialized = new RegExp(fragments[1], fragments[2] || '')\n  return deserialized\n}\n/** Serialization of objects containing regexs:\n * Ref.: https://stackoverflow.com/questions/12075927/serialization-of-regexp\n * Ref.: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify\n */\nexport const stringifyWithRegexs = object => {\n  return JSON.stringify(object, (_, value) => {\n    if (value instanceof RegExp) return value.toString()\n    return value\n  })\n}\n"],"file":"regexs.js"}