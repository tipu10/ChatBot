{"version":3,"sources":["../../src/util/react.js"],"names":["ConditionalWrapper","condition","wrapper","children","renderComponent","renderBrowser","renderNode","Error","mapObjectNonBooleanValues","obj","key","value","Number","hasChildren","element","Boolean","props","hasComplexChildren","Children","toArray","reduce","response","child","deepMapWithIndex","deepMapFn","map","index","Object","assign"],"mappings":";;;;;;;;;;;;AAAA;;AACA;;AAEA;;AAEO,IAAMA,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,MAAcC,OAAd,QAAcA,OAAd;AAAA,MAAuBC,QAAvB,QAAuBA,QAAvB;AAAA,SAChCF,SAAS,GAAGC,OAAO,CAACC,QAAD,CAAV,GAAuBA,QADA;AAAA,CAA3B;;;;AAGA,SAASC,eAAT,QAAwD;AAAA,MAA7BC,aAA6B,SAA7BA,aAA6B;AAAA,MAAdC,UAAc,SAAdA,UAAc;AAC7D,MAAI,sBAAJ,EAAiB,OAAOD,aAAa,EAApB,CAAjB,KACK,IAAI,mBAAJ,EAAc,OAAOC,UAAU,EAAjB;AACnB,QAAM,IAAIC,KAAJ,CAAU,6DAAV,CAAN;AACD;;AAEM,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAAAC,GAAG,EAAI;AAC9C;AACA,SAAO,wBAAUA,GAAV,EAAe,iBAAkB;AAAA;AAAA,QAAhBC,GAAgB;AAAA,QAAXC,KAAW;;AACtC,QAAI,OAAOA,KAAP,KAAiB,SAArB,EAAgC,OAAO,CAACD,GAAD,EAAME,MAAM,CAACD,KAAD,CAAZ,CAAP;AAChC,WAAO,CAACD,GAAD,EAAMC,KAAN,CAAP;AACD,GAHM,CAAP;AAID,CANM;;;;AAQP,IAAME,WAAW,GAAG,SAAdA,WAAc,CAAAC,OAAO;AAAA,SACzB,wCAAeA,OAAf,KAA2BC,OAAO,CAACD,OAAO,CAACE,KAAR,CAAcb,QAAf,CADT;AAAA,CAA3B;;AAGO,IAAMc,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAH,OAAO;AAAA,SACvCD,WAAW,CAACC,OAAD,CAAX,IACAI,gBAASC,OAAT,CAAiBL,OAAO,CAACE,KAAR,CAAcb,QAA/B,EAAyCiB,MAAzC,CACE,UAACC,QAAD,EAAWC,KAAX;AAAA,WAAqBD,QAAQ,iBAAI,2BAAeC,KAAf,CAAjC;AAAA,GADF,EAEE,KAFF,CAFuC;AAAA,CAAlC;;;;AAOA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACpB,QAAD,EAAWqB,SAAX,EAAyB;AACvD,SAAON,gBAASC,OAAT,CAAiBhB,QAAjB,EAA2BsB,GAA3B,CAA+B,UAACH,KAAD,EAAQI,KAAR,EAAkB;AACtD,QAAI,yCAAeJ,KAAf,KAAyBL,kBAAkB,CAACK,KAAD,CAA/C,EAAwD;AACtD;AACA,aAAOE,SAAS,eACd,yBACEF,KADF,EAEEK,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,KAAK,CAACN,KAAxB,CAAd,EAA8C;AAC5Cb,QAAAA,QAAQ,EAAEoB,gBAAgB,CAACD,KAAK,CAACN,KAAN,CAAYb,QAAb,EAAuBqB,SAAvB;AADkB,OAA9C,CAFF,CADc,EAOdE,KAPc,EAQdvB,QARc,CAAhB;AAUD;;AACD,WAAOqB,SAAS,CAACF,KAAD,EAAQI,KAAR,EAAevB,QAAf,CAAhB;AACD,GAfM,CAAP;AAgBD,CAjBM","sourcesContent":["import { isBrowser, isNode } from '@botonic/core'\nimport { Children, cloneElement, isValidElement } from 'react'\n\nimport { mapObject } from './objects'\n\nexport const ConditionalWrapper = ({ condition, wrapper, children }) =>\n  condition ? wrapper(children) : children\n\nexport function renderComponent({ renderBrowser, renderNode }) {\n  if (isBrowser()) return renderBrowser()\n  else if (isNode()) return renderNode()\n  throw new Error('Unexpected process type. Not recognized as browser nor node')\n}\n\nexport const mapObjectNonBooleanValues = obj => {\n  // to avoid React SSR warnings: https://github.com/styled-components/styled-components/issues/1198#issue-262022540\n  return mapObject(obj, ([key, value]) => {\n    if (typeof value === 'boolean') return [key, Number(value)]\n    return [key, value]\n  })\n}\n\nconst hasChildren = element =>\n  isValidElement(element) && Boolean(element.props.children)\n\nexport const hasComplexChildren = element =>\n  hasChildren(element) &&\n  Children.toArray(element.props.children).reduce(\n    (response, child) => response || isValidElement(child),\n    false\n  )\n\nexport const deepMapWithIndex = (children, deepMapFn) => {\n  return Children.toArray(children).map((child, index) => {\n    if (isValidElement(child) && hasComplexChildren(child)) {\n      // Clone the child that has children and map them too\n      return deepMapFn(\n        cloneElement(\n          child,\n          Object.assign(Object.assign({}, child.props), {\n            children: deepMapWithIndex(child.props.children, deepMapFn),\n          })\n        ),\n        index,\n        children\n      )\n    }\n    return deepMapFn(child, index, children)\n  })\n}\n"],"file":"react.js"}