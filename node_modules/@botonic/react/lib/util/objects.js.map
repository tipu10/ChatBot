{"version":3,"sources":["../../src/util/objects.js"],"names":["getProperty","obj","property","undefined","properties","split","i","length","prop","hasOwnProperty","strToBool","string","regex","String","test","mapObject","conversion","key","value","Object","entries","map","reduce","prev","curr"],"mappings":";;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,IAAMA,WAAW,GAAG,SAAdA,WAAc,CAACC,GAAD,EAAMC,QAAN,EAAmB;AAC5C,MAAI,CAACA,QAAL,EAAe,OAAOC,SAAP;AACf,MAAMC,UAAU,GAAGF,QAAQ,CAACG,KAAT,CAAe,GAAf,CAAnB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAAU,CAACG,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AAC1C,QAAME,IAAI,GAAGJ,UAAU,CAACE,CAAD,CAAvB,CAD0C,CAE1C;;AACA,QAAI,CAACL,GAAD,IAAQ,CAACA,GAAG,CAACQ,cAAJ,CAAmBD,IAAnB,CAAb,EAAuC;AACrC,aAAOL,SAAP;AACD,KAFD,MAEO;AACLF,MAAAA,GAAG,GAAGA,GAAG,CAACO,IAAD,CAAT;AACD;AACF;;AACD,SAAOP,GAAP;AACD,CAbM;;;;AAeA,SAASS,SAAT,CAAmBC,MAAnB,EAA2B;AAChC,MAAMC,KAAK,GAAG,sBAAd;AACAD,EAAAA,MAAM,GAAGE,MAAM,CAACF,MAAD,CAAf;AACA,SAAOC,KAAK,CAACE,IAAN,CAAWH,MAAX,CAAP;AACD;;AAEM,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAACd,GAAD,EAAsD;AAAA,MAAhDe,UAAgD,uEAAnC;AAAA;AAAA,QAAEC,GAAF;AAAA,QAAOC,KAAP;;AAAA,WAAkB,CAACD,GAAD,EAAMC,KAAN,CAAlB;AAAA,GAAmC;AAC7E,SACEjB,GAAG,IACHkB,MAAM,CAACC,OAAP,CAAenB,GAAf,EACGoB,GADH,CACOL,UADP,EAEGM,MAFH,CAEU,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AAC5BD,IAAAA,IAAI,CAACC,IAAI,CAAC,CAAD,CAAL,CAAJ,GAAgBA,IAAI,CAAC,CAAD,CAApB;AACA,WAAOD,IAAP;AACD,GALH,EAKK,EALL,CAFF;AASD,CAVM","sourcesContent":["/**\n * given an object and a property, returns the property if exists (recursively), else undefined\n * ex:\n * let obj = { a: { b: { c: 5 } } }\n * getProperty(obj, 'a.b.c'), returns 5\n * getProperty(obj, 'a.b.z'), returns undefined\n */\nexport const getProperty = (obj, property) => {\n  if (!property) return undefined\n  const properties = property.split('.')\n  for (let i = 0; i < properties.length; i++) {\n    const prop = properties[i]\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj || !obj.hasOwnProperty(prop)) {\n      return undefined\n    } else {\n      obj = obj[prop]\n    }\n  }\n  return obj\n}\n\nexport function strToBool(string) {\n  const regex = /^\\s*(true|1|on)\\s*$/i\n  string = String(string)\n  return regex.test(string)\n}\n\nexport const mapObject = (obj, conversion = ([key, value]) => [key, value]) => {\n  return (\n    obj &&\n    Object.entries(obj)\n      .map(conversion)\n      .reduce(function (prev, curr) {\n        prev[curr[0]] = curr[1]\n        return prev\n      }, {})\n  )\n}\n"],"file":"objects.js"}